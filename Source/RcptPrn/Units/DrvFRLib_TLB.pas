unit DrvFRLib_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 17.07.2022 20:34:43 from Type Library described below.

// ************************************************************************  //
// Type Lib: D:\projects\RcptPrn\Source\RcptPrn\1\DrvFR.tlb (1)
// LIBID: {332C8050-469C-4B4D-A192-68CD3CB252BA}
// LCID: 0
// Helpfile: 
// HelpString: Драйвер ФР
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
interface

uses Windows, ActiveX, Classes, Graphics, OleCtrls, StdVCL, Variants;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  DrvFRLibMajorVersion = 1;
  DrvFRLibMinorVersion = 3;

  LIBID_DrvFRLib: TGUID = '{332C8050-469C-4B4D-A192-68CD3CB252BA}';

  IID_IDrvFR: TGUID = '{2951939A-B915-4CC3-8F87-0803B8EB894F}';
  IID_IDrvFR2: TGUID = '{63097449-EC60-4E93-8052-60CB8EC8C993}';
  IID_IDrvFR3: TGUID = '{EFA76EB3-A227-43C5-8AB0-A8F5697978A8}';
  IID_IDrvFR4: TGUID = '{D0C91335-A09D-4A50-9545-D39190FFD364}';
  IID_IDrvFR6: TGUID = '{AB5092AF-AC33-47B4-9F63-B6B6A214BC82}';
  IID_IDrvFR7: TGUID = '{D53A7F63-EA3B-4060-A9EE-C248FAAD6088}';
  IID_IDrvFR8: TGUID = '{112C3B2C-94E4-4405-BF42-59EE54B53DBB}';
  IID_IDrvFR9: TGUID = '{B5CE4922-E17E-41B8-ABE0-B0C1F941AE0D}';
  IID_IDrvFR10: TGUID = '{BC2E30D0-DB1C-4A16-8956-9868C468642C}';
  IID_IDrvFR11: TGUID = '{E97A2450-50A2-4A9C-AFA3-14A55067B2B0}';
  IID_IDrvFR12: TGUID = '{3C9DA2CB-0DBA-4984-9095-BB5068A0256F}';
  IID_IDrvFR13: TGUID = '{AA64E75D-A37F-46CA-93B1-2682B70ADE3C}';
  IID_IDrvFR14: TGUID = '{634A3C3E-8D9B-415A-8241-34AF9E86DDF0}';
  IID_IDrvFR44: TGUID = '{D3F9EDA6-A5EA-492A-861F-AC9009B480D9}';
  IID_IDrvFR45: TGUID = '{2831E8FE-1486-4CAA-8968-5DBE4D84326B}';
  IID_IDrvFR46: TGUID = '{570BB7D4-A58D-47CB-8DED-045170687AB1}';
  IID_IDrvFR47: TGUID = '{6D5AE171-6E17-4E72-B512-5FE89F5D8E3B}';
  IID_IDrvFR48: TGUID = '{A9BFA98D-04ED-4B1E-A874-4C6C3A91930E}';
  IID_IDrvFR49: TGUID = '{043489E2-2E2F-4404-8DCF-9FD484D29E33}';
  IID_IDrvFR1C: TGUID = '{241707F7-BF29-4858-8FF8-B2502344EBE5}';
  CLASS_DrvFR1C: TGUID = '{129C1D7A-384D-4CD6-9F28-7CF321FF9D04}';
  CLASS_DrvFR3: TGUID = '{E0F9B0D6-E395-4DAD-B1E7-75B63FBE1FC7}';
  IID_IDrvFR1C11: TGUID = '{9941F158-93F5-4DA2-A333-BB4937B58E05}';
  CLASS_DrvFR1C11: TGUID = '{44809D9F-9A23-4CDD-A4CC-39A052C3BDFB}';
  IID_IDrvFR1C17: TGUID = '{135578E8-34E8-440C-AFEC-993C33CC9153}';
  CLASS_DrvFR1C17: TGUID = '{6A751D33-0AAB-4339-BCC4-8056B3FC87F4}';
  IID_IDrvFR1C22: TGUID = '{DFD84A0D-EFCF-4805-B8CF-125F2996576A}';
  CLASS_DrvFR1C22: TGUID = '{E5903D73-66CC-42D7-9647-DBD2C837D8A7}';
  IID_IDrvFR1C30: TGUID = '{E390D34B-02C3-46C8-803C-DB8131AC5331}';
  CLASS_DrvFR1C30: TGUID = '{32D32C7A-CEF9-4AC5-8953-3D6DF81ABBD6}';
  CLASS_DrvFR: TGUID = '{E187099F-8C5C-4723-8866-D8DBB6353ADE}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum TCashControlProtocol
type
  TCashControlProtocol = TOleEnum;
const
  cpCashControl = $00000000;
  cpPOSControl = $00000001;
  cpCashControl_2_11 = $00000002;

// Constants for enum TBarcodePrintType
type
  TBarcodePrintType = TOleEnum;
const
  TBarcodePrintType_DUMMY = $00000000;

// Constants for enum TBarcodeAlignment
type
  TBarcodeAlignment = TOleEnum;
const
  baCenter = $00000000;
  baLeft = $00000001;
  baRight = $00000002;

// Constants for enum TFinishDocumentMode
type
  TFinishDocumentMode = TOleEnum;
const
  fdmTrailerDisabled = $00000000;
  fdmTrailerEnabled = $00000001;

// Constants for enum TBufferingType
type
  TBufferingType = TOleEnum;
const
  BUFFERING_TYPE_NONE = $00000000;
  BUFFERING_TYPE_RECEIPT = $00000001;

// Constants for enum TModelParam
type
  TModelParam = TOleEnum;
const
  mpCapJrnSensor = $00000001;
  mpCapJrnOpticalSensor = $00000002;
  mpCapJrnLeverSensor = $00000003;
  mpCapRecSensor = $00000004;
  mpCapRecOpticalSensor = $00000005;
  mpCapRecLeverSensor = $00000006;
  mpCapSlpDocumentHiSensor = $00000007;
  mpCapSlpDocumentLoSensor = $00000008;
  mpCapCoverSensor = $00000009;
  mpCapEKLZOverflowSensor = $0000000A;
  mpCapTaxCalc = $0000000B;
  mpTaxCalcField = $0000000C;
  mpCapCashDrawerAsPresenter = $0000000D;
  mpCapCashDrawerSensor = $0000000E;
  mpCapPrsPaperInSensor = $0000000F;
  mpCapPrsPaperOutSensor = $00000010;
  mpCapPresenter = $00000011;
  mpCapPresenterCommands = $00000012;
  mpCapBillAcceptor = $00000013;
  mpCapSlip = $00000014;
  mpCapNonfiscalDocument = $00000015;
  mpCapJournal = $00000016;
  mpCapTaxKeyboard = $00000017;
  mpFont1Width = $00000018;
  mpFont2Width = $00000019;
  mpSwapLineBytes = $0000001A;
  mpFirstDrawLine = $0000001B;
  mpCapCashCore = $0000001C;
  mpInnDigitCount = $0000001D;
  mpRnmDigitCount = $0000001E;
  mpID = $0000001F;
  mpModelID = $00000020;
  mpName = $00000021;
  mpCapEJournal = $00000022;
  mpCapCutterPresent = $00000023;
  mpOperRegNumber = $000003E8;
  mpCashRegNumber = $000007D0;
  mpDefaultTaxPassword = $00000024;
  mpDefaultSysPassword = $00000025;
  mpLongRnmDigitCount = $00000026;
  mpLongSerialDigitCount = $00000027;
  mpCapTaxPasswordLock = $00000028;
  mpCapInnLeadingZeros = $00000029;
  mpCapRnmLeadingZeros = $0000002A;
  mpBluetoothTableNumber = $0000002B;
  mpCapAltProtocol = $0000002C;
  mpCapWrapNonFiscalString = $0000002D;
  mpCapWrapWithFontNonFiscapString = $0000002E;
  mpCapWrapFiscalString = $0000002F;
  mpCapWrapWithFontFiscalString = $00000030;
  mpCapChiefCashier = $00000031;
  mpCapLastPrintResult = $00000032;
  mpCapLoadBlockGraphics = $00000033;
  mpCapErrorDescription = $00000034;
  mpMaxCmdLength = $00000035;
  mpCapPrintFlagsGraphics = $00000036;
  mpMaxLineWidth = $00000037;
  mpCapRecSensorVert = $00000038;
  mpCashRegNumberEx = $00000BB8;
  mpCapSKNO = $00000039;
  mpCapDrawScale = $0000003A;
  mpCap2DBarcode = $0000003B;
  mpCapMFP = $0000003C;
  mpCapEJ5 = $0000003D;
  mpCapGraphics512 = $0000003E;
  mpMaxLineWidth512 = $0000003F;
  mpMaxLineCount512 = $00000040;
  mpHeaderTableNumber = $00000041;
  mpTrailerTableNumber = $00000042;
  mpHeaderStartRow = $00000043;
  mpTrailerStartRow = $00000044;
  mpNumHeaderLines = $00000045;
  mpNumTrailerLines = $00000046;
  mpCapFN = $00000047;
  mpFSTableNumber = $00000048;
  mpOFDTableNumber = $00000049;
  mpCapEoD = $0000004A;
  mpEmbeddedTableNumber = $0000004B;
  mpFFDVersionTableNumber = $0000004C;
  mpFFDVersionFieldNumber = $0000004D;
  mpCapTagAutoPrint = $0000004E;
  mpCap2DBarcodeFooter = $0000004F;
  mpCapFN11 = $00000050;
  mpCapCorrectionAsRec = $00000051;
  mpCapExtendedErrorCode = $00000052;
  mpCapFDExtendedAnswer = $00000053;
  mpCapAuthorization = $00000054;

// Constants for enum TStatusCommand
type
  TStatusCommand = TOleEnum;
const
  STATUS_COMMAND_DRIVER_SELECTION = $00000000;
  STATUS_COMMAND_SHORT = $00000001;
  STATUS_COMMAND_LONG = $00000002;

// Constants for enum TBinaryConversion
type
  TBinaryConversion = TOleEnum;
const
  BINARY_CONVERSION_NONE = $00000000;
  BINARY_CONVERSION_HEX = $00000001;

// Constants for enum TCodePage
type
  TCodePage = TOleEnum;
const
  CODE_PAGE_DEFAULT = $00000000;
  CODE_PAGE_RUSSIAN = $00000001;
  CODE_PAGE_ARMENIAN_UNICODE = $00000002;
  CODE_PAGE_ARMENIAN_ANSI = $00000003;
  CODE_PAGE_KAZAKH_UNICODE = $00000004;
  CODE_PAGE_TURKMEN_UNICODE = $00000005;

// Constants for enum TTagType
type
  TTagType = TOleEnum;
const
  ttByte = $00000000;
  ttUint16 = $00000001;
  ttUInt32 = $00000002;
  ttVLN = $00000003;
  ttFVLN = $00000004;
  ttBitMask = $00000005;
  ttUnixTime = $00000006;
  ttString = $00000007;
  ttSTLV = $00000008;
  ttByteArray = $00000009;
  ttStringNotFixed = $0000000A;
  ttFVLND = $0000000B;

// Constants for enum TFileType
type
  TFileType = TOleEnum;
const
  ftLoader = $00000000;
  ftFirmware = $00000001;

// Constants for enum TRequestDocumentType
type
  TRequestDocumentType = TOleEnum;
const
  rdtDocument = $00000000;
  rdtRegistration = $00000001;

// Constants for enum TFwUpdateMethod
type
  TFwUpdateMethod = TOleEnum;
const
  umDFU = $00000000;
  umXModem = $00000001;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IDrvFR = interface;
  IDrvFRDisp = dispinterface;
  IDrvFR2 = interface;
  IDrvFR2Disp = dispinterface;
  IDrvFR3 = interface;
  IDrvFR3Disp = dispinterface;
  IDrvFR4 = interface;
  IDrvFR4Disp = dispinterface;
  IDrvFR6 = interface;
  IDrvFR6Disp = dispinterface;
  IDrvFR7 = interface;
  IDrvFR7Disp = dispinterface;
  IDrvFR8 = interface;
  IDrvFR8Disp = dispinterface;
  IDrvFR9 = interface;
  IDrvFR9Disp = dispinterface;
  IDrvFR10 = interface;
  IDrvFR10Disp = dispinterface;
  IDrvFR11 = interface;
  IDrvFR11Disp = dispinterface;
  IDrvFR12 = interface;
  IDrvFR12Disp = dispinterface;
  IDrvFR13 = interface;
  IDrvFR13Disp = dispinterface;
  IDrvFR14 = interface;
  IDrvFR14Disp = dispinterface;
  IDrvFR44 = interface;
  IDrvFR44Disp = dispinterface;
  IDrvFR45 = interface;
  IDrvFR45Disp = dispinterface;
  IDrvFR46 = interface;
  IDrvFR46Disp = dispinterface;
  IDrvFR47 = interface;
  IDrvFR47Disp = dispinterface;
  IDrvFR48 = interface;
  IDrvFR48Disp = dispinterface;
  IDrvFR49 = interface;
  IDrvFR49Disp = dispinterface;
  IDrvFR1C = interface;
  IDrvFR1CDisp = dispinterface;
  IDrvFR1C11 = interface;
  IDrvFR1C11Disp = dispinterface;
  IDrvFR1C17 = interface;
  IDrvFR1C17Disp = dispinterface;
  IDrvFR1C22 = interface;
  IDrvFR1C22Disp = dispinterface;
  IDrvFR1C30 = interface;
  IDrvFR1C30Disp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  DrvFR1C = IDrvFR1C;
  DrvFR3 = IDrvFR11;
  DrvFR1C11 = IDrvFR1C11;
  DrvFR1C17 = IDrvFR1C17;
  DrvFR1C22 = IDrvFR1C22;
  DrvFR1C30 = IDrvFR1C30;
  DrvFR = IDrvFR49;


// *********************************************************************//
// Interface: IDrvFR
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2951939A-B915-4CC3-8F87-0803B8EB894F}
// *********************************************************************//
  IDrvFR = interface(IDispatch)
    ['{2951939A-B915-4CC3-8F87-0803B8EB894F}']
    function AddLD: Integer; safecall;
    function Beep: Integer; safecall;
    function Buy: Integer; safecall;
    function BuyEx: Integer; safecall;
    function CancelCheck: Integer; safecall;
    function CashIncome: Integer; safecall;
    function CashOutcome: Integer; safecall;
    function Charge: Integer; safecall;
    function CheckSubTotal: Integer; safecall;
    function CloseCheck: Integer; safecall;
    function ConfirmDate: Integer; safecall;
    function Connect: Integer; safecall;
    function ContinuePrint: Integer; safecall;
    function Correction: Integer; safecall;
    function CutCheck: Integer; safecall;
    function DampRequest: Integer; safecall;
    function DeleteLD: Integer; safecall;
    function Disconnect: Integer; safecall;
    function Discount: Integer; safecall;
    function DozeOilCheck: Integer; safecall;
    function Draw: Integer; safecall;
    function EKLZDepartmentReportInDatesRange: Integer; safecall;
    function EKLZDepartmentReportInSessionsRange: Integer; safecall;
    function EKLZJournalOnSessionNumber: Integer; safecall;
    function EKLZSessionReportInDatesRange: Integer; safecall;
    function EKLZSessionReportInSessionsRange: Integer; safecall;
    function ExchangeBytes: Integer; safecall;
    function FeedDocument: Integer; safecall;
    function Fiscalization: Integer; safecall;
    function FiscalReportForDatesRange: Integer; safecall;
    function FiscalReportForSessionRange: Integer; safecall;
    function GetActiveLD: Integer; safecall;
    function EnumLD: Integer; safecall;
    function GetCashReg: Integer; safecall;
    function GetCountLD: Integer; safecall;
    function GetData: Integer; safecall;
    function GetDeviceMetrics: Integer; safecall;
    function GetECRStatus: Integer; safecall;
    function GetShortECRStatus: Integer; safecall;
    function GetExchangeParam: Integer; safecall;
    function GetFieldStruct: Integer; safecall;
    function GetFiscalizationParameters: Integer; safecall;
    function GetFMRecordsSum: Integer; safecall;
    function GetLastFMRecordDate: Integer; safecall;
    function GetLiterSumCounter: Integer; safecall;
    function GetOperationReg: Integer; safecall;
    function GetParamLD: Integer; safecall;
    function GetRangeDatesAndSessions: Integer; safecall;
    function GetRKStatus: Integer; safecall;
    function GetTableStruct: Integer; safecall;
    function InitFM: Integer; safecall;
    function InitTable: Integer; safecall;
    function InterruptDataStream: Integer; safecall;
    function InterruptFullReport: Integer; safecall;
    function InterruptTest: Integer; safecall;
    function LaunchRK: Integer; safecall;
    function LoadLineData: Integer; safecall;
    function OilSale: Integer; safecall;
    function OpenCheck: Integer; safecall;
    function OpenDrawer: Integer; safecall;
    function PrintBarCode: Integer; safecall;
    function PrintDepartmentReport: Integer; safecall;
    function PrintDocumentTitle: Integer; safecall;
    function PrintOperationReg: Integer; safecall;
    function PrintReportWithCleaning: Integer; safecall;
    function PrintReportWithoutCleaning: Integer; safecall;
    function PrintString: Integer; safecall;
    function PrintWideString: Integer; safecall;
    function ReadEKLZDocumentOnKPK: Integer; safecall;
    function ReadEKLZSessionTotal: Integer; safecall;
    function ReadLicense: Integer; safecall;
    function ReadTable: Integer; safecall;
    function RepeatDocument: Integer; safecall;
    function ResetAllTRK: Integer; safecall;
    function ResetRK: Integer; safecall;
    function ResetSettings: Integer; safecall;
    function ResetSummary: Integer; safecall;
    function ReturnBuy: Integer; safecall;
    function ReturnBuyEx: Integer; safecall;
    function ReturnSale: Integer; safecall;
    function ReturnSaleEx: Integer; safecall;
    function Sale: Integer; safecall;
    function SaleEx: Integer; safecall;
    function SetActiveLD: Integer; safecall;
    function SetDate: Integer; safecall;
    function SetDozeInMilliliters: Integer; safecall;
    function SetDozeInMoney: Integer; safecall;
    function SetExchangeParam: Integer; safecall;
    function SetParamLD: Integer; safecall;
    function SetPointPosition: Integer; safecall;
    function SetRKParameters: Integer; safecall;
    function SetSerialNumber: Integer; safecall;
    function SetTime: Integer; safecall;
    function ShowProperties: Integer; safecall;
    function StopEKLZDocumentPrinting: Integer; safecall;
    function StopRK: Integer; safecall;
    function Storno: Integer; safecall;
    function StornoEx: Integer; safecall;
    function StornoCharge: Integer; safecall;
    function StornoDiscount: Integer; safecall;
    function SummOilCheck: Integer; safecall;
    function SysAdminCancelCheck: Integer; safecall;
    function Test: Integer; safecall;
    function WriteLicense: Integer; safecall;
    function WriteTable: Integer; safecall;
    function Get_BarCode: WideString; safecall;
    procedure Set_BarCode(const Value: WideString); safecall;
    function Get_BatteryCondition: WordBool; safecall;
    function Get_BatteryVoltage: Double; safecall;
    function Get_BaudRate: Integer; safecall;
    procedure Set_BaudRate(Value: Integer); safecall;
    function Get_Change: Currency; safecall;
    function Get_CheckResult: Currency; safecall;
    procedure Set_CheckResult(Value: Currency); safecall;
    function Get_CheckType: Integer; safecall;
    procedure Set_CheckType(Value: Integer); safecall;
    function Get_ComNumber: Integer; safecall;
    procedure Set_ComNumber(Value: Integer); safecall;
    function Get_ContentsOfCashRegister: Currency; safecall;
    function Get_ContentsOfOperationRegister: Integer; safecall;
    function Get_CurrentDozeInMilliliters: Integer; safecall;
    procedure Set_CurrentDozeInMilliliters(Value: Integer); safecall;
    function Get_CurrentDozeInMoney: Currency; safecall;
    procedure Set_CurrentDozeInMoney(Value: Currency); safecall;
    function Get_CutType: WordBool; safecall;
    procedure Set_CutType(Value: WordBool); safecall;
    function Get_DataBlock: WideString; safecall;
    function Get_DataBlockNumber: Integer; safecall;
    function Get_Date: TDateTime; safecall;
    procedure Set_Date(Value: TDateTime); safecall;
    function Get_Department: Integer; safecall;
    procedure Set_Department(Value: Integer); safecall;
    function Get_DeviceCode: Integer; safecall;
    procedure Set_DeviceCode(Value: Integer); safecall;
    function Get_DeviceCodeDescription: WideString; safecall;
    function Get_DiscountOnCheck: Double; safecall;
    procedure Set_DiscountOnCheck(Value: Double); safecall;
    function Get_DocumentName: WideString; safecall;
    procedure Set_DocumentName(const Value: WideString); safecall;
    function Get_DocumentNumber: Integer; safecall;
    procedure Set_DocumentNumber(Value: Integer); safecall;
    function Get_DozeInMilliliters: Integer; safecall;
    procedure Set_DozeInMilliliters(Value: Integer); safecall;
    function Get_DozeInMoney: Currency; safecall;
    procedure Set_DozeInMoney(Value: Currency); safecall;
    function Get_DrawerNumber: Integer; safecall;
    procedure Set_DrawerNumber(Value: Integer); safecall;
    function Get_ECRAdvancedMode: Integer; safecall;
    function Get_ECRAdvancedModeDescription: WideString; safecall;
    function Get_ECRBuild: Integer; safecall;
    function Get_ECRFlags: Integer; safecall;
    function Get_ECRInput: WideString; safecall;
    function Get_ECRMode: Integer; safecall;
    function Get_ECRMode8Status: Integer; safecall;
    function Get_ECRModeDescription: WideString; safecall;
    function Get_ECROutput: WideString; safecall;
    function Get_ECRSoftDate: TDateTime; safecall;
    function Get_ECRSoftVersion: WideString; safecall;
    function Get_EKLZIsPresent: WordBool; safecall;
    function Get_EmergencyStopCode: Integer; safecall;
    function Get_EmergencyStopCodeDescription: WideString; safecall;
    function Get_FieldName: WideString; safecall;
    function Get_FieldNumber: Integer; safecall;
    procedure Set_FieldNumber(Value: Integer); safecall;
    function Get_FieldSize: Integer; safecall;
    function Get_FieldType: WordBool; safecall;
    function Get_FirstLineNumber: Integer; safecall;
    procedure Set_FirstLineNumber(Value: Integer); safecall;
    function Get_FirstSessionDate: TDateTime; safecall;
    procedure Set_FirstSessionDate(Value: TDateTime); safecall;
    function Get_FirstSessionNumber: Integer; safecall;
    procedure Set_FirstSessionNumber(Value: Integer); safecall;
    function Get_FM1IsPresent: WordBool; safecall;
    function Get_FM2IsPresent: WordBool; safecall;
    function Get_FMBuild: Integer; safecall;
    function Get_FMFlags: Integer; safecall;
    function Get_FMOverflow: WordBool; safecall;
    function Get_FMSoftDate: TDateTime; safecall;
    function Get_FMSoftVersion: WideString; safecall;
    function Get_FreeRecordInFM: Integer; safecall;
    function Get_FreeRegistration: Integer; safecall;
    function Get_INN: WideString; safecall;
    procedure Set_INN(const Value: WideString); safecall;
    function Get_IsCheckClosed: WordBool; safecall;
    function Get_IsCheckMadeOut: WordBool; safecall;
    function Get_IsDrawerOpen: WordBool; safecall;
    function Get_JournalRibbonIsPresent: WordBool; safecall;
    function Get_JournalRibbonLever: WordBool; safecall;
    function Get_JournalRibbonOpticalSensor: WordBool; safecall;
    function Get_KPKNumber: Integer; safecall;
    procedure Set_KPKNumber(Value: Integer); safecall;
    function Get_LastLineNumber: Integer; safecall;
    procedure Set_LastLineNumber(Value: Integer); safecall;
    function Get_LastSessionDate: TDateTime; safecall;
    procedure Set_LastSessionDate(Value: TDateTime); safecall;
    function Get_LastSessionNumber: Integer; safecall;
    procedure Set_LastSessionNumber(Value: Integer); safecall;
    function Get_License: WideString; safecall;
    procedure Set_License(const Value: WideString); safecall;
    function Get_LicenseIsPresent: WordBool; safecall;
    function Get_LidPositionSensor: WordBool; safecall;
    function Get_LineData: WideString; safecall;
    procedure Set_LineData(const Value: WideString); safecall;
    function Get_LineNumber: Integer; safecall;
    procedure Set_LineNumber(Value: Integer); safecall;
    function Get_LogicalNumber: Integer; safecall;
    function Get_MAXValueOfField: Integer; safecall;
    function Get_MINValueOfField: Integer; safecall;
    function Get_Motor: WordBool; safecall;
    function Get_NameCashReg: WideString; safecall;
    function Get_NameOperationReg: WideString; safecall;
    function Get_NewPasswordTI: Integer; safecall;
    procedure Set_NewPasswordTI(Value: Integer); safecall;
    function Get_OpenDocumentNumber: Integer; safecall;
    function Get_OperatorNumber: Integer; safecall;
    function Get_Password: Integer; safecall;
    procedure Set_Password(Value: Integer); safecall;
    function Get_Pistol: WordBool; safecall;
    function Get_PointPosition: WordBool; safecall;
    procedure Set_PointPosition(Value: WordBool); safecall;
    function Get_PortNumber: Integer; safecall;
    procedure Set_PortNumber(Value: Integer); safecall;
    function Get_Price: Currency; safecall;
    procedure Set_Price(Value: Currency); safecall;
    function Get_Quantity: Double; safecall;
    procedure Set_Quantity(Value: Double); safecall;
    function Get_QuantityOfOperations: Integer; safecall;
    function Get_ReceiptRibbonIsPresent: WordBool; safecall;
    function Get_ReceiptRibbonLever: WordBool; safecall;
    function Get_ReceiptRibbonOpticalSensor: WordBool; safecall;
    function Get_RegisterNumber: Integer; safecall;
    procedure Set_RegisterNumber(Value: Integer); safecall;
    function Get_RegistrationNumber: Integer; safecall;
    procedure Set_RegistrationNumber(Value: Integer); safecall;
    function Get_ReportType: WordBool; safecall;
    procedure Set_ReportType(Value: WordBool); safecall;
    function Get_ResultCode: Integer; safecall;
    function Get_ResultCodeDescription: WideString; safecall;
    function Get_RKNumber: Integer; safecall;
    procedure Set_RKNumber(Value: Integer); safecall;
    function Get_RNM: WideString; safecall;
    procedure Set_RNM(const Value: WideString); safecall;
    function Get_RoughValve: WordBool; safecall;
    function Get_RowNumber: Integer; safecall;
    procedure Set_RowNumber(Value: Integer); safecall;
    function Get_RunningPeriod: Integer; safecall;
    procedure Set_RunningPeriod(Value: Integer); safecall;
    function Get_SerialNumber: WideString; safecall;
    procedure Set_SerialNumber(const Value: WideString); safecall;
    function Get_SessionNumber: Integer; safecall;
    procedure Set_SessionNumber(Value: Integer); safecall;
    function Get_SlipDocumentIsMoving: WordBool; safecall;
    function Get_SlipDocumentIsPresent: WordBool; safecall;
    function Get_SlowingInMilliliters: Integer; safecall;
    procedure Set_SlowingInMilliliters(Value: Integer); safecall;
    function Get_SlowingValve: WordBool; safecall;
    function Get_StatusRK: Integer; safecall;
    function Get_StatusRKDescription: WideString; safecall;
    function Get_StringForPrinting: WideString; safecall;
    procedure Set_StringForPrinting(const Value: WideString); safecall;
    function Get_StringQuantity: Integer; safecall;
    procedure Set_StringQuantity(Value: Integer); safecall;
    function Get_Summ1: Currency; safecall;
    procedure Set_Summ1(Value: Currency); safecall;
    function Get_Summ2: Currency; safecall;
    procedure Set_Summ2(Value: Currency); safecall;
    function Get_Summ3: Currency; safecall;
    procedure Set_Summ3(Value: Currency); safecall;
    function Get_Summ4: Currency; safecall;
    procedure Set_Summ4(Value: Currency); safecall;
    function Get_TableName: WideString; safecall;
    function Get_TableNumber: Integer; safecall;
    procedure Set_TableNumber(Value: Integer); safecall;
    function Get_Tax1: Integer; safecall;
    procedure Set_Tax1(Value: Integer); safecall;
    function Get_Tax2: Integer; safecall;
    procedure Set_Tax2(Value: Integer); safecall;
    function Get_Tax3: Integer; safecall;
    procedure Set_Tax3(Value: Integer); safecall;
    function Get_Tax4: Integer; safecall;
    procedure Set_Tax4(Value: Integer); safecall;
    function Get_Time: TDateTime; safecall;
    procedure Set_Time(Value: TDateTime); safecall;
    function Get_Timeout: Integer; safecall;
    procedure Set_Timeout(Value: Integer); safecall;
    function Get_TimeStr: WideString; safecall;
    procedure Set_TimeStr(const Value: WideString); safecall;
    function Get_TransferBytes: WideString; safecall;
    procedure Set_TransferBytes(const Value: WideString); safecall;
    function Get_TRKNumber: Integer; safecall;
    procedure Set_TRKNumber(Value: Integer); safecall;
    function Get_TypeOfLastEntryFM: WordBool; safecall;
    function Get_TypeOfSumOfEntriesFM: WordBool; safecall;
    procedure Set_TypeOfSumOfEntriesFM(Value: WordBool); safecall;
    function Get_UCodePage: Integer; safecall;
    function Get_UDescription: WideString; safecall;
    function Get_UMajorProtocolVersion: Integer; safecall;
    function Get_UMajorType: Integer; safecall;
    function Get_UMinorProtocolVersion: Integer; safecall;
    function Get_UMinorType: Integer; safecall;
    function Get_UModel: Integer; safecall;
    function Get_UseJournalRibbon: WordBool; safecall;
    procedure Set_UseJournalRibbon(Value: WordBool); safecall;
    function Get_UseReceiptRibbon: WordBool; safecall;
    procedure Set_UseReceiptRibbon(Value: WordBool); safecall;
    function Get_UseSlipDocument: WordBool; safecall;
    procedure Set_UseSlipDocument(Value: WordBool); safecall;
    function Get_ValueOfFieldInteger: Integer; safecall;
    procedure Set_ValueOfFieldInteger(Value: Integer); safecall;
    function Get_ValueOfFieldString: WideString; safecall;
    procedure Set_ValueOfFieldString(const Value: WideString); safecall;
    function PrintStringWithFont: Integer; safecall;
    function Get_FontType: Integer; safecall;
    procedure Set_FontType(Value: Integer); safecall;
    function Get_LDBaudrate: Integer; safecall;
    procedure Set_LDBaudrate(Value: Integer); safecall;
    function Get_LDComNumber: Integer; safecall;
    procedure Set_LDComNumber(Value: Integer); safecall;
    function Get_LDCount: Integer; safecall;
    function Get_LDIndex: Integer; safecall;
    procedure Set_LDIndex(Value: Integer); safecall;
    function Get_LDName: WideString; safecall;
    procedure Set_LDName(const Value: WideString); safecall;
    function Get_LDNumber: Integer; safecall;
    procedure Set_LDNumber(Value: Integer); safecall;
    function Get_WaitPrintingTime: Integer; safecall;
    function Get_IsPrinterLeftSensorFailure: WordBool; safecall;
    function Get_IsPrinterRightSensorFailure: WordBool; safecall;
    function EKLZActivizationResult: Integer; safecall;
    function EKLZActivization: Integer; safecall;
    function CloseEKLZArchive: Integer; safecall;
    function GetEKLZSerialNumber: Integer; safecall;
    function Get_EKLZNumber: WideString; safecall;
    function EKLZInterrupt: Integer; safecall;
    function GetEKLZCode1Report: Integer; safecall;
    function Get_LastKPKDocumentResult: Currency; safecall;
    function Get_LastKPKDate: TDateTime; safecall;
    function Get_LastKPKTime: TDateTime; safecall;
    function Get_LastKPKNumber: Integer; safecall;
    function Get_EKLZFlags: Integer; safecall;
    function GetEKLZCode2Report: Integer; safecall;
    function TestEKLZArchiveIntegrity: Integer; safecall;
    function Get_TestNumber: Integer; safecall;
    procedure Set_TestNumber(Value: Integer); safecall;
    function Get_EKLZVersion: WideString; safecall;
    function Get_EKLZData: WideString; safecall;
    function GetEKLZVersion: Integer; safecall;
    function InitEKLZArchive: Integer; safecall;
    function GetEKLZData: Integer; safecall;
    function GetEKLZJournal: Integer; safecall;
    function GetEKLZDocument: Integer; safecall;
    function GetEKLZDepartmentReportInDatesRange: Integer; safecall;
    function GetEKLZDepartmentReportInSessionsRange: Integer; safecall;
    function GetEKLZSessionReportInDatesRange: Integer; safecall;
    function GetEKLZSessionReportInSessionsRange: Integer; safecall;
    function GetEKLZSessionTotal: Integer; safecall;
    function GetEKLZActivizationResult: Integer; safecall;
    function SetEKLZResultCode: Integer; safecall;
    function Get_EKLZResultCode: Integer; safecall;
    procedure Set_EKLZResultCode(Value: Integer); safecall;
    function Get_FMResultCode: Integer; safecall;
    function Get_PowerSourceVoltage: Double; safecall;
    function Get_IsEKLZOverflow: WordBool; safecall;
    function OpenFiscalSlipDocument: Integer; safecall;
    function OpenStandardFiscalSlipDocument: Integer; safecall;
    function RegistrationOnSlipDocument: Integer; safecall;
    function StandardRegistrationOnSlipDocument: Integer; safecall;
    function ChargeOnSlipDocument: Integer; safecall;
    function StandardChargeOnSlipDocument: Integer; safecall;
    function CloseCheckOnSlipDocument: Integer; safecall;
    function StandardCloseCheckOnSlipDocument: Integer; safecall;
    function ConfigureSlipDocument: Integer; safecall;
    function ConfigureStandardSlipDocument: Integer; safecall;
    function FillSlipDocumentWithUnfiscalInfo: Integer; safecall;
    function ClearSlipDocumentBufferString: Integer; safecall;
    function ClearSlipDocumentBuffer: Integer; safecall;
    function PrintSlipDocument: Integer; safecall;
    function Get_CopyType: Integer; safecall;
    procedure Set_CopyType(Value: Integer); safecall;
    function Get_NumberOfCopies: Integer; safecall;
    procedure Set_NumberOfCopies(Value: Integer); safecall;
    function Get_CopyOffset1: Integer; safecall;
    procedure Set_CopyOffset1(Value: Integer); safecall;
    function Get_CopyOffset2: Integer; safecall;
    procedure Set_CopyOffset2(Value: Integer); safecall;
    function Get_CopyOffset3: Integer; safecall;
    procedure Set_CopyOffset3(Value: Integer); safecall;
    function Get_CopyOffset4: Integer; safecall;
    procedure Set_CopyOffset4(Value: Integer); safecall;
    function Get_CopyOffset5: Integer; safecall;
    procedure Set_CopyOffset5(Value: Integer); safecall;
    function Get_ClicheFont: Integer; safecall;
    procedure Set_ClicheFont(Value: Integer); safecall;
    function Get_HeaderFont: Integer; safecall;
    procedure Set_HeaderFont(Value: Integer); safecall;
    function Get_EKLZFont: Integer; safecall;
    procedure Set_EKLZFont(Value: Integer); safecall;
    function Get_ClicheStringNumber: Integer; safecall;
    procedure Set_ClicheStringNumber(Value: Integer); safecall;
    function Get_HeaderStringNumber: Integer; safecall;
    procedure Set_HeaderStringNumber(Value: Integer); safecall;
    function Get_EKLZStringNumber: Integer; safecall;
    procedure Set_EKLZStringNumber(Value: Integer); safecall;
    function Get_FMStringNumber: Integer; safecall;
    procedure Set_FMStringNumber(Value: Integer); safecall;
    function Get_ClicheOffset: Integer; safecall;
    procedure Set_ClicheOffset(Value: Integer); safecall;
    function Get_HeaderOffset: Integer; safecall;
    procedure Set_HeaderOffset(Value: Integer); safecall;
    function Get_EKLZOffset: Integer; safecall;
    procedure Set_EKLZOffset(Value: Integer); safecall;
    function Get_KPKOffset: Integer; safecall;
    procedure Set_KPKOffset(Value: Integer); safecall;
    function Get_FMOffset: Integer; safecall;
    procedure Set_FMOffset(Value: Integer); safecall;
    function Get_OperationBlockFirstString: Integer; safecall;
    procedure Set_OperationBlockFirstString(Value: Integer); safecall;
    function Get_QuantityFormat: Integer; safecall;
    procedure Set_QuantityFormat(Value: Integer); safecall;
    function Get_StringQuantityInOperation: Integer; safecall;
    procedure Set_StringQuantityInOperation(Value: Integer); safecall;
    function Get_TextStringNumber: Integer; safecall;
    procedure Set_TextStringNumber(Value: Integer); safecall;
    function Get_QuantityStringNumber: Integer; safecall;
    procedure Set_QuantityStringNumber(Value: Integer); safecall;
    function Get_SummStringNumber: Integer; safecall;
    procedure Set_SummStringNumber(Value: Integer); safecall;
    function Get_DepartmentStringNumber: Integer; safecall;
    procedure Set_DepartmentStringNumber(Value: Integer); safecall;
    function Get_TextFont: Integer; safecall;
    procedure Set_TextFont(Value: Integer); safecall;
    function Get_QuantityFont: Integer; safecall;
    procedure Set_QuantityFont(Value: Integer); safecall;
    function Get_MultiplicationFont: Integer; safecall;
    procedure Set_MultiplicationFont(Value: Integer); safecall;
    function Get_PriceFont: Integer; safecall;
    procedure Set_PriceFont(Value: Integer); safecall;
    function Get_SummFont: Integer; safecall;
    procedure Set_SummFont(Value: Integer); safecall;
    function Get_DepartmentFont: Integer; safecall;
    procedure Set_DepartmentFont(Value: Integer); safecall;
    function Get_TextSymbolNumber: Integer; safecall;
    procedure Set_TextSymbolNumber(Value: Integer); safecall;
    function Get_QuantitySymbolNumber: Integer; safecall;
    procedure Set_QuantitySymbolNumber(Value: Integer); safecall;
    function Get_PriceSymbolNumber: Integer; safecall;
    procedure Set_PriceSymbolNumber(Value: Integer); safecall;
    function Get_SummSymbolNumber: Integer; safecall;
    procedure Set_SummSymbolNumber(Value: Integer); safecall;
    function Get_DepartmentSymbolNumber: Integer; safecall;
    procedure Set_DepartmentSymbolNumber(Value: Integer); safecall;
    function Get_TextOffset: Integer; safecall;
    procedure Set_TextOffset(Value: Integer); safecall;
    function Get_QuantityOffset: Integer; safecall;
    procedure Set_QuantityOffset(Value: Integer); safecall;
    function Get_SummOffset: Integer; safecall;
    procedure Set_SummOffset(Value: Integer); safecall;
    function Get_DepartmentOffset: Integer; safecall;
    procedure Set_DepartmentOffset(Value: Integer); safecall;
    function DiscountOnSlipDocument: Integer; safecall;
    function StandardDiscountOnSlipDocument: Integer; safecall;
    function Get_IsClearUnfiscalInfo: WordBool; safecall;
    procedure Set_IsClearUnfiscalInfo(Value: WordBool); safecall;
    function Get_InfoType: Integer; safecall;
    procedure Set_InfoType(Value: Integer); safecall;
    function Get_StringNumber: Integer; safecall;
    procedure Set_StringNumber(Value: Integer); safecall;
    function EjectSlipDocument: Integer; safecall;
    function Get_EjectDirection: Integer; safecall;
    procedure Set_EjectDirection(Value: Integer); safecall;
    function LoadLineDataEx: Integer; safecall;
    function DrawEx: Integer; safecall;
    function ConfigureGeneralSlipDocument: Integer; safecall;
    function Get_OperationNameStringNumber: Integer; safecall;
    procedure Set_OperationNameStringNumber(Value: Integer); safecall;
    function Get_OperationNameFont: Integer; safecall;
    procedure Set_OperationNameFont(Value: Integer); safecall;
    function Get_OperationNameOffset: Integer; safecall;
    procedure Set_OperationNameOffset(Value: Integer); safecall;
    function Get_TotalStringNumber: Integer; safecall;
    procedure Set_TotalStringNumber(Value: Integer); safecall;
    function Get_Summ1StringNumber: Integer; safecall;
    procedure Set_Summ1StringNumber(Value: Integer); safecall;
    function Get_Summ2StringNumber: Integer; safecall;
    procedure Set_Summ2StringNumber(Value: Integer); safecall;
    function Get_Summ3StringNumber: Integer; safecall;
    procedure Set_Summ3StringNumber(Value: Integer); safecall;
    function Get_Summ4StringNumber: Integer; safecall;
    procedure Set_Summ4StringNumber(Value: Integer); safecall;
    function Get_ChangeStringNumber: Integer; safecall;
    procedure Set_ChangeStringNumber(Value: Integer); safecall;
    function Get_Tax1TurnOverStringNumber: Integer; safecall;
    procedure Set_Tax1TurnOverStringNumber(Value: Integer); safecall;
    function Get_Tax2TurnOverStringNumber: Integer; safecall;
    procedure Set_Tax2TurnOverStringNumber(Value: Integer); safecall;
    function Get_Tax3TurnOverStringNumber: Integer; safecall;
    procedure Set_Tax3TurnOverStringNumber(Value: Integer); safecall;
    function Get_Tax4TurnOverStringNumber: Integer; safecall;
    procedure Set_Tax4TurnOverStringNumber(Value: Integer); safecall;
    function Get_Tax1SumStringNumber: Integer; safecall;
    procedure Set_Tax1SumStringNumber(Value: Integer); safecall;
    function Get_Tax2SumStringNumber: Integer; safecall;
    procedure Set_Tax2SumStringNumber(Value: Integer); safecall;
    function Get_Tax3SumStringNumber: Integer; safecall;
    procedure Set_Tax3SumStringNumber(Value: Integer); safecall;
    function Get_Tax4SumStringNumber: Integer; safecall;
    procedure Set_Tax4SumStringNumber(Value: Integer); safecall;
    function Get_SubTotalStringNumber: Integer; safecall;
    procedure Set_SubTotalStringNumber(Value: Integer); safecall;
    function Get_DiscountOnCheckStringNumber: Integer; safecall;
    procedure Set_DiscountOnCheckStringNumber(Value: Integer); safecall;
    function Get_TotalFont: Integer; safecall;
    procedure Set_TotalFont(Value: Integer); safecall;
    function Get_TotalSumFont: Integer; safecall;
    procedure Set_TotalSumFont(Value: Integer); safecall;
    function Get_Summ1Font: Integer; safecall;
    procedure Set_Summ1Font(Value: Integer); safecall;
    function Get_Summ1NameFont: Integer; safecall;
    procedure Set_Summ1NameFont(Value: Integer); safecall;
    function Get_Summ2NameFont: Integer; safecall;
    procedure Set_Summ2NameFont(Value: Integer); safecall;
    function Get_Summ3NameFont: Integer; safecall;
    procedure Set_Summ3NameFont(Value: Integer); safecall;
    function Get_Summ4NameFont: Integer; safecall;
    procedure Set_Summ4NameFont(Value: Integer); safecall;
    function Get_Summ2Font: Integer; safecall;
    procedure Set_Summ2Font(Value: Integer); safecall;
    function Get_Summ3Font: Integer; safecall;
    procedure Set_Summ3Font(Value: Integer); safecall;
    function Get_Summ4Font: Integer; safecall;
    procedure Set_Summ4Font(Value: Integer); safecall;
    function Get_ChangeFont: Integer; safecall;
    procedure Set_ChangeFont(Value: Integer); safecall;
    function Get_ChangeSumFont: Integer; safecall;
    procedure Set_ChangeSumFont(Value: Integer); safecall;
    function Get_Tax1NameFont: Integer; safecall;
    procedure Set_Tax1NameFont(Value: Integer); safecall;
    function Get_Tax2NameFont: Integer; safecall;
    procedure Set_Tax2NameFont(Value: Integer); safecall;
    function Get_Tax3NameFont: Integer; safecall;
    procedure Set_Tax3NameFont(Value: Integer); safecall;
    function Get_Tax4NameFont: Integer; safecall;
    procedure Set_Tax4NameFont(Value: Integer); safecall;
    function Get_Tax1TurnOverFont: Integer; safecall;
    procedure Set_Tax1TurnOverFont(Value: Integer); safecall;
    function Get_Tax2TurnOverFont: Integer; safecall;
    procedure Set_Tax2TurnOverFont(Value: Integer); safecall;
    function Get_Tax3TurnOverFont: Integer; safecall;
    procedure Set_Tax3TurnOverFont(Value: Integer); safecall;
    function Get_Tax4TurnOverFont: Integer; safecall;
    procedure Set_Tax4TurnOverFont(Value: Integer); safecall;
    function Get_Tax1RateFont: Integer; safecall;
    procedure Set_Tax1RateFont(Value: Integer); safecall;
    function Get_Tax2RateFont: Integer; safecall;
    procedure Set_Tax2RateFont(Value: Integer); safecall;
    function Get_Tax3RateFont: Integer; safecall;
    procedure Set_Tax3RateFont(Value: Integer); safecall;
    function Get_Tax4RateFont: Integer; safecall;
    procedure Set_Tax4RateFont(Value: Integer); safecall;
    function Get_Tax1SumFont: Integer; safecall;
    procedure Set_Tax1SumFont(Value: Integer); safecall;
    function Get_Tax2SumFont: Integer; safecall;
    procedure Set_Tax2SumFont(Value: Integer); safecall;
    function Get_Tax3SumFont: Integer; safecall;
    procedure Set_Tax3SumFont(Value: Integer); safecall;
    function Get_Tax4SumFont: Integer; safecall;
    procedure Set_Tax4SumFont(Value: Integer); safecall;
    function Get_SubTotalFont: Integer; safecall;
    procedure Set_SubTotalFont(Value: Integer); safecall;
    function Get_SubTotalSumFont: Integer; safecall;
    procedure Set_SubTotalSumFont(Value: Integer); safecall;
    function Get_DiscountOnCheckFont: Integer; safecall;
    procedure Set_DiscountOnCheckFont(Value: Integer); safecall;
    function Get_DiscountOnCheckSumFont: Integer; safecall;
    procedure Set_DiscountOnCheckSumFont(Value: Integer); safecall;
    function Get_TotalSymbolNumber: Integer; safecall;
    procedure Set_TotalSymbolNumber(Value: Integer); safecall;
    function Get_Summ1SymbolNumber: Integer; safecall;
    procedure Set_Summ1SymbolNumber(Value: Integer); safecall;
    function Get_Summ2SymbolNumber: Integer; safecall;
    procedure Set_Summ2SymbolNumber(Value: Integer); safecall;
    function Get_Summ3SymbolNumber: Integer; safecall;
    procedure Set_Summ3SymbolNumber(Value: Integer); safecall;
    function Get_Summ4SymbolNumber: Integer; safecall;
    procedure Set_Summ4SymbolNumber(Value: Integer); safecall;
    function Get_ChangeSymbolNumber: Integer; safecall;
    procedure Set_ChangeSymbolNumber(Value: Integer); safecall;
    function Get_Tax1NameSymbolNumber: Integer; safecall;
    procedure Set_Tax1NameSymbolNumber(Value: Integer); safecall;
    function Get_Tax1TurnOverSymbolNumber: Integer; safecall;
    procedure Set_Tax1TurnOverSymbolNumber(Value: Integer); safecall;
    function Get_Tax1RateSymbolNumber: Integer; safecall;
    procedure Set_Tax1RateSymbolNumber(Value: Integer); safecall;
    function Get_Tax1SumSymbolNumber: Integer; safecall;
    procedure Set_Tax1SumSymbolNumber(Value: Integer); safecall;
    function Get_Tax2NameSymbolNumber: Integer; safecall;
    procedure Set_Tax2NameSymbolNumber(Value: Integer); safecall;
    function Get_Tax2TurnOverSymbolNumber: Integer; safecall;
    procedure Set_Tax2TurnOverSymbolNumber(Value: Integer); safecall;
    function Get_Tax2RateSymbolNumber: Integer; safecall;
    procedure Set_Tax2RateSymbolNumber(Value: Integer); safecall;
    function Get_Tax2SumSymbolNumber: Integer; safecall;
    procedure Set_Tax2SumSymbolNumber(Value: Integer); safecall;
    function Get_Tax3NameSymbolNumber: Integer; safecall;
    procedure Set_Tax3NameSymbolNumber(Value: Integer); safecall;
    function Get_Tax3TurnOverSymbolNumber: Integer; safecall;
    procedure Set_Tax3TurnOverSymbolNumber(Value: Integer); safecall;
    function Get_Tax3RateSymbolNumber: Integer; safecall;
    procedure Set_Tax3RateSymbolNumber(Value: Integer); safecall;
    function Get_Tax3SumSymbolNumber: Integer; safecall;
    procedure Set_Tax3SumSymbolNumber(Value: Integer); safecall;
    function Get_Tax4NameSymbolNumber: Integer; safecall;
    procedure Set_Tax4NameSymbolNumber(Value: Integer); safecall;
    function Get_Tax4TurnOverSymbolNumber: Integer; safecall;
    procedure Set_Tax4TurnOverSymbolNumber(Value: Integer); safecall;
    function Get_Tax4RateSymbolNumber: Integer; safecall;
    procedure Set_Tax4RateSymbolNumber(Value: Integer); safecall;
    function Get_Tax4SumSymbolNumber: Integer; safecall;
    procedure Set_Tax4SumSymbolNumber(Value: Integer); safecall;
    function Get_SubTotalSymbolNumber: Integer; safecall;
    procedure Set_SubTotalSymbolNumber(Value: Integer); safecall;
    function Get_DiscountOnCheckSymbolNumber: Integer; safecall;
    procedure Set_DiscountOnCheckSymbolNumber(Value: Integer); safecall;
    function Get_DiscountOnCheckSumSymbolNumber: Integer; safecall;
    procedure Set_DiscountOnCheckSumSymbolNumber(Value: Integer); safecall;
    function Get_TotalOffset: Integer; safecall;
    procedure Set_TotalOffset(Value: Integer); safecall;
    function Get_Summ1Offset: Integer; safecall;
    procedure Set_Summ1Offset(Value: Integer); safecall;
    function Get_TotalSumOffset: Integer; safecall;
    procedure Set_TotalSumOffset(Value: Integer); safecall;
    function Get_Summ1NameOffset: Integer; safecall;
    procedure Set_Summ1NameOffset(Value: Integer); safecall;
    function Get_Summ2Offset: Integer; safecall;
    procedure Set_Summ2Offset(Value: Integer); safecall;
    function Get_Summ2NameOffset: Integer; safecall;
    procedure Set_Summ2NameOffset(Value: Integer); safecall;
    function Get_Summ3Offset: Integer; safecall;
    procedure Set_Summ3Offset(Value: Integer); safecall;
    function Get_Summ3NameOffset: Integer; safecall;
    procedure Set_Summ3NameOffset(Value: Integer); safecall;
    function Get_Summ4Offset: Integer; safecall;
    procedure Set_Summ4Offset(Value: Integer); safecall;
    function Get_Summ4NameOffset: Integer; safecall;
    procedure Set_Summ4NameOffset(Value: Integer); safecall;
    function Get_ChangeOffset: Integer; safecall;
    procedure Set_ChangeOffset(Value: Integer); safecall;
    function Get_ChangeSumOffset: Integer; safecall;
    procedure Set_ChangeSumOffset(Value: Integer); safecall;
    function Get_Tax1NameOffset: Integer; safecall;
    procedure Set_Tax1NameOffset(Value: Integer); safecall;
    function Get_Tax1TurnOverOffset: Integer; safecall;
    procedure Set_Tax1TurnOverOffset(Value: Integer); safecall;
    function Get_Tax1RateOffset: Integer; safecall;
    procedure Set_Tax1RateOffset(Value: Integer); safecall;
    function Get_Tax1SumOffset: Integer; safecall;
    procedure Set_Tax1SumOffset(Value: Integer); safecall;
    function Get_Tax2NameOffset: Integer; safecall;
    procedure Set_Tax2NameOffset(Value: Integer); safecall;
    function Get_Tax2TurnOverOffset: Integer; safecall;
    procedure Set_Tax2TurnOverOffset(Value: Integer); safecall;
    function Get_Tax2RateOffset: Integer; safecall;
    procedure Set_Tax2RateOffset(Value: Integer); safecall;
    function Get_Tax2SumOffset: Integer; safecall;
    procedure Set_Tax2SumOffset(Value: Integer); safecall;
    function Get_Tax3NameOffset: Integer; safecall;
    procedure Set_Tax3NameOffset(Value: Integer); safecall;
    function Get_Tax3TurnOverOffset: Integer; safecall;
    procedure Set_Tax3TurnOverOffset(Value: Integer); safecall;
    function Get_Tax3RateOffset: Integer; safecall;
    procedure Set_Tax3RateOffset(Value: Integer); safecall;
    function Get_Tax3SumOffset: Integer; safecall;
    procedure Set_Tax3SumOffset(Value: Integer); safecall;
    function Get_Tax4NameOffset: Integer; safecall;
    procedure Set_Tax4NameOffset(Value: Integer); safecall;
    function Get_Tax4TurnOverOffset: Integer; safecall;
    procedure Set_Tax4TurnOverOffset(Value: Integer); safecall;
    function Get_Tax4RateOffset: Integer; safecall;
    procedure Set_Tax4RateOffset(Value: Integer); safecall;
    function Get_Tax4SumOffset: Integer; safecall;
    procedure Set_Tax4SumOffset(Value: Integer); safecall;
    function Get_SubTotalOffset: Integer; safecall;
    procedure Set_SubTotalOffset(Value: Integer); safecall;
    function Get_SubTotalSumOffset: Integer; safecall;
    procedure Set_SubTotalSumOffset(Value: Integer); safecall;
    function Get_SlipDocumentWidth: Integer; safecall;
    procedure Set_SlipDocumentWidth(Value: Integer); safecall;
    function Get_SlipDocumentLength: Integer; safecall;
    procedure Set_SlipDocumentLength(Value: Integer); safecall;
    function Get_PrintingAlignment: Integer; safecall;
    procedure Set_PrintingAlignment(Value: Integer); safecall;
    function Get_SlipStringIntervals: WideString; safecall;
    procedure Set_SlipStringIntervals(const Value: WideString); safecall;
    function Get_SlipEqualStringIntervals: Integer; safecall;
    procedure Set_SlipEqualStringIntervals(Value: Integer); safecall;
    function Get_KPKFont: Integer; safecall;
    procedure Set_KPKFont(Value: Integer); safecall;
    function Get_DiscountOnCheckOffset: Integer; safecall;
    procedure Set_DiscountOnCheckOffset(Value: Integer); safecall;
    function Get_DiscountOnCheckSumOffset: Integer; safecall;
    procedure Set_DiscountOnCheckSumOffset(Value: Integer); safecall;
    function WideLoadLineData: Integer; safecall;
    function PrintTaxReport: Integer; safecall;
    function Get_QuantityPointPosition: WordBool; safecall;
    function Get_FileVersionMS: LongWord; safecall;
    function Get_FileVersionLS: LongWord; safecall;
    function GetLongSerialNumberAndLongRNM: Integer; safecall;
    function SetLongSerialNumber: Integer; safecall;
    function FiscalizationWithLongRNM: Integer; safecall;
    function Get_IsBatteryLow: WordBool; safecall;
    function Get_IsLastFMRecordCorrupted: WordBool; safecall;
    function Get_IsFMSessionOpen: WordBool; safecall;
    function Get_IsFM24HoursOver: WordBool; safecall;
    function Connect2: Integer; safecall;
    function Get_ECRModeStatus: Integer; safecall;
    function GetECRPrinterStatus: Integer; safecall;
    function Get_PrinterStatus: Integer; safecall;
    property BarCode: WideString read Get_BarCode write Set_BarCode;
    property BatteryCondition: WordBool read Get_BatteryCondition;
    property BatteryVoltage: Double read Get_BatteryVoltage;
    property BaudRate: Integer read Get_BaudRate write Set_BaudRate;
    property Change: Currency read Get_Change;
    property CheckResult: Currency read Get_CheckResult write Set_CheckResult;
    property CheckType: Integer read Get_CheckType write Set_CheckType;
    property ComNumber: Integer read Get_ComNumber write Set_ComNumber;
    property ContentsOfCashRegister: Currency read Get_ContentsOfCashRegister;
    property ContentsOfOperationRegister: Integer read Get_ContentsOfOperationRegister;
    property CurrentDozeInMilliliters: Integer read Get_CurrentDozeInMilliliters write Set_CurrentDozeInMilliliters;
    property CurrentDozeInMoney: Currency read Get_CurrentDozeInMoney write Set_CurrentDozeInMoney;
    property CutType: WordBool read Get_CutType write Set_CutType;
    property DataBlock: WideString read Get_DataBlock;
    property DataBlockNumber: Integer read Get_DataBlockNumber;
    property Date: TDateTime read Get_Date write Set_Date;
    property Department: Integer read Get_Department write Set_Department;
    property DeviceCode: Integer read Get_DeviceCode write Set_DeviceCode;
    property DeviceCodeDescription: WideString read Get_DeviceCodeDescription;
    property DiscountOnCheck: Double read Get_DiscountOnCheck write Set_DiscountOnCheck;
    property DocumentName: WideString read Get_DocumentName write Set_DocumentName;
    property DocumentNumber: Integer read Get_DocumentNumber write Set_DocumentNumber;
    property DozeInMilliliters: Integer read Get_DozeInMilliliters write Set_DozeInMilliliters;
    property DozeInMoney: Currency read Get_DozeInMoney write Set_DozeInMoney;
    property DrawerNumber: Integer read Get_DrawerNumber write Set_DrawerNumber;
    property ECRAdvancedMode: Integer read Get_ECRAdvancedMode;
    property ECRAdvancedModeDescription: WideString read Get_ECRAdvancedModeDescription;
    property ECRBuild: Integer read Get_ECRBuild;
    property ECRFlags: Integer read Get_ECRFlags;
    property ECRInput: WideString read Get_ECRInput;
    property ECRMode: Integer read Get_ECRMode;
    property ECRMode8Status: Integer read Get_ECRMode8Status;
    property ECRModeDescription: WideString read Get_ECRModeDescription;
    property ECROutput: WideString read Get_ECROutput;
    property ECRSoftDate: TDateTime read Get_ECRSoftDate;
    property ECRSoftVersion: WideString read Get_ECRSoftVersion;
    property EKLZIsPresent: WordBool read Get_EKLZIsPresent;
    property EmergencyStopCode: Integer read Get_EmergencyStopCode;
    property EmergencyStopCodeDescription: WideString read Get_EmergencyStopCodeDescription;
    property FieldName: WideString read Get_FieldName;
    property FieldNumber: Integer read Get_FieldNumber write Set_FieldNumber;
    property FieldSize: Integer read Get_FieldSize;
    property FieldType: WordBool read Get_FieldType;
    property FirstLineNumber: Integer read Get_FirstLineNumber write Set_FirstLineNumber;
    property FirstSessionDate: TDateTime read Get_FirstSessionDate write Set_FirstSessionDate;
    property FirstSessionNumber: Integer read Get_FirstSessionNumber write Set_FirstSessionNumber;
    property FM1IsPresent: WordBool read Get_FM1IsPresent;
    property FM2IsPresent: WordBool read Get_FM2IsPresent;
    property FMBuild: Integer read Get_FMBuild;
    property FMFlags: Integer read Get_FMFlags;
    property FMOverflow: WordBool read Get_FMOverflow;
    property FMSoftDate: TDateTime read Get_FMSoftDate;
    property FMSoftVersion: WideString read Get_FMSoftVersion;
    property FreeRecordInFM: Integer read Get_FreeRecordInFM;
    property FreeRegistration: Integer read Get_FreeRegistration;
    property INN: WideString read Get_INN write Set_INN;
    property IsCheckClosed: WordBool read Get_IsCheckClosed;
    property IsCheckMadeOut: WordBool read Get_IsCheckMadeOut;
    property IsDrawerOpen: WordBool read Get_IsDrawerOpen;
    property JournalRibbonIsPresent: WordBool read Get_JournalRibbonIsPresent;
    property JournalRibbonLever: WordBool read Get_JournalRibbonLever;
    property JournalRibbonOpticalSensor: WordBool read Get_JournalRibbonOpticalSensor;
    property KPKNumber: Integer read Get_KPKNumber write Set_KPKNumber;
    property LastLineNumber: Integer read Get_LastLineNumber write Set_LastLineNumber;
    property LastSessionDate: TDateTime read Get_LastSessionDate write Set_LastSessionDate;
    property LastSessionNumber: Integer read Get_LastSessionNumber write Set_LastSessionNumber;
    property License: WideString read Get_License write Set_License;
    property LicenseIsPresent: WordBool read Get_LicenseIsPresent;
    property LidPositionSensor: WordBool read Get_LidPositionSensor;
    property LineData: WideString read Get_LineData write Set_LineData;
    property LineNumber: Integer read Get_LineNumber write Set_LineNumber;
    property LogicalNumber: Integer read Get_LogicalNumber;
    property MAXValueOfField: Integer read Get_MAXValueOfField;
    property MINValueOfField: Integer read Get_MINValueOfField;
    property Motor: WordBool read Get_Motor;
    property NameCashReg: WideString read Get_NameCashReg;
    property NameOperationReg: WideString read Get_NameOperationReg;
    property NewPasswordTI: Integer read Get_NewPasswordTI write Set_NewPasswordTI;
    property OpenDocumentNumber: Integer read Get_OpenDocumentNumber;
    property OperatorNumber: Integer read Get_OperatorNumber;
    property Password: Integer read Get_Password write Set_Password;
    property Pistol: WordBool read Get_Pistol;
    property PointPosition: WordBool read Get_PointPosition write Set_PointPosition;
    property PortNumber: Integer read Get_PortNumber write Set_PortNumber;
    property Price: Currency read Get_Price write Set_Price;
    property Quantity: Double read Get_Quantity write Set_Quantity;
    property QuantityOfOperations: Integer read Get_QuantityOfOperations;
    property ReceiptRibbonIsPresent: WordBool read Get_ReceiptRibbonIsPresent;
    property ReceiptRibbonLever: WordBool read Get_ReceiptRibbonLever;
    property ReceiptRibbonOpticalSensor: WordBool read Get_ReceiptRibbonOpticalSensor;
    property RegisterNumber: Integer read Get_RegisterNumber write Set_RegisterNumber;
    property RegistrationNumber: Integer read Get_RegistrationNumber write Set_RegistrationNumber;
    property ReportType: WordBool read Get_ReportType write Set_ReportType;
    property ResultCode: Integer read Get_ResultCode;
    property ResultCodeDescription: WideString read Get_ResultCodeDescription;
    property RKNumber: Integer read Get_RKNumber write Set_RKNumber;
    property RNM: WideString read Get_RNM write Set_RNM;
    property RoughValve: WordBool read Get_RoughValve;
    property RowNumber: Integer read Get_RowNumber write Set_RowNumber;
    property RunningPeriod: Integer read Get_RunningPeriod write Set_RunningPeriod;
    property SerialNumber: WideString read Get_SerialNumber write Set_SerialNumber;
    property SessionNumber: Integer read Get_SessionNumber write Set_SessionNumber;
    property SlipDocumentIsMoving: WordBool read Get_SlipDocumentIsMoving;
    property SlipDocumentIsPresent: WordBool read Get_SlipDocumentIsPresent;
    property SlowingInMilliliters: Integer read Get_SlowingInMilliliters write Set_SlowingInMilliliters;
    property SlowingValve: WordBool read Get_SlowingValve;
    property StatusRK: Integer read Get_StatusRK;
    property StatusRKDescription: WideString read Get_StatusRKDescription;
    property StringForPrinting: WideString read Get_StringForPrinting write Set_StringForPrinting;
    property StringQuantity: Integer read Get_StringQuantity write Set_StringQuantity;
    property Summ1: Currency read Get_Summ1 write Set_Summ1;
    property Summ2: Currency read Get_Summ2 write Set_Summ2;
    property Summ3: Currency read Get_Summ3 write Set_Summ3;
    property Summ4: Currency read Get_Summ4 write Set_Summ4;
    property TableName: WideString read Get_TableName;
    property TableNumber: Integer read Get_TableNumber write Set_TableNumber;
    property Tax1: Integer read Get_Tax1 write Set_Tax1;
    property Tax2: Integer read Get_Tax2 write Set_Tax2;
    property Tax3: Integer read Get_Tax3 write Set_Tax3;
    property Tax4: Integer read Get_Tax4 write Set_Tax4;
    property Time: TDateTime read Get_Time write Set_Time;
    property Timeout: Integer read Get_Timeout write Set_Timeout;
    property TimeStr: WideString read Get_TimeStr write Set_TimeStr;
    property TransferBytes: WideString read Get_TransferBytes write Set_TransferBytes;
    property TRKNumber: Integer read Get_TRKNumber write Set_TRKNumber;
    property TypeOfLastEntryFM: WordBool read Get_TypeOfLastEntryFM;
    property TypeOfSumOfEntriesFM: WordBool read Get_TypeOfSumOfEntriesFM write Set_TypeOfSumOfEntriesFM;
    property UCodePage: Integer read Get_UCodePage;
    property UDescription: WideString read Get_UDescription;
    property UMajorProtocolVersion: Integer read Get_UMajorProtocolVersion;
    property UMajorType: Integer read Get_UMajorType;
    property UMinorProtocolVersion: Integer read Get_UMinorProtocolVersion;
    property UMinorType: Integer read Get_UMinorType;
    property UModel: Integer read Get_UModel;
    property UseJournalRibbon: WordBool read Get_UseJournalRibbon write Set_UseJournalRibbon;
    property UseReceiptRibbon: WordBool read Get_UseReceiptRibbon write Set_UseReceiptRibbon;
    property UseSlipDocument: WordBool read Get_UseSlipDocument write Set_UseSlipDocument;
    property ValueOfFieldInteger: Integer read Get_ValueOfFieldInteger write Set_ValueOfFieldInteger;
    property ValueOfFieldString: WideString read Get_ValueOfFieldString write Set_ValueOfFieldString;
    property FontType: Integer read Get_FontType write Set_FontType;
    property LDBaudrate: Integer read Get_LDBaudrate write Set_LDBaudrate;
    property LDComNumber: Integer read Get_LDComNumber write Set_LDComNumber;
    property LDCount: Integer read Get_LDCount;
    property LDIndex: Integer read Get_LDIndex write Set_LDIndex;
    property LDName: WideString read Get_LDName write Set_LDName;
    property LDNumber: Integer read Get_LDNumber write Set_LDNumber;
    property WaitPrintingTime: Integer read Get_WaitPrintingTime;
    property IsPrinterLeftSensorFailure: WordBool read Get_IsPrinterLeftSensorFailure;
    property IsPrinterRightSensorFailure: WordBool read Get_IsPrinterRightSensorFailure;
    property EKLZNumber: WideString read Get_EKLZNumber;
    property LastKPKDocumentResult: Currency read Get_LastKPKDocumentResult;
    property LastKPKDate: TDateTime read Get_LastKPKDate;
    property LastKPKTime: TDateTime read Get_LastKPKTime;
    property LastKPKNumber: Integer read Get_LastKPKNumber;
    property EKLZFlags: Integer read Get_EKLZFlags;
    property TestNumber: Integer read Get_TestNumber write Set_TestNumber;
    property EKLZVersion: WideString read Get_EKLZVersion;
    property EKLZData: WideString read Get_EKLZData;
    property EKLZResultCode: Integer read Get_EKLZResultCode write Set_EKLZResultCode;
    property FMResultCode: Integer read Get_FMResultCode;
    property PowerSourceVoltage: Double read Get_PowerSourceVoltage;
    property IsEKLZOverflow: WordBool read Get_IsEKLZOverflow;
    property CopyType: Integer read Get_CopyType write Set_CopyType;
    property NumberOfCopies: Integer read Get_NumberOfCopies write Set_NumberOfCopies;
    property CopyOffset1: Integer read Get_CopyOffset1 write Set_CopyOffset1;
    property CopyOffset2: Integer read Get_CopyOffset2 write Set_CopyOffset2;
    property CopyOffset3: Integer read Get_CopyOffset3 write Set_CopyOffset3;
    property CopyOffset4: Integer read Get_CopyOffset4 write Set_CopyOffset4;
    property CopyOffset5: Integer read Get_CopyOffset5 write Set_CopyOffset5;
    property ClicheFont: Integer read Get_ClicheFont write Set_ClicheFont;
    property HeaderFont: Integer read Get_HeaderFont write Set_HeaderFont;
    property EKLZFont: Integer read Get_EKLZFont write Set_EKLZFont;
    property ClicheStringNumber: Integer read Get_ClicheStringNumber write Set_ClicheStringNumber;
    property HeaderStringNumber: Integer read Get_HeaderStringNumber write Set_HeaderStringNumber;
    property EKLZStringNumber: Integer read Get_EKLZStringNumber write Set_EKLZStringNumber;
    property FMStringNumber: Integer read Get_FMStringNumber write Set_FMStringNumber;
    property ClicheOffset: Integer read Get_ClicheOffset write Set_ClicheOffset;
    property HeaderOffset: Integer read Get_HeaderOffset write Set_HeaderOffset;
    property EKLZOffset: Integer read Get_EKLZOffset write Set_EKLZOffset;
    property KPKOffset: Integer read Get_KPKOffset write Set_KPKOffset;
    property FMOffset: Integer read Get_FMOffset write Set_FMOffset;
    property OperationBlockFirstString: Integer read Get_OperationBlockFirstString write Set_OperationBlockFirstString;
    property QuantityFormat: Integer read Get_QuantityFormat write Set_QuantityFormat;
    property StringQuantityInOperation: Integer read Get_StringQuantityInOperation write Set_StringQuantityInOperation;
    property TextStringNumber: Integer read Get_TextStringNumber write Set_TextStringNumber;
    property QuantityStringNumber: Integer read Get_QuantityStringNumber write Set_QuantityStringNumber;
    property SummStringNumber: Integer read Get_SummStringNumber write Set_SummStringNumber;
    property DepartmentStringNumber: Integer read Get_DepartmentStringNumber write Set_DepartmentStringNumber;
    property TextFont: Integer read Get_TextFont write Set_TextFont;
    property QuantityFont: Integer read Get_QuantityFont write Set_QuantityFont;
    property MultiplicationFont: Integer read Get_MultiplicationFont write Set_MultiplicationFont;
    property PriceFont: Integer read Get_PriceFont write Set_PriceFont;
    property SummFont: Integer read Get_SummFont write Set_SummFont;
    property DepartmentFont: Integer read Get_DepartmentFont write Set_DepartmentFont;
    property TextSymbolNumber: Integer read Get_TextSymbolNumber write Set_TextSymbolNumber;
    property QuantitySymbolNumber: Integer read Get_QuantitySymbolNumber write Set_QuantitySymbolNumber;
    property PriceSymbolNumber: Integer read Get_PriceSymbolNumber write Set_PriceSymbolNumber;
    property SummSymbolNumber: Integer read Get_SummSymbolNumber write Set_SummSymbolNumber;
    property DepartmentSymbolNumber: Integer read Get_DepartmentSymbolNumber write Set_DepartmentSymbolNumber;
    property TextOffset: Integer read Get_TextOffset write Set_TextOffset;
    property QuantityOffset: Integer read Get_QuantityOffset write Set_QuantityOffset;
    property SummOffset: Integer read Get_SummOffset write Set_SummOffset;
    property DepartmentOffset: Integer read Get_DepartmentOffset write Set_DepartmentOffset;
    property IsClearUnfiscalInfo: WordBool read Get_IsClearUnfiscalInfo write Set_IsClearUnfiscalInfo;
    property InfoType: Integer read Get_InfoType write Set_InfoType;
    property StringNumber: Integer read Get_StringNumber write Set_StringNumber;
    property EjectDirection: Integer read Get_EjectDirection write Set_EjectDirection;
    property OperationNameStringNumber: Integer read Get_OperationNameStringNumber write Set_OperationNameStringNumber;
    property OperationNameFont: Integer read Get_OperationNameFont write Set_OperationNameFont;
    property OperationNameOffset: Integer read Get_OperationNameOffset write Set_OperationNameOffset;
    property TotalStringNumber: Integer read Get_TotalStringNumber write Set_TotalStringNumber;
    property Summ1StringNumber: Integer read Get_Summ1StringNumber write Set_Summ1StringNumber;
    property Summ2StringNumber: Integer read Get_Summ2StringNumber write Set_Summ2StringNumber;
    property Summ3StringNumber: Integer read Get_Summ3StringNumber write Set_Summ3StringNumber;
    property Summ4StringNumber: Integer read Get_Summ4StringNumber write Set_Summ4StringNumber;
    property ChangeStringNumber: Integer read Get_ChangeStringNumber write Set_ChangeStringNumber;
    property Tax1TurnOverStringNumber: Integer read Get_Tax1TurnOverStringNumber write Set_Tax1TurnOverStringNumber;
    property Tax2TurnOverStringNumber: Integer read Get_Tax2TurnOverStringNumber write Set_Tax2TurnOverStringNumber;
    property Tax3TurnOverStringNumber: Integer read Get_Tax3TurnOverStringNumber write Set_Tax3TurnOverStringNumber;
    property Tax4TurnOverStringNumber: Integer read Get_Tax4TurnOverStringNumber write Set_Tax4TurnOverStringNumber;
    property Tax1SumStringNumber: Integer read Get_Tax1SumStringNumber write Set_Tax1SumStringNumber;
    property Tax2SumStringNumber: Integer read Get_Tax2SumStringNumber write Set_Tax2SumStringNumber;
    property Tax3SumStringNumber: Integer read Get_Tax3SumStringNumber write Set_Tax3SumStringNumber;
    property Tax4SumStringNumber: Integer read Get_Tax4SumStringNumber write Set_Tax4SumStringNumber;
    property SubTotalStringNumber: Integer read Get_SubTotalStringNumber write Set_SubTotalStringNumber;
    property DiscountOnCheckStringNumber: Integer read Get_DiscountOnCheckStringNumber write Set_DiscountOnCheckStringNumber;
    property TotalFont: Integer read Get_TotalFont write Set_TotalFont;
    property TotalSumFont: Integer read Get_TotalSumFont write Set_TotalSumFont;
    property Summ1Font: Integer read Get_Summ1Font write Set_Summ1Font;
    property Summ1NameFont: Integer read Get_Summ1NameFont write Set_Summ1NameFont;
    property Summ2NameFont: Integer read Get_Summ2NameFont write Set_Summ2NameFont;
    property Summ3NameFont: Integer read Get_Summ3NameFont write Set_Summ3NameFont;
    property Summ4NameFont: Integer read Get_Summ4NameFont write Set_Summ4NameFont;
    property Summ2Font: Integer read Get_Summ2Font write Set_Summ2Font;
    property Summ3Font: Integer read Get_Summ3Font write Set_Summ3Font;
    property Summ4Font: Integer read Get_Summ4Font write Set_Summ4Font;
    property ChangeFont: Integer read Get_ChangeFont write Set_ChangeFont;
    property ChangeSumFont: Integer read Get_ChangeSumFont write Set_ChangeSumFont;
    property Tax1NameFont: Integer read Get_Tax1NameFont write Set_Tax1NameFont;
    property Tax2NameFont: Integer read Get_Tax2NameFont write Set_Tax2NameFont;
    property Tax3NameFont: Integer read Get_Tax3NameFont write Set_Tax3NameFont;
    property Tax4NameFont: Integer read Get_Tax4NameFont write Set_Tax4NameFont;
    property Tax1TurnOverFont: Integer read Get_Tax1TurnOverFont write Set_Tax1TurnOverFont;
    property Tax2TurnOverFont: Integer read Get_Tax2TurnOverFont write Set_Tax2TurnOverFont;
    property Tax3TurnOverFont: Integer read Get_Tax3TurnOverFont write Set_Tax3TurnOverFont;
    property Tax4TurnOverFont: Integer read Get_Tax4TurnOverFont write Set_Tax4TurnOverFont;
    property Tax1RateFont: Integer read Get_Tax1RateFont write Set_Tax1RateFont;
    property Tax2RateFont: Integer read Get_Tax2RateFont write Set_Tax2RateFont;
    property Tax3RateFont: Integer read Get_Tax3RateFont write Set_Tax3RateFont;
    property Tax4RateFont: Integer read Get_Tax4RateFont write Set_Tax4RateFont;
    property Tax1SumFont: Integer read Get_Tax1SumFont write Set_Tax1SumFont;
    property Tax2SumFont: Integer read Get_Tax2SumFont write Set_Tax2SumFont;
    property Tax3SumFont: Integer read Get_Tax3SumFont write Set_Tax3SumFont;
    property Tax4SumFont: Integer read Get_Tax4SumFont write Set_Tax4SumFont;
    property SubTotalFont: Integer read Get_SubTotalFont write Set_SubTotalFont;
    property SubTotalSumFont: Integer read Get_SubTotalSumFont write Set_SubTotalSumFont;
    property DiscountOnCheckFont: Integer read Get_DiscountOnCheckFont write Set_DiscountOnCheckFont;
    property DiscountOnCheckSumFont: Integer read Get_DiscountOnCheckSumFont write Set_DiscountOnCheckSumFont;
    property TotalSymbolNumber: Integer read Get_TotalSymbolNumber write Set_TotalSymbolNumber;
    property Summ1SymbolNumber: Integer read Get_Summ1SymbolNumber write Set_Summ1SymbolNumber;
    property Summ2SymbolNumber: Integer read Get_Summ2SymbolNumber write Set_Summ2SymbolNumber;
    property Summ3SymbolNumber: Integer read Get_Summ3SymbolNumber write Set_Summ3SymbolNumber;
    property Summ4SymbolNumber: Integer read Get_Summ4SymbolNumber write Set_Summ4SymbolNumber;
    property ChangeSymbolNumber: Integer read Get_ChangeSymbolNumber write Set_ChangeSymbolNumber;
    property Tax1NameSymbolNumber: Integer read Get_Tax1NameSymbolNumber write Set_Tax1NameSymbolNumber;
    property Tax1TurnOverSymbolNumber: Integer read Get_Tax1TurnOverSymbolNumber write Set_Tax1TurnOverSymbolNumber;
    property Tax1RateSymbolNumber: Integer read Get_Tax1RateSymbolNumber write Set_Tax1RateSymbolNumber;
    property Tax1SumSymbolNumber: Integer read Get_Tax1SumSymbolNumber write Set_Tax1SumSymbolNumber;
    property Tax2NameSymbolNumber: Integer read Get_Tax2NameSymbolNumber write Set_Tax2NameSymbolNumber;
    property Tax2TurnOverSymbolNumber: Integer read Get_Tax2TurnOverSymbolNumber write Set_Tax2TurnOverSymbolNumber;
    property Tax2RateSymbolNumber: Integer read Get_Tax2RateSymbolNumber write Set_Tax2RateSymbolNumber;
    property Tax2SumSymbolNumber: Integer read Get_Tax2SumSymbolNumber write Set_Tax2SumSymbolNumber;
    property Tax3NameSymbolNumber: Integer read Get_Tax3NameSymbolNumber write Set_Tax3NameSymbolNumber;
    property Tax3TurnOverSymbolNumber: Integer read Get_Tax3TurnOverSymbolNumber write Set_Tax3TurnOverSymbolNumber;
    property Tax3RateSymbolNumber: Integer read Get_Tax3RateSymbolNumber write Set_Tax3RateSymbolNumber;
    property Tax3SumSymbolNumber: Integer read Get_Tax3SumSymbolNumber write Set_Tax3SumSymbolNumber;
    property Tax4NameSymbolNumber: Integer read Get_Tax4NameSymbolNumber write Set_Tax4NameSymbolNumber;
    property Tax4TurnOverSymbolNumber: Integer read Get_Tax4TurnOverSymbolNumber write Set_Tax4TurnOverSymbolNumber;
    property Tax4RateSymbolNumber: Integer read Get_Tax4RateSymbolNumber write Set_Tax4RateSymbolNumber;
    property Tax4SumSymbolNumber: Integer read Get_Tax4SumSymbolNumber write Set_Tax4SumSymbolNumber;
    property SubTotalSymbolNumber: Integer read Get_SubTotalSymbolNumber write Set_SubTotalSymbolNumber;
    property DiscountOnCheckSymbolNumber: Integer read Get_DiscountOnCheckSymbolNumber write Set_DiscountOnCheckSymbolNumber;
    property DiscountOnCheckSumSymbolNumber: Integer read Get_DiscountOnCheckSumSymbolNumber write Set_DiscountOnCheckSumSymbolNumber;
    property TotalOffset: Integer read Get_TotalOffset write Set_TotalOffset;
    property Summ1Offset: Integer read Get_Summ1Offset write Set_Summ1Offset;
    property TotalSumOffset: Integer read Get_TotalSumOffset write Set_TotalSumOffset;
    property Summ1NameOffset: Integer read Get_Summ1NameOffset write Set_Summ1NameOffset;
    property Summ2Offset: Integer read Get_Summ2Offset write Set_Summ2Offset;
    property Summ2NameOffset: Integer read Get_Summ2NameOffset write Set_Summ2NameOffset;
    property Summ3Offset: Integer read Get_Summ3Offset write Set_Summ3Offset;
    property Summ3NameOffset: Integer read Get_Summ3NameOffset write Set_Summ3NameOffset;
    property Summ4Offset: Integer read Get_Summ4Offset write Set_Summ4Offset;
    property Summ4NameOffset: Integer read Get_Summ4NameOffset write Set_Summ4NameOffset;
    property ChangeOffset: Integer read Get_ChangeOffset write Set_ChangeOffset;
    property ChangeSumOffset: Integer read Get_ChangeSumOffset write Set_ChangeSumOffset;
    property Tax1NameOffset: Integer read Get_Tax1NameOffset write Set_Tax1NameOffset;
    property Tax1TurnOverOffset: Integer read Get_Tax1TurnOverOffset write Set_Tax1TurnOverOffset;
    property Tax1RateOffset: Integer read Get_Tax1RateOffset write Set_Tax1RateOffset;
    property Tax1SumOffset: Integer read Get_Tax1SumOffset write Set_Tax1SumOffset;
    property Tax2NameOffset: Integer read Get_Tax2NameOffset write Set_Tax2NameOffset;
    property Tax2TurnOverOffset: Integer read Get_Tax2TurnOverOffset write Set_Tax2TurnOverOffset;
    property Tax2RateOffset: Integer read Get_Tax2RateOffset write Set_Tax2RateOffset;
    property Tax2SumOffset: Integer read Get_Tax2SumOffset write Set_Tax2SumOffset;
    property Tax3NameOffset: Integer read Get_Tax3NameOffset write Set_Tax3NameOffset;
    property Tax3TurnOverOffset: Integer read Get_Tax3TurnOverOffset write Set_Tax3TurnOverOffset;
    property Tax3RateOffset: Integer read Get_Tax3RateOffset write Set_Tax3RateOffset;
    property Tax3SumOffset: Integer read Get_Tax3SumOffset write Set_Tax3SumOffset;
    property Tax4NameOffset: Integer read Get_Tax4NameOffset write Set_Tax4NameOffset;
    property Tax4TurnOverOffset: Integer read Get_Tax4TurnOverOffset write Set_Tax4TurnOverOffset;
    property Tax4RateOffset: Integer read Get_Tax4RateOffset write Set_Tax4RateOffset;
    property Tax4SumOffset: Integer read Get_Tax4SumOffset write Set_Tax4SumOffset;
    property SubTotalOffset: Integer read Get_SubTotalOffset write Set_SubTotalOffset;
    property SubTotalSumOffset: Integer read Get_SubTotalSumOffset write Set_SubTotalSumOffset;
    property SlipDocumentWidth: Integer read Get_SlipDocumentWidth write Set_SlipDocumentWidth;
    property SlipDocumentLength: Integer read Get_SlipDocumentLength write Set_SlipDocumentLength;
    property PrintingAlignment: Integer read Get_PrintingAlignment write Set_PrintingAlignment;
    property SlipStringIntervals: WideString read Get_SlipStringIntervals write Set_SlipStringIntervals;
    property SlipEqualStringIntervals: Integer read Get_SlipEqualStringIntervals write Set_SlipEqualStringIntervals;
    property KPKFont: Integer read Get_KPKFont write Set_KPKFont;
    property DiscountOnCheckOffset: Integer read Get_DiscountOnCheckOffset write Set_DiscountOnCheckOffset;
    property DiscountOnCheckSumOffset: Integer read Get_DiscountOnCheckSumOffset write Set_DiscountOnCheckSumOffset;
    property QuantityPointPosition: WordBool read Get_QuantityPointPosition;
    property FileVersionMS: LongWord read Get_FileVersionMS;
    property FileVersionLS: LongWord read Get_FileVersionLS;
    property IsBatteryLow: WordBool read Get_IsBatteryLow;
    property IsLastFMRecordCorrupted: WordBool read Get_IsLastFMRecordCorrupted;
    property IsFMSessionOpen: WordBool read Get_IsFMSessionOpen;
    property IsFM24HoursOver: WordBool read Get_IsFM24HoursOver;
    property ECRModeStatus: Integer read Get_ECRModeStatus;
    property PrinterStatus: Integer read Get_PrinterStatus;
  end;

// *********************************************************************//
// DispIntf:  IDrvFRDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2951939A-B915-4CC3-8F87-0803B8EB894F}
// *********************************************************************//
  IDrvFRDisp = dispinterface
    ['{2951939A-B915-4CC3-8F87-0803B8EB894F}']
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63097449-EC60-4E93-8052-60CB8EC8C993}
// *********************************************************************//
  IDrvFR2 = interface(IDrvFR)
    ['{63097449-EC60-4E93-8052-60CB8EC8C993}']
    function Get_ServerVersion: WideString; safecall;
    function Get_LDComputerName: WideString; safecall;
    procedure Set_LDComputerName(const Value: WideString); safecall;
    function Get_LDTimeout: Integer; safecall;
    procedure Set_LDTimeout(Value: Integer); safecall;
    function Get_ComputerName: WideString; safecall;
    procedure Set_ComputerName(const Value: WideString); safecall;
    function ServerConnect: Integer; safecall;
    function ServerDisconnect: Integer; safecall;
    function Get_ServerConnected: WordBool; safecall;
    function LockPort: Integer; safecall;
    function UnlockPort: Integer; safecall;
    function Get_PortLocked: WordBool; safecall;
    function AdminUnlockPort: Integer; safecall;
    function AdminUnlockPorts: Integer; safecall;
    function ServerCheckKey: Integer; safecall;
    function GetFontMetrics: Integer; safecall;
    function Get_PrintWidth: Integer; safecall;
    function Get_CharWidth: Integer; safecall;
    function Get_CharHeight: Integer; safecall;
    function Get_FontCount: Integer; safecall;
    function GetFreeLDNumber: Integer; safecall;
    property ServerVersion: WideString read Get_ServerVersion;
    property LDComputerName: WideString read Get_LDComputerName write Set_LDComputerName;
    property LDTimeout: Integer read Get_LDTimeout write Set_LDTimeout;
    property ComputerName: WideString read Get_ComputerName write Set_ComputerName;
    property ServerConnected: WordBool read Get_ServerConnected;
    property PortLocked: WordBool read Get_PortLocked;
    property PrintWidth: Integer read Get_PrintWidth;
    property CharWidth: Integer read Get_CharWidth;
    property CharHeight: Integer read Get_CharHeight;
    property FontCount: Integer read Get_FontCount;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63097449-EC60-4E93-8052-60CB8EC8C993}
// *********************************************************************//
  IDrvFR2Disp = dispinterface
    ['{63097449-EC60-4E93-8052-60CB8EC8C993}']
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EFA76EB3-A227-43C5-8AB0-A8F5697978A8}
// *********************************************************************//
  IDrvFR3 = interface(IDrvFR2)
    ['{EFA76EB3-A227-43C5-8AB0-A8F5697978A8}']
    function Get_LogOn: WordBool; safecall;
    procedure Set_LogOn(Value: WordBool); safecall;
    procedure SetIsString(Value: WordBool); safecall;
    procedure SetFieldSize(Value: Integer); safecall;
    function ReadTable2: Integer; safecall;
    function WriteTable2: Integer; safecall;
    procedure SetFieldMinValue(Value: Integer); safecall;
    procedure SetFieldMaxValue(Value: Integer); safecall;
    property LogOn: WordBool read Get_LogOn write Set_LogOn;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EFA76EB3-A227-43C5-8AB0-A8F5697978A8}
// *********************************************************************//
  IDrvFR3Disp = dispinterface
    ['{EFA76EB3-A227-43C5-8AB0-A8F5697978A8}']
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0C91335-A09D-4A50-9545-D39190FFD364}
// *********************************************************************//
  IDrvFR4 = interface(IDrvFR3)
    ['{D0C91335-A09D-4A50-9545-D39190FFD364}']
    function Get_CPLog: WordBool; safecall;
    procedure Set_CPLog(Value: WordBool); safecall;
    property CPLog: WordBool read Get_CPLog write Set_CPLog;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0C91335-A09D-4A50-9545-D39190FFD364}
// *********************************************************************//
  IDrvFR4Disp = dispinterface
    ['{D0C91335-A09D-4A50-9545-D39190FFD364}']
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB5092AF-AC33-47B4-9F63-B6B6A214BC82}
// *********************************************************************//
  IDrvFR6 = interface(IDrvFR4)
    ['{AB5092AF-AC33-47B4-9F63-B6B6A214BC82}']
    function Get_CashControlHost: WideString; safecall;
    procedure Set_CashControlHost(const Value: WideString); safecall;
    function Get_CashControlPort: WideString; safecall;
    procedure Set_CashControlPort(const Value: WideString); safecall;
    function Get_CashControlEnabled: WordBool; safecall;
    procedure Set_CashControlEnabled(Value: WordBool); safecall;
    function Get_CashControlUseTCP: WordBool; safecall;
    procedure Set_CashControlUseTCP(Value: WordBool); safecall;
    function Get_CashControlPassword: Integer; safecall;
    procedure Set_CashControlPassword(Value: Integer); safecall;
    function CashControlOpen: Integer; safecall;
    function CashControlClose: Integer; safecall;
    property CashControlHost: WideString read Get_CashControlHost write Set_CashControlHost;
    property CashControlPort: WideString read Get_CashControlPort write Set_CashControlPort;
    property CashControlEnabled: WordBool read Get_CashControlEnabled write Set_CashControlEnabled;
    property CashControlUseTCP: WordBool read Get_CashControlUseTCP write Set_CashControlUseTCP;
    property CashControlPassword: Integer read Get_CashControlPassword write Set_CashControlPassword;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB5092AF-AC33-47B4-9F63-B6B6A214BC82}
// *********************************************************************//
  IDrvFR6Disp = dispinterface
    ['{AB5092AF-AC33-47B4-9F63-B6B6A214BC82}']
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D53A7F63-EA3B-4060-A9EE-C248FAAD6088}
// *********************************************************************//
  IDrvFR7 = interface(IDrvFR6)
    ['{D53A7F63-EA3B-4060-A9EE-C248FAAD6088}']
    function Get_ConnectionType: Integer; safecall;
    procedure Set_ConnectionType(Value: Integer); safecall;
    function Get_LDConnectionType: Integer; safecall;
    procedure Set_LDConnectionType(Value: Integer); safecall;
    function Get_TCPPort: Integer; safecall;
    procedure Set_TCPPort(Value: Integer); safecall;
    function Get_LDTCPPort: Integer; safecall;
    procedure Set_LDTCPPort(Value: Integer); safecall;
    function Get_IPAddress: WideString; safecall;
    procedure Set_IPAddress(const Value: WideString); safecall;
    function Get_LDIPAddress: WideString; safecall;
    procedure Set_LDIPAddress(const Value: WideString); safecall;
    function Get_UseIPAddress: WordBool; safecall;
    procedure Set_UseIPAddress(Value: WordBool); safecall;
    function Get_LDUseIPAddress: WordBool; safecall;
    procedure Set_LDUseIPAddress(Value: WordBool); safecall;
    function SaveParams: Integer; safecall;
    property ConnectionType: Integer read Get_ConnectionType write Set_ConnectionType;
    property LDConnectionType: Integer read Get_LDConnectionType write Set_LDConnectionType;
    property TCPPort: Integer read Get_TCPPort write Set_TCPPort;
    property LDTCPPort: Integer read Get_LDTCPPort write Set_LDTCPPort;
    property IPAddress: WideString read Get_IPAddress write Set_IPAddress;
    property LDIPAddress: WideString read Get_LDIPAddress write Set_LDIPAddress;
    property UseIPAddress: WordBool read Get_UseIPAddress write Set_UseIPAddress;
    property LDUseIPAddress: WordBool read Get_LDUseIPAddress write Set_LDUseIPAddress;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D53A7F63-EA3B-4060-A9EE-C248FAAD6088}
// *********************************************************************//
  IDrvFR7Disp = dispinterface
    ['{D53A7F63-EA3B-4060-A9EE-C248FAAD6088}']
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {112C3B2C-94E4-4405-BF42-59EE54B53DBB}
// *********************************************************************//
  IDrvFR8 = interface(IDrvFR7)
    ['{112C3B2C-94E4-4405-BF42-59EE54B53DBB}']
    function Get_CPLogFile: WideString; safecall;
    procedure Set_CPLogFile(const Value: WideString); safecall;
    function Get_ComLogFile: WideString; safecall;
    procedure Set_ComLogFile(const Value: WideString); safecall;
    property CPLogFile: WideString read Get_CPLogFile write Set_CPLogFile;
    property ComLogFile: WideString read Get_ComLogFile write Set_ComLogFile;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {112C3B2C-94E4-4405-BF42-59EE54B53DBB}
// *********************************************************************//
  IDrvFR8Disp = dispinterface
    ['{112C3B2C-94E4-4405-BF42-59EE54B53DBB}']
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR9
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B5CE4922-E17E-41B8-ABE0-B0C1F941AE0D}
// *********************************************************************//
  IDrvFR9 = interface(IDrvFR8)
    ['{B5CE4922-E17E-41B8-ABE0-B0C1F941AE0D}']
    function Get_LineData2: WideString; safecall;
    procedure Set_LineData2(const Value: WideString); safecall;
    property LineData2: WideString read Get_LineData2 write Set_LineData2;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR9Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B5CE4922-E17E-41B8-ABE0-B0C1F941AE0D}
// *********************************************************************//
  IDrvFR9Disp = dispinterface
    ['{B5CE4922-E17E-41B8-ABE0-B0C1F941AE0D}']
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR10
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC2E30D0-DB1C-4A16-8956-9868C468642C}
// *********************************************************************//
  IDrvFR10 = interface(IDrvFR9)
    ['{BC2E30D0-DB1C-4A16-8956-9868C468642C}']
    function Get_SysAdminPassword: Integer; safecall;
    procedure Set_SysAdminPassword(Value: Integer); safecall;
    function Get_RecoverError165: WordBool; safecall;
    procedure Set_RecoverError165(Value: WordBool); safecall;
    function Get_MaxRecoverCount: Integer; safecall;
    procedure Set_MaxRecoverCount(Value: Integer); safecall;
    property SysAdminPassword: Integer read Get_SysAdminPassword write Set_SysAdminPassword;
    property RecoverError165: WordBool read Get_RecoverError165 write Set_RecoverError165;
    property MaxRecoverCount: Integer read Get_MaxRecoverCount write Set_MaxRecoverCount;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR10Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC2E30D0-DB1C-4A16-8956-9868C468642C}
// *********************************************************************//
  IDrvFR10Disp = dispinterface
    ['{BC2E30D0-DB1C-4A16-8956-9868C468642C}']
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR11
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E97A2450-50A2-4A9C-AFA3-14A55067B2B0}
// *********************************************************************//
  IDrvFR11 = interface(IDrvFR10)
    ['{E97A2450-50A2-4A9C-AFA3-14A55067B2B0}']
    function GetEKLZCode1Status: Integer; safecall;
    function GetEKLZCode2Status: Integer; safecall;
    function ReadWriteFM: Integer; safecall;
    function PrintHeader: Integer; safecall;
    function CloseCheckWithResult: Integer; safecall;
    function Get_OperationCode: Integer; safecall;
    function Get_AccType: Integer; safecall;
    procedure Set_AccType(Value: Integer); safecall;
    function Get_Address: Integer; safecall;
    procedure Set_Address(Value: Integer); safecall;
    function Get_WrittenByte: Integer; safecall;
    procedure Set_WrittenByte(Value: Integer); safecall;
    function Get_ReadByte: Integer; safecall;
    function Get_TransferByte: WideString; safecall;
    procedure Set_TransferByte(const Value: WideString); safecall;
    function Get_OperationType: Integer; safecall;
    procedure Set_OperationType(Value: Integer); safecall;
    function AboutBox: Integer; safecall;
    property OperationCode: Integer read Get_OperationCode;
    property AccType: Integer read Get_AccType write Set_AccType;
    property Address: Integer read Get_Address write Set_Address;
    property WrittenByte: Integer read Get_WrittenByte write Set_WrittenByte;
    property ReadByte: Integer read Get_ReadByte;
    property TransferByte: WideString read Get_TransferByte write Set_TransferByte;
    property OperationType: Integer read Get_OperationType write Set_OperationType;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR11Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E97A2450-50A2-4A9C-AFA3-14A55067B2B0}
// *********************************************************************//
  IDrvFR11Disp = dispinterface
    ['{E97A2450-50A2-4A9C-AFA3-14A55067B2B0}']
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR12
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C9DA2CB-0DBA-4984-9095-BB5068A0256F}
// *********************************************************************//
  IDrvFR12 = interface(IDrvFR11)
    ['{3C9DA2CB-0DBA-4984-9095-BB5068A0256F}']
    function Get_PresenterIn: WordBool; safecall;
    function Get_PresenterOut: WordBool; safecall;
    function PresenterKeep: Integer; safecall;
    function PresenterPush: Integer; safecall;
    function OpenScreen: Integer; safecall;
    function CloseScreen: Integer; safecall;
    property PresenterIn: WordBool read Get_PresenterIn;
    property PresenterOut: WordBool read Get_PresenterOut;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR12Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C9DA2CB-0DBA-4984-9095-BB5068A0256F}
// *********************************************************************//
  IDrvFR12Disp = dispinterface
    ['{3C9DA2CB-0DBA-4984-9095-BB5068A0256F}']
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR13
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA64E75D-A37F-46CA-93B1-2682B70ADE3C}
// *********************************************************************//
  IDrvFR13 = interface(IDrvFR12)
    ['{AA64E75D-A37F-46CA-93B1-2682B70ADE3C}']
    function Get_ComLogOnlyErrors: WordBool; safecall;
    procedure Set_ComLogOnlyErrors(Value: WordBool); safecall;
    property ComLogOnlyErrors: WordBool read Get_ComLogOnlyErrors write Set_ComLogOnlyErrors;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR13Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA64E75D-A37F-46CA-93B1-2682B70ADE3C}
// *********************************************************************//
  IDrvFR13Disp = dispinterface
    ['{AA64E75D-A37F-46CA-93B1-2682B70ADE3C}']
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR14
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {634A3C3E-8D9B-415A-8241-34AF9E86DDF0}
// *********************************************************************//
  IDrvFR14 = interface(IDrvFR13)
    ['{634A3C3E-8D9B-415A-8241-34AF9E86DDF0}']
    function SetSCPassword: Integer; safecall;
    function Get_SCPassword: Integer; safecall;
    procedure Set_SCPassword(Value: Integer); safecall;
    function Get_NewSCPassword: Integer; safecall;
    procedure Set_NewSCPassword(Value: Integer); safecall;
    property SCPassword: Integer read Get_SCPassword write Set_SCPassword;
    property NewSCPassword: Integer read Get_NewSCPassword write Set_NewSCPassword;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR14Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {634A3C3E-8D9B-415A-8241-34AF9E86DDF0}
// *********************************************************************//
  IDrvFR14Disp = dispinterface
    ['{634A3C3E-8D9B-415A-8241-34AF9E86DDF0}']
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR44
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3F9EDA6-A5EA-492A-861F-AC9009B480D9}
// *********************************************************************//
  IDrvFR44 = interface(IDrvFR14)
    ['{D3F9EDA6-A5EA-492A-861F-AC9009B480D9}']
    function Get_LastKPKDateStr: WideString; safecall;
    function Get_LastKPKTimeStr: WideString; safecall;
    function MethodSupported: WordBool; safecall;
    function Get_MethodName: WideString; safecall;
    procedure Set_MethodName(const Value: WideString); safecall;
    function Get_PropertyName: WideString; safecall;
    procedure Set_PropertyName(const Value: WideString); safecall;
    function PropertySupported: WordBool; safecall;
    function Get_LockTimeout: Integer; safecall;
    procedure Set_LockTimeout(Value: Integer); safecall;
    function LockPortTimeout: Integer; safecall;
    function Get_SlipStringInterval: Integer; safecall;
    procedure Set_SlipStringInterval(Value: Integer); safecall;
    function GetIBMStatus: Integer; safecall;
    function GetShortIBMStatus: Integer; safecall;
    function Get_IBMStatusByte1: Integer; safecall;
    function Get_IBMStatusByte2: Integer; safecall;
    function Get_IBMStatusByte3: Integer; safecall;
    function Get_IBMStatusByte4: Integer; safecall;
    function Get_IBMStatusByte5: Integer; safecall;
    function Get_IBMStatusByte6: Integer; safecall;
    function Get_IBMStatusByte7: Integer; safecall;
    function Get_IBMStatusByte8: Integer; safecall;
    function Get_IBMFlags: Integer; safecall;
    function Get_IBMDocumentNumber: Integer; safecall;
    function Get_IBMLastSaleReceiptNumber: Integer; safecall;
    function Get_IBMLastBuyReceiptNumber: Integer; safecall;
    function Get_IBMLastReturnSaleReceiptNumber: Integer; safecall;
    function Get_IBMLastReturnBuyReceiptNumber: Integer; safecall;
    function Get_IBMSessionDay: Integer; safecall;
    function Get_IBMSessionMonth: Integer; safecall;
    function Get_IBMSessionYear: Integer; safecall;
    function Get_IBMSessionHour: Integer; safecall;
    function Get_IBMSessionMin: Integer; safecall;
    function Get_IBMSessionSec: Integer; safecall;
    function Get_IBMSessionDateTime: TDateTime; safecall;
    function Get_EscapeIP: WideString; safecall;
    procedure Set_EscapeIP(const Value: WideString); safecall;
    function Get_EscapePort: Integer; safecall;
    procedure Set_EscapePort(Value: Integer); safecall;
    function Get_LDEscapeIP: WideString; safecall;
    procedure Set_LDEscapeIP(const Value: WideString); safecall;
    function Get_LDEscapePort: Integer; safecall;
    procedure Set_LDEscapePort(Value: Integer); safecall;
    function Get_EscapeTimeout: Integer; safecall;
    procedure Set_EscapeTimeout(Value: Integer); safecall;
    function Get_LDEscapeTimeout: Integer; safecall;
    procedure Set_LDEscapeTimeout(Value: Integer); safecall;
    function Get_CommandTimeout: Integer; safecall;
    procedure Set_CommandTimeout(Value: Integer); safecall;
    function Get_UseCommandTimeout: WordBool; safecall;
    procedure Set_UseCommandTimeout(Value: WordBool); safecall;
    function Get_CommandCount: Integer; safecall;
    function Get_CommandIndex: Integer; safecall;
    procedure Set_CommandIndex(Value: Integer); safecall;
    function GetCommandParams: Integer; safecall;
    function SetCommandParams: Integer; safecall;
    function SaveCommandParams: Integer; safecall;
    function Get_CommandName: WideString; safecall;
    function Get_CommandDefTimeout: Integer; safecall;
    function Get_CommandCode: Integer; safecall;
    function SetAllCommandsParams: Integer; safecall;
    function Get_TimeoutsUsing: Integer; safecall;
    procedure Set_TimeoutsUsing(Value: Integer); safecall;
    function SetDefCommandsParams: Integer; safecall;
    property LastKPKDateStr: WideString read Get_LastKPKDateStr;
    property LastKPKTimeStr: WideString read Get_LastKPKTimeStr;
    property MethodName: WideString read Get_MethodName write Set_MethodName;
    property PropertyName: WideString read Get_PropertyName write Set_PropertyName;
    property LockTimeout: Integer read Get_LockTimeout write Set_LockTimeout;
    property SlipStringInterval: Integer read Get_SlipStringInterval write Set_SlipStringInterval;
    property IBMStatusByte1: Integer read Get_IBMStatusByte1;
    property IBMStatusByte2: Integer read Get_IBMStatusByte2;
    property IBMStatusByte3: Integer read Get_IBMStatusByte3;
    property IBMStatusByte4: Integer read Get_IBMStatusByte4;
    property IBMStatusByte5: Integer read Get_IBMStatusByte5;
    property IBMStatusByte6: Integer read Get_IBMStatusByte6;
    property IBMStatusByte7: Integer read Get_IBMStatusByte7;
    property IBMStatusByte8: Integer read Get_IBMStatusByte8;
    property IBMFlags: Integer read Get_IBMFlags;
    property IBMDocumentNumber: Integer read Get_IBMDocumentNumber;
    property IBMLastSaleReceiptNumber: Integer read Get_IBMLastSaleReceiptNumber;
    property IBMLastBuyReceiptNumber: Integer read Get_IBMLastBuyReceiptNumber;
    property IBMLastReturnSaleReceiptNumber: Integer read Get_IBMLastReturnSaleReceiptNumber;
    property IBMLastReturnBuyReceiptNumber: Integer read Get_IBMLastReturnBuyReceiptNumber;
    property IBMSessionDay: Integer read Get_IBMSessionDay;
    property IBMSessionMonth: Integer read Get_IBMSessionMonth;
    property IBMSessionYear: Integer read Get_IBMSessionYear;
    property IBMSessionHour: Integer read Get_IBMSessionHour;
    property IBMSessionMin: Integer read Get_IBMSessionMin;
    property IBMSessionSec: Integer read Get_IBMSessionSec;
    property IBMSessionDateTime: TDateTime read Get_IBMSessionDateTime;
    property EscapeIP: WideString read Get_EscapeIP write Set_EscapeIP;
    property EscapePort: Integer read Get_EscapePort write Set_EscapePort;
    property LDEscapeIP: WideString read Get_LDEscapeIP write Set_LDEscapeIP;
    property LDEscapePort: Integer read Get_LDEscapePort write Set_LDEscapePort;
    property EscapeTimeout: Integer read Get_EscapeTimeout write Set_EscapeTimeout;
    property LDEscapeTimeout: Integer read Get_LDEscapeTimeout write Set_LDEscapeTimeout;
    property CommandTimeout: Integer read Get_CommandTimeout write Set_CommandTimeout;
    property UseCommandTimeout: WordBool read Get_UseCommandTimeout write Set_UseCommandTimeout;
    property CommandCount: Integer read Get_CommandCount;
    property CommandIndex: Integer read Get_CommandIndex write Set_CommandIndex;
    property CommandName: WideString read Get_CommandName;
    property CommandDefTimeout: Integer read Get_CommandDefTimeout;
    property CommandCode: Integer read Get_CommandCode;
    property TimeoutsUsing: Integer read Get_TimeoutsUsing write Set_TimeoutsUsing;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR44Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3F9EDA6-A5EA-492A-861F-AC9009B480D9}
// *********************************************************************//
  IDrvFR44Disp = dispinterface
    ['{D3F9EDA6-A5EA-492A-861F-AC9009B480D9}']
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR45
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2831E8FE-1486-4CAA-8968-5DBE4D84326B}
// *********************************************************************//
  IDrvFR45 = interface(IDrvFR44)
    ['{2831E8FE-1486-4CAA-8968-5DBE4D84326B}']
    function GetInterval: Integer; safecall;
    function OpenSession: Integer; safecall;
    function ReprintSlipDocument: Integer; safecall;
    function SetInterval: Integer; safecall;
    function ShowPayParams: Integer; safecall;
    function ShowTablesDlg: Integer; safecall;
    function WaitForPrinting: Integer; safecall;
    function Get_IntervalNumber: Integer; safecall;
    procedure Set_IntervalNumber(Value: Integer); safecall;
    function Get_IntervalValue: Integer; safecall;
    procedure Set_IntervalValue(Value: Integer); safecall;
    function Get_MobilePayEnabled: WordBool; safecall;
    procedure Set_MobilePayEnabled(Value: WordBool); safecall;
    function Get_ParamsPageIndex: Integer; safecall;
    procedure Set_ParamsPageIndex(Value: Integer); safecall;
    function Get_ParentWnd: Integer; safecall;
    procedure Set_ParentWnd(Value: Integer); safecall;
    function Get_PayDepartment: Integer; safecall;
    procedure Set_PayDepartment(Value: Integer); safecall;
    function Get_RealPayDepartment: Integer; safecall;
    procedure Set_RealPayDepartment(Value: Integer); safecall;
    function Get_SaleError: WordBool; safecall;
    procedure Set_SaleError(Value: WordBool); safecall;
    property IntervalNumber: Integer read Get_IntervalNumber write Set_IntervalNumber;
    property IntervalValue: Integer read Get_IntervalValue write Set_IntervalValue;
    property MobilePayEnabled: WordBool read Get_MobilePayEnabled write Set_MobilePayEnabled;
    property ParamsPageIndex: Integer read Get_ParamsPageIndex write Set_ParamsPageIndex;
    property ParentWnd: Integer read Get_ParentWnd write Set_ParentWnd;
    property PayDepartment: Integer read Get_PayDepartment write Set_PayDepartment;
    property RealPayDepartment: Integer read Get_RealPayDepartment write Set_RealPayDepartment;
    property SaleError: WordBool read Get_SaleError write Set_SaleError;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR45Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2831E8FE-1486-4CAA-8968-5DBE4D84326B}
// *********************************************************************//
  IDrvFR45Disp = dispinterface
    ['{2831E8FE-1486-4CAA-8968-5DBE4D84326B}']
    function GetInterval: Integer; dispid 607;
    function OpenSession: Integer; dispid 608;
    function ReprintSlipDocument: Integer; dispid 609;
    function SetInterval: Integer; dispid 610;
    function ShowPayParams: Integer; dispid 611;
    function ShowTablesDlg: Integer; dispid 612;
    function WaitForPrinting: Integer; dispid 613;
    property IntervalNumber: Integer dispid 614;
    property IntervalValue: Integer dispid 615;
    property MobilePayEnabled: WordBool dispid 616;
    property ParamsPageIndex: Integer dispid 617;
    property ParentWnd: Integer dispid 618;
    property PayDepartment: Integer dispid 619;
    property RealPayDepartment: Integer dispid 620;
    property SaleError: WordBool dispid 621;
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR46
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {570BB7D4-A58D-47CB-8DED-045170687AB1}
// *********************************************************************//
  IDrvFR46 = interface(IDrvFR45)
    ['{570BB7D4-A58D-47CB-8DED-045170687AB1}']
    function OutputReceipt: Integer; safecall;
    function Get_ReceiptOutputType: Integer; safecall;
    procedure Set_ReceiptOutputType(Value: Integer); safecall;
    function Sale2: Integer; safecall;
    property ReceiptOutputType: Integer read Get_ReceiptOutputType write Set_ReceiptOutputType;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR46Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {570BB7D4-A58D-47CB-8DED-045170687AB1}
// *********************************************************************//
  IDrvFR46Disp = dispinterface
    ['{570BB7D4-A58D-47CB-8DED-045170687AB1}']
    function OutputReceipt: Integer; dispid 622;
    property ReceiptOutputType: Integer dispid 623;
    function Sale2: Integer; dispid 624;
    function GetInterval: Integer; dispid 607;
    function OpenSession: Integer; dispid 608;
    function ReprintSlipDocument: Integer; dispid 609;
    function SetInterval: Integer; dispid 610;
    function ShowPayParams: Integer; dispid 611;
    function ShowTablesDlg: Integer; dispid 612;
    function WaitForPrinting: Integer; dispid 613;
    property IntervalNumber: Integer dispid 614;
    property IntervalValue: Integer dispid 615;
    property MobilePayEnabled: WordBool dispid 616;
    property ParamsPageIndex: Integer dispid 617;
    property ParentWnd: Integer dispid 618;
    property PayDepartment: Integer dispid 619;
    property RealPayDepartment: Integer dispid 620;
    property SaleError: WordBool dispid 621;
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR47
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D5AE171-6E17-4E72-B512-5FE89F5D8E3B}
// *********************************************************************//
  IDrvFR47 = interface(IDrvFR46)
    ['{6D5AE171-6E17-4E72-B512-5FE89F5D8E3B}']
    function CardPayProperties: Integer; safecall;
    function Get_CardPayEnabled: WordBool; safecall;
    procedure Set_CardPayEnabled(Value: WordBool); safecall;
    function Get_CardPayType: Integer; safecall;
    procedure Set_CardPayType(Value: Integer); safecall;
    function Get_ccUseTextAsWareName: WordBool; safecall;
    procedure Set_ccUseTextAsWareName(Value: WordBool); safecall;
    function Get_ccWareNameLineNumber: Integer; safecall;
    procedure Set_ccWareNameLineNumber(Value: Integer); safecall;
    function Get_ccHeaderLineCount: Integer; safecall;
    procedure Set_ccHeaderLineCount(Value: Integer); safecall;
    function Get_ccProtocol: TCashControlProtocol; safecall;
    procedure Set_ccProtocol(Value: TCashControlProtocol); safecall;
    function PrintCliche: Integer; safecall;
    function Get_LogCommands: WordBool; safecall;
    procedure Set_LogCommands(Value: WordBool); safecall;
    function Get_LogMethods: WordBool; safecall;
    procedure Set_LogMethods(Value: WordBool); safecall;
    function PrintLine: Integer; safecall;
    function Get_BarcodeType: Integer; safecall;
    procedure Set_BarcodeType(Value: Integer); safecall;
    function PrintBarcodeLine: Integer; safecall;
    function Get_BarcodeTypes: WideString; safecall;
    function PrintBarcodeGraph: Integer; safecall;
    function Get_BarcodeAlignment: TBarcodeAlignment; safecall;
    procedure Set_BarcodeAlignment(Value: TBarcodeAlignment); safecall;
    function Get_BarcodeAlignments: WideString; safecall;
    function Get_BarWidth: Integer; safecall;
    procedure Set_BarWidth(Value: Integer); safecall;
    function Get_CapGetShortECRStatus: WordBool; safecall;
    function Get_WaitForPrintingDelay: Integer; safecall;
    procedure Set_WaitForPrintingDelay(Value: Integer); safecall;
    function ResetECR: Integer; safecall;
    function PrintZReportInBuffer: Integer; safecall;
    function PrintZReportFromBuffer: Integer; safecall;
    function Get_LineSwapBytes: WordBool; safecall;
    procedure Set_LineSwapBytes(Value: WordBool); safecall;
    property CardPayEnabled: WordBool read Get_CardPayEnabled write Set_CardPayEnabled;
    property CardPayType: Integer read Get_CardPayType write Set_CardPayType;
    property ccUseTextAsWareName: WordBool read Get_ccUseTextAsWareName write Set_ccUseTextAsWareName;
    property ccWareNameLineNumber: Integer read Get_ccWareNameLineNumber write Set_ccWareNameLineNumber;
    property ccHeaderLineCount: Integer read Get_ccHeaderLineCount write Set_ccHeaderLineCount;
    property ccProtocol: TCashControlProtocol read Get_ccProtocol write Set_ccProtocol;
    property LogCommands: WordBool read Get_LogCommands write Set_LogCommands;
    property LogMethods: WordBool read Get_LogMethods write Set_LogMethods;
    property BarcodeType: Integer read Get_BarcodeType write Set_BarcodeType;
    property BarcodeTypes: WideString read Get_BarcodeTypes;
    property BarcodeAlignment: TBarcodeAlignment read Get_BarcodeAlignment write Set_BarcodeAlignment;
    property BarcodeAlignments: WideString read Get_BarcodeAlignments;
    property BarWidth: Integer read Get_BarWidth write Set_BarWidth;
    property CapGetShortECRStatus: WordBool read Get_CapGetShortECRStatus;
    property WaitForPrintingDelay: Integer read Get_WaitForPrintingDelay write Set_WaitForPrintingDelay;
    property LineSwapBytes: WordBool read Get_LineSwapBytes write Set_LineSwapBytes;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR47Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D5AE171-6E17-4E72-B512-5FE89F5D8E3B}
// *********************************************************************//
  IDrvFR47Disp = dispinterface
    ['{6D5AE171-6E17-4E72-B512-5FE89F5D8E3B}']
    function CardPayProperties: Integer; dispid 626;
    property CardPayEnabled: WordBool dispid 625;
    property CardPayType: Integer dispid 628;
    property ccUseTextAsWareName: WordBool dispid 627;
    property ccWareNameLineNumber: Integer dispid 629;
    property ccHeaderLineCount: Integer dispid 630;
    property ccProtocol: TCashControlProtocol dispid 631;
    function PrintCliche: Integer; dispid 632;
    property LogCommands: WordBool dispid 633;
    property LogMethods: WordBool dispid 634;
    function PrintLine: Integer; dispid 635;
    property BarcodeType: Integer dispid 636;
    function PrintBarcodeLine: Integer; dispid 637;
    property BarcodeTypes: WideString readonly dispid 638;
    function PrintBarcodeGraph: Integer; dispid 639;
    property BarcodeAlignment: TBarcodeAlignment dispid 640;
    property BarcodeAlignments: WideString readonly dispid 641;
    property BarWidth: Integer dispid 642;
    property CapGetShortECRStatus: WordBool readonly dispid 643;
    property WaitForPrintingDelay: Integer dispid 644;
    function ResetECR: Integer; dispid 645;
    function PrintZReportInBuffer: Integer; dispid 646;
    function PrintZReportFromBuffer: Integer; dispid 647;
    property LineSwapBytes: WordBool dispid 648;
    function OutputReceipt: Integer; dispid 622;
    property ReceiptOutputType: Integer dispid 623;
    function Sale2: Integer; dispid 624;
    function GetInterval: Integer; dispid 607;
    function OpenSession: Integer; dispid 608;
    function ReprintSlipDocument: Integer; dispid 609;
    function SetInterval: Integer; dispid 610;
    function ShowPayParams: Integer; dispid 611;
    function ShowTablesDlg: Integer; dispid 612;
    function WaitForPrinting: Integer; dispid 613;
    property IntervalNumber: Integer dispid 614;
    property IntervalValue: Integer dispid 615;
    property MobilePayEnabled: WordBool dispid 616;
    property ParamsPageIndex: Integer dispid 617;
    property ParentWnd: Integer dispid 618;
    property PayDepartment: Integer dispid 619;
    property RealPayDepartment: Integer dispid 620;
    property SaleError: WordBool dispid 621;
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR48
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9BFA98D-04ED-4B1E-A874-4C6C3A91930E}
// *********************************************************************//
  IDrvFR48 = interface(IDrvFR47)
    ['{A9BFA98D-04ED-4B1E-A874-4C6C3A91930E}']
    function ClearPrintBuffer: Integer; safecall;
    function JournalClear: Integer; safecall;
    function JournalGetRow: Integer; safecall;
    function JournalInit: Integer; safecall;
    function ReadPrintBufferLine: Integer; safecall;
    function ReadPrintBufferLineNumber: Integer; safecall;
    function Get_JournalEnabled: WordBool; safecall;
    procedure Set_JournalEnabled(Value: WordBool); safecall;
    function Get_JournalRow: WideString; safecall;
    function Get_JournalRowCount: Integer; safecall;
    function Get_JournalRowNumber: Integer; safecall;
    procedure Set_JournalRowNumber(Value: Integer); safecall;
    function Get_JournalText: WideString; safecall;
    function Get_LogFileMaxSize: Integer; safecall;
    procedure Set_LogFileMaxSize(Value: Integer); safecall;
    function Get_PrintBufferFormat: Integer; safecall;
    procedure Set_PrintBufferFormat(Value: Integer); safecall;
    function Get_PrintBufferLineNumber: Integer; safecall;
    function FindDevice: Integer; safecall;
    function LoadParams: Integer; safecall;
    function Get_NakCount: Integer; safecall;
    procedure Set_NakCount(Value: Integer); safecall;
    function Get_MaxCommandSendCount: Integer; safecall;
    procedure Set_MaxCommandSendCount(Value: Integer); safecall;
    function Get_MaxAnswerReadCount: Integer; safecall;
    procedure Set_MaxAnswerReadCount(Value: Integer); safecall;
    function Get_MaxENQSendCount: Integer; safecall;
    procedure Set_MaxENQSendCount(Value: Integer); safecall;
    function FinishDocument: Integer; safecall;
    function PrintTrailer: Integer; safecall;
    function Get_FinishDocumentMode: TFinishDocumentMode; safecall;
    procedure Set_FinishDocumentMode(Value: TFinishDocumentMode); safecall;
    function Get_LineDataHex: WideString; safecall;
    procedure Set_LineDataHex(const Value: WideString); safecall;
    function Get_SerialNumberAsInteger: Integer; safecall;
    function Get_INNAsInteger: Integer; safecall;
    function Get_ECRDate: TDateTime; safecall;
    procedure Set_ECRDate(Value: TDateTime); safecall;
    function Get_ECRTime: TDateTime; safecall;
    procedure Set_ECRTime(Value: TDateTime); safecall;
    function WaitForCheckClose: Integer; safecall;
    function GetSummFactor: Integer; safecall;
    function GetQuantityFactor: Integer; safecall;
    function ReadDeviceMetrics: Integer; safecall;
    function ReadEcrStatus: Integer; safecall;
    function SaveState: Integer; safecall;
    function RestoreState: Integer; safecall;
    function Get_HasCashControlLicense: WordBool; safecall;
    function Get_BufferingType: Integer; safecall;
    procedure Set_BufferingType(Value: Integer); safecall;
    function GetPortNames: WideString; safecall;
    function Get_CommandRetryCount: Integer; safecall;
    procedure Set_CommandRetryCount(Value: Integer); safecall;
    function Get_FileName: WideString; safecall;
    procedure Set_FileName(const Value: WideString); safecall;
    function LoadImage: Integer; safecall;
    function Get_CenterImage: WordBool; safecall;
    procedure Set_CenterImage(Value: WordBool); safecall;
    function Get_ShowProgress: WordBool; safecall;
    procedure Set_ShowProgress(Value: WordBool); safecall;
    function OpenNonfiscalDocument: Integer; safecall;
    function CloseNonFiscalDocument: Integer; safecall;
    function PrintAttribute: Integer; safecall;
    function Get_AttributeNumber: Integer; safecall;
    procedure Set_AttributeNumber(Value: Integer); safecall;
    function Get_AttributeValue: WideString; safecall;
    procedure Set_AttributeValue(const Value: WideString); safecall;
    function Get_ModelID: Integer; safecall;
    procedure Set_ModelID(Value: Integer); safecall;
    function ReadModelParamValue: Integer; safecall;
    function Get_ModelParamValue: OleVariant; safecall;
    function Get_ModelParamNumber: Integer; safecall;
    procedure Set_ModelParamNumber(Value: Integer); safecall;
    function LoadCashControlParams: Integer; safecall;
    function Get_Connected: WordBool; safecall;
    procedure Set_Connected(Value: WordBool); safecall;
    function Get_PrintBarcodeText: Integer; safecall;
    procedure Set_PrintBarcodeText(Value: Integer); safecall;
    function Get_EnteredTaxPassword: Integer; safecall;
    function GetCashAcceptorStatus: Integer; safecall;
    function GetCashAcceptorRegisters: Integer; safecall;
    function CashAcceptorReport: Integer; safecall;
    function Get_Poll1: Integer; safecall;
    function Get_Poll2: Integer; safecall;
    function Get_CashAcceptorPollingMode: Integer; safecall;
    function Get_BanknoteType: Integer; safecall;
    procedure Set_BanknoteType(Value: Integer); safecall;
    function Get_BanknoteCount: Integer; safecall;
    function ReadBanknoteCount: Integer; safecall;
    function Get_FeedAfterCut: WordBool; safecall;
    procedure Set_FeedAfterCut(Value: WordBool); safecall;
    function Get_FeedLineCount: Integer; safecall;
    procedure Set_FeedLineCount(Value: Integer); safecall;
    function Get_LDSysAdminPassword: Integer; safecall;
    procedure Set_LDSysAdminPassword(Value: Integer); safecall;
    function PrintOperationalTaxReport: Integer; safecall;
    function Get_CapOpenCheck: WordBool; safecall;
    function Get_PollDescription: WideString; safecall;
    function Get_ConnectionTimeout: Integer; safecall;
    procedure Set_ConnectionTimeout(Value: Integer); safecall;
    function WaitConnection: Integer; safecall;
    function ReadModelParamDescription: Integer; safecall;
    function Get_ModelParamDescription: WideString; safecall;
    function Get_DriverMajorVersion: LongWord; safecall;
    function Get_DriverMinorVersion: LongWord; safecall;
    function Get_DriverRelease: LongWord; safecall;
    function Get_DriverBuild: LongWord; safecall;
    function Get_DriverVersion: WideString; safecall;
    function PrintBarcodeUsingPrinter: Integer; safecall;
    function Get_HRIPosition: Integer; safecall;
    procedure Set_HRIPosition(Value: Integer); safecall;
    function CloseCheckWithKPK: Integer; safecall;
    function Get_KPKStr: WideString; safecall;
    function ReadEKLZActivizationParams: Integer; safecall;
    function GetShortReportInSessionRange: Integer; safecall;
    function GetShortReportInDatesRange: Integer; safecall;
    function ClearResult: Integer; safecall;
    function ReadLastReceipt: Integer; safecall;
    function ReadLastReceiptLine: Integer; safecall;
    function ReadLastReceiptMac: Integer; safecall;
    function MasterPayClearBuffer: Integer; safecall;
    function MasterPayAddTextBlock: Integer; safecall;
    function MasterPayCreateMac: Integer; safecall;
    function Get_TextBlockNumber: Integer; safecall;
    procedure Set_TextBlockNumber(Value: Integer); safecall;
    function Get_TextBlock: WideString; safecall;
    procedure Set_TextBlock(const Value: WideString); safecall;
    function Get_CashControlProtocols: WideString; safecall;
    function Get_StatusCommand: TStatusCommand; safecall;
    procedure Set_StatusCommand(Value: TStatusCommand); safecall;
    function BeginDocument: Integer; safecall;
    function EndDocument: Integer; safecall;
    function Get_PosControlReceiptSeparator: WideString; safecall;
    procedure Set_PosControlReceiptSeparator(const Value: WideString); safecall;
    function LoadBlockData: Integer; safecall;
    function Get_BlockType: Integer; safecall;
    procedure Set_BlockType(Value: Integer); safecall;
    function Get_BlockNumber: Integer; safecall;
    procedure Set_BlockNumber(Value: Integer); safecall;
    function Get_BlockDataHex: WideString; safecall;
    procedure Set_BlockDataHex(const Value: WideString); safecall;
    function Print2DBarcode: Integer; safecall;
    function Get_BarcodeDataLength: Integer; safecall;
    procedure Set_BarcodeDataLength(Value: Integer); safecall;
    function Get_BarcodeParameter1: Integer; safecall;
    procedure Set_BarcodeParameter1(Value: Integer); safecall;
    function Get_BarcodeParameter2: Integer; safecall;
    procedure Set_BarcodeParameter2(Value: Integer); safecall;
    function Get_BarcodeParameter3: Integer; safecall;
    procedure Set_BarcodeParameter3(Value: Integer); safecall;
    function Get_BarcodeParameter4: Integer; safecall;
    procedure Set_BarcodeParameter4(Value: Integer); safecall;
    function Get_BarcodeParameter5: Integer; safecall;
    procedure Set_BarcodeParameter5(Value: Integer); safecall;
    function Get_BarcodeStartBlockNumber: Integer; safecall;
    procedure Set_BarcodeStartBlockNumber(Value: Integer); safecall;
    function LoadAndPrint2DBarcode: Integer; safecall;
    function Get_ExciseCode: Integer; safecall;
    procedure Set_ExciseCode(Value: Integer); safecall;
    function ExcisableOperation: Integer; safecall;
    function ReadReportBufferLine: Integer; safecall;
    function Get_LogMaxFileSize: Integer; safecall;
    procedure Set_LogMaxFileSize(Value: Integer); safecall;
    function Get_LogMaxFileCount: Integer; safecall;
    procedure Set_LogMaxFileCount(Value: Integer); safecall;
    function Get_SaveSettingsType: Integer; safecall;
    procedure Set_SaveSettingsType(Value: Integer); safecall;
    function ReadParams: Integer; safecall;
    function Get_BinaryConversion: TBinaryConversion; safecall;
    procedure Set_BinaryConversion(Value: TBinaryConversion); safecall;
    function Get_CodePage: TCodePage; safecall;
    procedure Set_CodePage(Value: TCodePage); safecall;
    function Get_PrintJournalBeforeZReport: WordBool; safecall;
    procedure Set_PrintJournalBeforeZReport(Value: WordBool); safecall;
    function GetEKLZCode3Report: Integer; safecall;
    function Get_TransmitStatus: Integer; safecall;
    function Get_TransmitQueueSize: Integer; safecall;
    function Get_TransmitSessionNumber: Integer; safecall;
    function Get_TransmitDocumentNumber: Integer; safecall;
    function ReadModemParameter: Integer; safecall;
    function WriteModemParameter: Integer; safecall;
    function Get_ParameterNumber: Integer; safecall;
    procedure Set_ParameterNumber(Value: Integer); safecall;
    function Get_ParameterValue: WideString; safecall;
    procedure Set_ParameterValue(const Value: WideString); safecall;
    function Get_TranslationEnabled: WordBool; safecall;
    procedure Set_TranslationEnabled(Value: WordBool); safecall;
    function Get_ModelIndex: Integer; safecall;
    procedure Set_ModelIndex(Value: Integer); safecall;
    function Get_ModelNames: WideString; safecall;
    function Get_ModelsCount: Integer; safecall;
    function Get_FMFlagsEx: Integer; safecall;
    function Get_FMMode: Integer; safecall;
    function Get_IsASPDMode: WordBool; safecall;
    function Get_IsCorruptedFMRecords: WordBool; safecall;
    function Get_IsCorruptedFiscalizationInfo: WordBool; safecall;
    function Get_CarryStrings: WordBool; safecall;
    procedure Set_CarryStrings(Value: WordBool); safecall;
    function Get_DelayedPrint: WordBool; safecall;
    procedure Set_DelayedPrint(Value: WordBool); safecall;
    function GetCashRegEx: Integer; safecall;
    function Get_RegSaleRec: Currency; safecall;
    function Get_RegBuyRec: Currency; safecall;
    function Get_RegSaleReturnRec: Currency; safecall;
    function Get_RegBuyReturnRec: Currency; safecall;
    function Get_RegSaleSession: Currency; safecall;
    function Get_RegBuySession: Currency; safecall;
    function Get_RegSaleReturnSession: Currency; safecall;
    function Get_RegBuyReturnSession: Currency; safecall;
    function GetWareBaseCashRegs: Integer; safecall;
    function Get_WareCode: Integer; safecall;
    procedure Set_WareCode(Value: Integer); safecall;
    function PrintCashierReport: Integer; safecall;
    function PrintHourlyReport: Integer; safecall;
    function PrintWareReport: Integer; safecall;
    function UpdateWare: Integer; safecall;
    function ReadWare: Integer; safecall;
    function RemoveWare: Integer; safecall;
    function CheckFM: Integer; safecall;
    function Get_RecordCount: Integer; safecall;
    function Get_CheckingType: Integer; safecall;
    procedure Set_CheckingType(Value: Integer); safecall;
    function ReadErrorDescription: Integer; safecall;
    function Get_ErrorCode: Integer; safecall;
    procedure Set_ErrorCode(Value: Integer); safecall;
    function Get_UseWareCode: WordBool; safecall;
    procedure Set_UseWareCode(Value: WordBool); safecall;
    function Get_RequestErrorDescription: WordBool; safecall;
    procedure Set_RequestErrorDescription(Value: WordBool); safecall;
    function Get_ErrorDescription: WideString; safecall;
    function Get_AdjustRITimeout: WordBool; safecall;
    procedure Set_AdjustRITimeout(Value: WordBool); safecall;
    function Get_UCodePageText: WideString; safecall;
    function Get_ReconnectPort: WordBool; safecall;
    procedure Set_ReconnectPort(Value: WordBool); safecall;
    function Get_DoNotSendENQ: WordBool; safecall;
    procedure Set_DoNotSendENQ(Value: WordBool); safecall;
    function Get_SwapBytesMode: Integer; safecall;
    procedure Set_SwapBytesMode(Value: Integer); safecall;
    function Get_ModelParamIndex: Integer; safecall;
    procedure Set_ModelParamIndex(Value: Integer); safecall;
    function Get_ModelParamCount: Integer; safecall;
    function ReadModelParam: Integer; safecall;
    function InitEEPROM: Integer; safecall;
    function Get_CheckFMConnection: WordBool; safecall;
    procedure Set_CheckFMConnection(Value: WordBool); safecall;
    function Get_CheckEJConnection: WordBool; safecall;
    procedure Set_CheckEJConnection(Value: WordBool); safecall;
    function CheckConnection: Integer; safecall;
    function Get_BarcodeHex: WideString; safecall;
    procedure Set_BarcodeHex(const Value: WideString); safecall;
    function ChangeProtocol: Integer; safecall;
    function Get_ProtocolType: Integer; safecall;
    procedure Set_ProtocolType(Value: Integer); safecall;
    function Get_LDProtocolType: Integer; safecall;
    procedure Set_LDProtocolType(Value: Integer); safecall;
    function GetECRParams: Integer; safecall;
    function Get_LastPrintResult: SYSINT; safecall;
    function Get_UseSlipCheck: WordBool; safecall;
    procedure Set_UseSlipCheck(Value: WordBool); safecall;
    function Get_TypeOfLastEntryFMEx: Integer; safecall;
    function JournalOperation: Integer; safecall;
    function Get_AutoSensorValues: WordBool; safecall;
    procedure Set_AutoSensorValues(Value: WordBool); safecall;
    function Get_SearchTimeout: Integer; safecall;
    procedure Set_SearchTimeout(Value: Integer); safecall;
    function Get_AutoStartSearch: WordBool; safecall;
    procedure Set_AutoStartSearch(Value: WordBool); safecall;
    function Get_TCPConnectionTimeout: Integer; safecall;
    procedure Set_TCPConnectionTimeout(Value: Integer); safecall;
    function GetMFPCode3Status: Integer; safecall;
    function MFPPrepareActivization: Integer; safecall;
    function MFPGetPermitActivizationCode: Integer; safecall;
    function MFPActivization: Integer; safecall;
    function MFPGetPrepareActivizationResult: Integer; safecall;
    function MFPGetCustomerCode: Integer; safecall;
    function MFPCloseArchive: Integer; safecall;
    function MFPSetCustomerCode: Integer; safecall;
    function MFPSetPermitActivizationCode: Integer; safecall;
    function CloseCheckEx: Integer; safecall;
    function Get_Summ5: Currency; safecall;
    procedure Set_Summ5(Value: Currency); safecall;
    function Get_Summ6: Currency; safecall;
    procedure Set_Summ6(Value: Currency); safecall;
    function Get_Summ7: Currency; safecall;
    procedure Set_Summ7(Value: Currency); safecall;
    function Get_Summ8: Currency; safecall;
    procedure Set_Summ8(Value: Currency); safecall;
    function Get_Summ9: Currency; safecall;
    procedure Set_Summ9(Value: Currency); safecall;
    function Get_Summ10: Currency; safecall;
    procedure Set_Summ10(Value: Currency); safecall;
    function Get_Summ11: Currency; safecall;
    procedure Set_Summ11(Value: Currency); safecall;
    function Get_Summ12: Currency; safecall;
    procedure Set_Summ12(Value: Currency); safecall;
    function Get_Summ13: Currency; safecall;
    procedure Set_Summ13(Value: Currency); safecall;
    function Get_Summ14: Currency; safecall;
    procedure Set_Summ14(Value: Currency); safecall;
    function Get_Summ15: Currency; safecall;
    procedure Set_Summ15(Value: Currency); safecall;
    function Get_Summ16: Currency; safecall;
    procedure Set_Summ16(Value: Currency); safecall;
    function Get_CustomerCode: Integer; safecall;
    procedure Set_CustomerCode(Value: Integer); safecall;
    function Get_PermitActivizationCode: Integer; safecall;
    procedure Set_PermitActivizationCode(Value: Integer); safecall;
    function Get_NameCashRegEx: WideString; safecall;
    function Get_ActivizationStatus: Integer; safecall;
    procedure Set_ActivizationStatus(Value: Integer); safecall;
    function Get_MFPStatus: Integer; safecall;
    procedure Set_MFPStatus(Value: Integer); safecall;
    function Get_MFPNumber: WideString; safecall;
    procedure Set_MFPNumber(const Value: WideString); safecall;
    function Get_KPKValue: Integer; safecall;
    procedure Set_KPKValue(Value: Integer); safecall;
    function Get_ActivizationControlByte: Integer; safecall;
    procedure Set_ActivizationControlByte(Value: Integer); safecall;
    function Get_PrepareActivizationRemainCount: Integer; safecall;
    procedure Set_PrepareActivizationRemainCount(Value: Integer); safecall;
    function Get_AnswerCode: Integer; safecall;
    procedure Set_AnswerCode(Value: Integer); safecall;
    function Get_RequestType: Integer; safecall;
    procedure Set_RequestType(Value: Integer); safecall;
    function Get_ReadTimeout: Integer; safecall;
    procedure Set_ReadTimeout(Value: Integer); safecall;
    function ClearReportBuffer: Integer; safecall;
    function Get_LastFMRecordType: Integer; safecall;
    function Get_IsBlockedByWrongTaxPassword: WordBool; safecall;
    function ShowAdditionalParams: Integer; safecall;
    function Get_CloudCashdeskEnabled: WordBool; safecall;
    procedure Set_CloudCashdeskEnabled(Value: WordBool); safecall;
    function Get_ECRID: WideString; safecall;
    procedure Set_ECRID(const Value: WideString); safecall;
    function GetCloudCashdeskParams: Integer; safecall;
    function Get_KSAInfo: WideString; safecall;
    procedure Set_KSAInfo(const Value: WideString); safecall;
    function Get_VertScale: Integer; safecall;
    procedure Set_VertScale(Value: Integer); safecall;
    function Get_HorizScale: Integer; safecall;
    procedure Set_HorizScale(Value: Integer); safecall;
    function DrawScale: Integer; safecall;
    function Get_BarcodeFirstLine: Integer; safecall;
    procedure Set_BarcodeFirstLine(Value: Integer); safecall;
    function Get_SKNOStatus: Integer; safecall;
    procedure Set_SKNOStatus(Value: Integer); safecall;
    function Get_SKNOError: Integer; safecall;
    procedure Set_SKNOError(Value: Integer); safecall;
    function Get_SKNOIdentifier: WideString; safecall;
    procedure Set_SKNOIdentifier(const Value: WideString); safecall;
    function PrintGraphics512: Integer; safecall;
    function LoadGraphics512: Integer; safecall;
    function Get_LineLength: Integer; safecall;
    procedure Set_LineLength(Value: Integer); safecall;
    function Get_GraphBufferType: Integer; safecall;
    procedure Set_GraphBufferType(Value: Integer); safecall;
    function Get_FNLifeState: Integer; safecall;
    function Get_FNCurrentDocument: Integer; safecall;
    procedure Set_FNCurrentDocument(Value: Integer); safecall;
    function Get_FNDocumentData: Integer; safecall;
    function Get_FNSessionState: Integer; safecall;
    function Get_FNWarningFlags: Integer; safecall;
    function Get_FNSoftVersion: WideString; safecall;
    function Get_SyncTimeout: Integer; safecall;
    procedure Set_SyncTimeout(Value: Integer); safecall;
    function FNGetStatus: Integer; safecall;
    function FNGetSerial: Integer; safecall;
    function FNGetExpirationTime: Integer; safecall;
    function FNGetVersion: Integer; safecall;
    function Get_FNSoftType: Integer; safecall;
    function FNBeginFiscalization: Integer; safecall;
    function FNFiscalization: Integer; safecall;
    function Get_FiscalSign: Integer; safecall;
    procedure Set_FiscalSign(Value: Integer); safecall;
    function Get_KKTRegistrationNumber: WideString; safecall;
    procedure Set_KKTRegistrationNumber(const Value: WideString); safecall;
    function Get_TaxType: Integer; safecall;
    procedure Set_TaxType(Value: Integer); safecall;
    function Get_WorkMode: Integer; safecall;
    procedure Set_WorkMode(Value: Integer); safecall;
    function FNResetState: Integer; safecall;
    function FNCancelDocument: Integer; safecall;
    function FNGetFiscalizationResult: Integer; safecall;
    function FNFindDocument: Integer; safecall;
    function Get_DocumentType: Integer; safecall;
    procedure Set_DocumentType(Value: Integer); safecall;
    function Get_OFDTicketReceived: WordBool; safecall;
    procedure Set_OFDTicketReceived(Value: WordBool); safecall;
    function Get_DocumentData: WideString; safecall;
    procedure Set_DocumentData(const Value: WideString); safecall;
    function FNOpenSession: Integer; safecall;
    function FNSendTLV: Integer; safecall;
    function Get_TLVData: WideString; safecall;
    procedure Set_TLVData(const Value: WideString); safecall;
    function FNDiscountOperation: Integer; safecall;
    function FNStorno: Integer; safecall;
    function Get_OFDServer: WideString; safecall;
    procedure Set_OFDServer(const Value: WideString); safecall;
    function Get_OFDPort: Integer; safecall;
    procedure Set_OFDPort(Value: Integer); safecall;
    function Get_OFDPollPeriod: Integer; safecall;
    procedure Set_OFDPollPeriod(Value: Integer); safecall;
    function Get_OFDEnabled: WordBool; safecall;
    procedure Set_OFDEnabled(Value: WordBool); safecall;
    function FNBeginRegistrationReport: Integer; safecall;
    function FNBuildRegistrationReport: Integer; safecall;
    function FNBeginCorrectionReceipt: Integer; safecall;
    function FNBuildCorrectionReceipt: Integer; safecall;
    function FNBeginCalculationStateReport: Integer; safecall;
    function FNBuildCalculationStateReport: Integer; safecall;
    function FNCloseSession: Integer; safecall;
    function FNGetInfoExchangeStatus: Integer; safecall;
    function FNRequestFiscalDocumentTLV: Integer; safecall;
    function FNReadFiscalDocumentTLV: Integer; safecall;
    function FNGetOFDTicketByDocNumber: Integer; safecall;
    function FNBeginCloseFiscalMode: Integer; safecall;
    function FNCloseFiscalMode: Integer; safecall;
    function FNGetUnconfirmedDocCount: Integer; safecall;
    function FNGetCurrentSessionParams: Integer; safecall;
    function FNBeginOpenSession: Integer; safecall;
    function FNBeginCloseSession: Integer; safecall;
    function FNBuildReregistrationReport: Integer; safecall;
    function Get_DocumentCount: Integer; safecall;
    procedure Set_DocumentCount(Value: Integer); safecall;
    function Get_ReceiptNumber: Integer; safecall;
    procedure Set_ReceiptNumber(Value: Integer); safecall;
    function Get_MessageState: Integer; safecall;
    procedure Set_MessageState(Value: Integer); safecall;
    function Get_InfoExchangeStatus: Integer; safecall;
    procedure Set_InfoExchangeStatus(Value: Integer); safecall;
    function Get_MessageCount: Integer; safecall;
    procedure Set_MessageCount(Value: Integer); safecall;
    function Get_ReportTypeInt: Integer; safecall;
    procedure Set_ReportTypeInt(Value: Integer); safecall;
    function Get_DataLength: Integer; safecall;
    procedure Set_DataLength(Value: Integer); safecall;
    function FNDiscountTaxOperation: Integer; safecall;
    function FNCloseCheckEx: Integer; safecall;
    function Get_DiscountValue: Currency; safecall;
    procedure Set_DiscountValue(Value: Currency); safecall;
    function Get_ChargeValue: Currency; safecall;
    procedure Set_ChargeValue(Value: Currency); safecall;
    function Get_TaxValue: Currency; safecall;
    procedure Set_TaxValue(Value: Currency); safecall;
    function Get_RegistrationReasonCode: Integer; safecall;
    procedure Set_RegistrationReasonCode(Value: Integer); safecall;
    function Get_DiscountName: WideString; safecall;
    procedure Set_DiscountName(const Value: WideString); safecall;
    function FNSendCustomerEmail: Integer; safecall;
    function Get_CustomerEmail: WideString; safecall;
    procedure Set_CustomerEmail(const Value: WideString); safecall;
    function Annulment: Integer; safecall;
    function Get_Date2: TDateTime; safecall;
    procedure Set_Date2(Value: TDateTime); safecall;
    function Get_Time2: TDateTime; safecall;
    procedure Set_Time2(Value: TDateTime); safecall;
    function Get_FiscalSignOFD: WideString; safecall;
    procedure Set_FiscalSignOFD(const Value: WideString); safecall;
    function Get_AutoOpenSession: WordBool; safecall;
    procedure Set_AutoOpenSession(Value: WordBool); safecall;
    function FNDiscountChargeRN: Integer; safecall;
    function ImportTables: Integer; safecall;
    function ExportTables: Integer; safecall;
    function FNSendTag: Integer; safecall;
    function Get_TagNumber: Integer; safecall;
    procedure Set_TagNumber(Value: Integer); safecall;
    function Get_TagType: Integer; safecall;
    procedure Set_TagType(Value: Integer); safecall;
    function Get_TagValueInt: Integer; safecall;
    procedure Set_TagValueInt(Value: Integer); safecall;
    function Get_TagValueStr: WideString; safecall;
    procedure Set_TagValueStr(const Value: WideString); safecall;
    function Get_TagValueFVLN: Currency; safecall;
    procedure Set_TagValueFVLN(Value: Currency); safecall;
    function Get_TagValueDateTime: TDateTime; safecall;
    procedure Set_TagValueDateTime(Value: TDateTime); safecall;
    function Get_TagValueLength: Integer; safecall;
    procedure Set_TagValueLength(Value: Integer); safecall;
    function Get_TagValueBin: WideString; safecall;
    procedure Set_TagValueBin(const Value: WideString); safecall;
    function ReadSerialNumber: Integer; safecall;
    function FNPrintOperatorConfirm: Integer; safecall;
    function FNGetFiscalizationResultByNumber: Integer; safecall;
    function AnnulmentRB: Integer; safecall;
    function FNGetTagDescription: Integer; safecall;
    function Get_TagDescription: WideString; safecall;
    procedure Set_TagDescription(const Value: WideString); safecall;
    function FNPrintDocument: Integer; safecall;
    function FNGetDocumentAsString: Integer; safecall;
    function Get_ShowTagNumber: WordBool; safecall;
    procedure Set_ShowTagNumber(Value: WordBool); safecall;
    function Ping: Integer; safecall;
    function Get_URL: WideString; safecall;
    procedure Set_URL(const Value: WideString); safecall;
    function Get_PingTime: Integer; safecall;
    procedure Set_PingTime(Value: Integer); safecall;
    function Get_PingResult: Integer; safecall;
    procedure Set_PingResult(Value: Integer); safecall;
    function Get_ICSEnabled: WordBool; safecall;
    procedure Set_ICSEnabled(Value: WordBool); safecall;
    function Get_ICSPollPeriod: Integer; safecall;
    procedure Set_ICSPollPeriod(Value: Integer); safecall;
    function FNOperation: Integer; safecall;
    function FNSendTLVOperation: Integer; safecall;
    function Get_RoundingSumm: Integer; safecall;
    procedure Set_RoundingSumm(Value: Integer); safecall;
    function Get_TaxValue1: Currency; safecall;
    procedure Set_TaxValue1(Value: Currency); safecall;
    function Get_TaxValue2: Currency; safecall;
    procedure Set_TaxValue2(Value: Currency); safecall;
    function Get_TaxValue3: Currency; safecall;
    procedure Set_TaxValue3(Value: Currency); safecall;
    function Get_TaxValue4: Currency; safecall;
    procedure Set_TaxValue4(Value: Currency); safecall;
    function Get_TaxValue5: Currency; safecall;
    procedure Set_TaxValue5(Value: Currency); safecall;
    function Get_TaxValue6: Currency; safecall;
    procedure Set_TaxValue6(Value: Currency); safecall;
    function Get_TaxValue1Enabled: WordBool; safecall;
    procedure Set_TaxValue1Enabled(Value: WordBool); safecall;
    function Get_TaxValue2Enabled: WordBool; safecall;
    procedure Set_TaxValue2Enabled(Value: WordBool); safecall;
    function Get_TaxValue3Enabled: WordBool; safecall;
    procedure Set_TaxValue3Enabled(Value: WordBool); safecall;
    function Get_TaxValue4Enabled: WordBool; safecall;
    procedure Set_TaxValue4Enabled(Value: WordBool); safecall;
    function Get_TaxValue5Enabled: WordBool; safecall;
    procedure Set_TaxValue5Enabled(Value: WordBool); safecall;
    function Get_TaxValue6Enabled: WordBool; safecall;
    procedure Set_TaxValue6Enabled(Value: WordBool); safecall;
    function Get_TaxValueEnabled: WordBool; safecall;
    procedure Set_TaxValueEnabled(Value: WordBool); safecall;
    function Get_Summ1Enabled: WordBool; safecall;
    procedure Set_Summ1Enabled(Value: WordBool); safecall;
    function Get_PaymentTypeSign: Integer; safecall;
    procedure Set_PaymentTypeSign(Value: Integer); safecall;
    function Get_PaymentItemSign: Integer; safecall;
    procedure Set_PaymentItemSign(Value: Integer); safecall;
    function FNBuildCorrectionReceipt2: Integer; safecall;
    function Get_CalculationSign: Integer; safecall;
    procedure Set_CalculationSign(Value: Integer); safecall;
    function Get_CorrectionType: Integer; safecall;
    procedure Set_CorrectionType(Value: Integer); safecall;
    function Get_OFDReadTimeout: Integer; safecall;
    procedure Set_OFDReadTimeout(Value: Integer); safecall;
    function Get_AutoEoD: WordBool; safecall;
    procedure Set_AutoEoD(Value: WordBool); safecall;
    function FNGetNonClearableSumm: Integer; safecall;
    function ResetSerialNumber: Integer; safecall;
    function Get_FiscalSignAsString: WideString; safecall;
    function DBFindDocument: Integer; safecall;
    function Get_DBFilePath: WideString; safecall;
    procedure Set_DBFilePath(const Value: WideString); safecall;
    function DBPrintDocument: Integer; safecall;
    function Get_KKTLicense: Integer; safecall;
    procedure Set_KKTLicense(Value: Integer); safecall;
    function Get_LicenseNumber: Integer; safecall;
    procedure Set_LicenseNumber(Value: Integer); safecall;
    function Get_PUKCode: Integer; safecall;
    procedure Set_PUKCode(Value: Integer); safecall;
    function ReadKKTLicenses: Integer; safecall;
    function GetKKTLicenseByNumber: Integer; safecall;
    function Get_OFDExchangeSuspended: WordBool; safecall;
    procedure Set_OFDExchangeSuspended(Value: WordBool); safecall;
    function CloseCheckBel: Integer; safecall;
    function Get_AutoOFDExchange: WordBool; safecall;
    procedure Set_AutoOFDExchange(Value: WordBool); safecall;
    function WriteKKTLicense: Integer; safecall;
    function FNSendSenderEmail: Integer; safecall;
    function Get_EmailAddress: WideString; safecall;
    procedure Set_EmailAddress(const Value: WideString); safecall;
    function Get_Discount1: Currency; safecall;
    procedure Set_Discount1(Value: Currency); safecall;
    function Get_Discount2: Currency; safecall;
    procedure Set_Discount2(Value: Currency); safecall;
    function Get_Discount3: Currency; safecall;
    procedure Set_Discount3(Value: Currency); safecall;
    function Get_Discount4: Currency; safecall;
    procedure Set_Discount4(Value: Currency); safecall;
    function Get_UseTaxDiscountBel: WordBool; safecall;
    procedure Set_UseTaxDiscountBel(Value: WordBool); safecall;
    function Get_Summ1AsString: WideString; safecall;
    function Get_Summ2AsString: WideString; safecall;
    function Get_Summ3AsString: WideString; safecall;
    function Get_Summ4AsString: WideString; safecall;
    function DBQueryDocumentsInSession: Integer; safecall;
    function DBGetNextDocument: Integer; safecall;
    function DBPrintNextDocument: Integer; safecall;
    function Get_DBDocType: Integer; safecall;
    procedure Set_DBDocType(Value: Integer); safecall;
    function OnlinePay: Integer; safecall;
    function OPGetLastStatus: Integer; safecall;
    function OPGetLastRequisite: Integer; safecall;
    function Get_OPSystem: Integer; safecall;
    procedure Set_OPSystem(Value: Integer); safecall;
    function Get_OPTransactionType: Integer; safecall;
    procedure Set_OPTransactionType(Value: Integer); safecall;
    function Get_OPBarcodeInputType: Integer; safecall;
    procedure Set_OPBarcodeInputType(Value: Integer); safecall;
    function Get_OPIdPayment: WideString; safecall;
    procedure Set_OPIdPayment(const Value: WideString); safecall;
    function Get_OPTransactionStatus: Integer; safecall;
    procedure Set_OPTransactionStatus(Value: Integer); safecall;
    function Get_OPRequisiteNumber: Integer; safecall;
    procedure Set_OPRequisiteNumber(Value: Integer); safecall;
    function Get_OPRequisiteValue: WideString; safecall;
    procedure Set_OPRequisiteValue(const Value: WideString); safecall;
    function GenerateMonoToken: Integer; safecall;
    function Get_Token: WideString; safecall;
    procedure Set_Token(const Value: WideString); safecall;
    function RebootKKT: Integer; safecall;
    function FNSendTagOperation: Integer; safecall;
    function FNBeginSTLVTag: Integer; safecall;
    function FNAddTag: Integer; safecall;
    function FNSendSTLVTagOperation: Integer; safecall;
    function FNSendSTLVTag: Integer; safecall;
    function Get_TagID: Integer; safecall;
    procedure Set_TagID(Value: Integer); safecall;
    function LoadFontSymbol: Integer; safecall;
    function Get_SymbolCode: Integer; safecall;
    procedure Set_SymbolCode(Value: Integer); safecall;
    function Get_BlockData: WideString; safecall;
    procedure Set_BlockData(const Value: WideString); safecall;
    function Get_SymbolHeight: Integer; safecall;
    procedure Set_SymbolHeight(Value: Integer); safecall;
    function Get_SymbolWidth: Integer; safecall;
    procedure Set_SymbolWidth(Value: Integer); safecall;
    function Get_FileType: Integer; safecall;
    procedure Set_FileType(Value: Integer); safecall;
    function LoadFont: Integer; safecall;
    function LoadBlockOnSDCard: Integer; safecall;
    function LoadFileOnSDCard: Integer; safecall;
    function Get_DelayOnDisconnect: Integer; safecall;
    procedure Set_DelayOnDisconnect(Value: Integer); safecall;
    function PrintStringWithWrap: Integer; safecall;
    function Get_WrapStrings: WordBool; safecall;
    procedure Set_WrapStrings(Value: WordBool); safecall;
    function FNSendItemCodeData: Integer; safecall;
    function Get_GTIN: WideString; safecall;
    procedure Set_GTIN(const Value: WideString); safecall;
    function Get_MarkingType: Integer; safecall;
    procedure Set_MarkingType(Value: Integer); safecall;
    function FNCheckItemBarcode: Integer; safecall;
    function FNRequestRegistrationTLV: Integer; safecall;
    function ReadLoaderVersion: Integer; safecall;
    function Get_LoaderVersion: WideString; safecall;
    function Get_RequestDocumentType: Integer; safecall;
    procedure Set_RequestDocumentType(Value: Integer); safecall;
    function FNOpenCheckCorrection: Integer; safecall;
    function Get_WorkModeEx: Integer; safecall;
    procedure Set_WorkModeEx(Value: Integer); safecall;
    function Get_INNOFD: WideString; safecall;
    procedure Set_INNOFD(const Value: WideString); safecall;
    function Get_RegistrationReasonCodeEx: Integer; safecall;
    procedure Set_RegistrationReasonCodeEx(Value: Integer); safecall;
    function FNCountersSync: Integer; safecall;
    function FNGetFreeMemoryResource: Integer; safecall;
    function Get_FN5YearResource: Integer; safecall;
    function Get_FN30DayResource: Integer; safecall;
    function UpdateFirmware: Integer; safecall;
    function SetDFUMode: Integer; safecall;
    function Get_UpdateFirmwareSuspended: WordBool; safecall;
    procedure Set_UpdateFirmwareSuspended(Value: WordBool); safecall;
    function Get_UpdateFirmwareStatus: Integer; safecall;
    function CancelFirmwareUpdate: Integer; safecall;
    function Get_UpdateFirmwareStatusMessage: WideString; safecall;
    function Get_PluginsEnabled: WordBool; safecall;
    procedure Set_PluginsEnabled(Value: WordBool); safecall;
    function WriteRNMTj: Integer; safecall;
    function ReadRNMTj: Integer; safecall;
    function FNGetNonClearableSummEx: Integer; safecall;
    function Get_FWUpdateEnabled: WordBool; safecall;
    procedure Set_FWUpdateEnabled(Value: WordBool); safecall;
    function Get_FWUpdateServerURL: WideString; safecall;
    procedure Set_FWUpdateServerURL(const Value: WideString); safecall;
    function Get_FWUpdatePollInterval: Integer; safecall;
    procedure Set_FWUpdatePollInterval(Value: Integer); safecall;
    function Get_AuthKey: WideString; safecall;
    procedure Set_AuthKey(const Value: WideString); safecall;
    function WriteAuthKey: Integer; safecall;
    function RewriteAuthKey: Integer; safecall;
    function ResetAuthKey: Integer; safecall;
    function Get_NewAuthKey: WideString; safecall;
    procedure Set_NewAuthKey(const Value: WideString); safecall;
    function SaveAuthKey: Integer; safecall;
    function DeleteAuthKey: Integer; safecall;
    function Get_AuthKeyStorageType: Integer; safecall;
    procedure Set_AuthKeyStorageType(Value: Integer); safecall;
    function Get_ItemStatus: Integer; safecall;
    procedure Set_ItemStatus(Value: Integer); safecall;
    function Get_CheckItemMode: Integer; safecall;
    procedure Set_CheckItemMode(Value: Integer); safecall;
    function Get_ItemSaleServerAllowed: Integer; safecall;
    procedure Set_ItemSaleServerAllowed(Value: Integer); safecall;
    function Get_CheckItemLocalResult: Integer; safecall;
    procedure Set_CheckItemLocalResult(Value: Integer); safecall;
    function Get_KMServerErrorCode: Integer; safecall;
    procedure Set_KMServerErrorCode(Value: Integer); safecall;
    function Get_KMServerCheckingStatus: Integer; safecall;
    procedure Set_KMServerCheckingStatus(Value: Integer); safecall;
    function Get_SymbolicType: Integer; safecall;
    procedure Set_SymbolicType(Value: Integer); safecall;
    function Get_ProcessingCode: Integer; safecall;
    procedure Set_ProcessingCode(Value: Integer); safecall;
    function FNBindMarkingItem: Integer; safecall;
    function FNGetKMServerExchangeStatus: Integer; safecall;
    function Get_ConnectionStatus: Integer; safecall;
    procedure Set_ConnectionStatus(Value: Integer); safecall;
    function Get_MessageNumber: Integer; safecall;
    procedure Set_MessageNumber(Value: Integer); safecall;
    function Get_FreeMemorySize: Integer; safecall;
    procedure Set_FreeMemorySize(Value: Integer); safecall;
    function FNAcceptMakringCode: Integer; safecall;
    function FNDeclineMarkingCode: Integer; safecall;
    function Get_ItemNameLength: Integer; safecall;
    procedure Set_ItemNameLength(Value: Integer); safecall;
    function ReadFeatureLicenses: Integer; safecall;
    function WriteFeatureLicenses: Integer; safecall;
    function Get_DigitalSign: WideString; safecall;
    procedure Set_DigitalSign(const Value: WideString); safecall;
    function Get_UpdateFirmwareMethod: Integer; safecall;
    procedure Set_UpdateFirmwareMethod(Value: Integer); safecall;
    function PluginsUpdateSettings: Integer; safecall;
    function FNSendUserAttribute: Integer; safecall;
    function Get_UserAttributeName: WideString; safecall;
    procedure Set_UserAttributeName(const Value: WideString); safecall;
    function Get_UserAttributeValue: WideString; safecall;
    procedure Set_UserAttributeValue(const Value: WideString); safecall;
    function Get_TagValueVLN: WideString; safecall;
    procedure Set_TagValueVLN(const Value: WideString); safecall;
    function FNSendItemBarcode: Integer; safecall;
    function Get_TLVDataHex: WideString; safecall;
    procedure Set_TLVDataHex(const Value: WideString); safecall;
    function FNBeginReadArchive: Integer; safecall;
    function FNReadArchiveItem: Integer; safecall;
    function FNSaveArchive: Integer; safecall;
    function Get_FirstDocumentNumber: Integer; safecall;
    procedure Set_FirstDocumentNumber(Value: Integer); safecall;
    function Get_LastDocumentNumber: Integer; safecall;
    procedure Set_LastDocumentNumber(Value: Integer); safecall;
    function Get_FNArchiveType: Integer; safecall;
    procedure Set_FNArchiveType(Value: Integer); safecall;
    function Get_MarkingOnly: WordBool; safecall;
    procedure Set_MarkingOnly(Value: WordBool); safecall;
    function FNOperationMdlp: Integer; safecall;
    function FNCloseCheckMdlp: Integer; safecall;
    function Get_MarkingTypeEx: Integer; safecall;
    procedure Set_MarkingTypeEx(Value: Integer); safecall;
    function Get_TagValueBinHex: WideString; safecall;
    procedure Set_TagValueBinHex(const Value: WideString); safecall;
    function Get_FWUpdateSearchTimeout: Integer; safecall;
    procedure Set_FWUpdateSearchTimeout(Value: Integer); safecall;
    function Get_FWUpdWriteTimeout: Integer; safecall;
    procedure Set_FWUpdWriteTimeout(Value: Integer); safecall;
    function Get_FWUpdDelayAfterReboot: Integer; safecall;
    procedure Set_FWUpdDelayAfterReboot(Value: Integer); safecall;
    function Get_FWUpdDelayBeforeWrite: Integer; safecall;
    procedure Set_FWUpdDelayBeforeWrite(Value: Integer); safecall;
    function Get_FWUpdDelayBeforeSearch: Integer; safecall;
    procedure Set_FWUpdDelayBeforeSearch(Value: Integer); safecall;
    function FNGetMarkingCodeWorkStatus: Integer; safecall;
    function Get_MCCheckStatus: Integer; safecall;
    procedure Set_MCCheckStatus(Value: Integer); safecall;
    function Get_MCNotificationStatus: Integer; safecall;
    procedure Set_MCNotificationStatus(Value: Integer); safecall;
    function Get_MCCheckResultSavedCount: Integer; safecall;
    procedure Set_MCCheckResultSavedCount(Value: Integer); safecall;
    function Get_MCCommandFlags: Integer; safecall;
    procedure Set_MCCommandFlags(Value: Integer); safecall;
    function Get_MCRealizationCount: Integer; safecall;
    procedure Set_MCRealizationCount(Value: Integer); safecall;
    function Get_MCStorageSize: Integer; safecall;
    procedure Set_MCStorageSize(Value: Integer); safecall;
    function GetTagAsTLV: Integer; safecall;
    function Get_CheckItemLocalError: Integer; safecall;
    procedure Set_CheckItemLocalError(Value: Integer); safecall;
    function Get_MeasureUnit: Integer; safecall;
    procedure Set_MeasureUnit(Value: Integer); safecall;
    function FNBeginReadNotifications: Integer; safecall;
    function FNReadNotificationBlock: Integer; safecall;
    function Get_NotificationCount: Integer; safecall;
    procedure Set_NotificationCount(Value: Integer); safecall;
    function Get_NotificationNumber: Integer; safecall;
    procedure Set_NotificationNumber(Value: Integer); safecall;
    function Get_NotificationSize: Integer; safecall;
    procedure Set_NotificationSize(Value: Integer); safecall;
    function Get_DataOffset: Integer; safecall;
    procedure Set_DataOffset(Value: Integer); safecall;
    function Get_CheckSum: Integer; safecall;
    procedure Set_CheckSum(Value: Integer); safecall;
    function FNConfirmNotificationRead: Integer; safecall;
    function Get_DivisionalQuantity: WordBool; safecall;
    procedure Set_DivisionalQuantity(Value: WordBool); safecall;
    function Get_Numerator: WideString; safecall;
    procedure Set_Numerator(const Value: WideString); safecall;
    function Get_Denominator: WideString; safecall;
    procedure Set_Denominator(const Value: WideString); safecall;
    function Get_MarkingType2: Integer; safecall;
    procedure Set_MarkingType2(Value: Integer); safecall;
    function FNAcceptMarkingCode: Integer; safecall;
    function Get_FNMarkingFillPercentage: Integer; safecall;
    procedure Set_FNMarkingFillPercentage(Value: Integer); safecall;
    function FNReadFiscalBarcode: Integer; safecall;
    function Get_TagValueFVLND: Double; safecall;
    procedure Set_TagValueFVLND(Value: Double); safecall;
    function FNMarkingClearBuffer: Integer; safecall;
    function Get_FWUpdateSaveTables: WordBool; safecall;
    procedure Set_FWUpdateSaveTables(Value: WordBool); safecall;
    function FNCheckItemBarcode2: Integer; safecall;
    function PlainTransferEnable: Integer; safecall;
    function PlainTransferDisable: Integer; safecall;
    function Get_PlainTransferMode: Integer; safecall;
    procedure Set_PlainTransferMode(Value: Integer); safecall;
    function Get_FWUpdateFFDParams: Integer; safecall;
    procedure Set_FWUpdateFFDParams(Value: Integer); safecall;
    function Get_FWUpdateFFDWaitInterval: Integer; safecall;
    procedure Set_FWUpdateFFDWaitInterval(Value: Integer); safecall;
    property JournalEnabled: WordBool read Get_JournalEnabled write Set_JournalEnabled;
    property JournalRow: WideString read Get_JournalRow;
    property JournalRowCount: Integer read Get_JournalRowCount;
    property JournalRowNumber: Integer read Get_JournalRowNumber write Set_JournalRowNumber;
    property JournalText: WideString read Get_JournalText;
    property LogFileMaxSize: Integer read Get_LogFileMaxSize write Set_LogFileMaxSize;
    property PrintBufferFormat: Integer read Get_PrintBufferFormat write Set_PrintBufferFormat;
    property PrintBufferLineNumber: Integer read Get_PrintBufferLineNumber;
    property NakCount: Integer read Get_NakCount write Set_NakCount;
    property MaxCommandSendCount: Integer read Get_MaxCommandSendCount write Set_MaxCommandSendCount;
    property MaxAnswerReadCount: Integer read Get_MaxAnswerReadCount write Set_MaxAnswerReadCount;
    property MaxENQSendCount: Integer read Get_MaxENQSendCount write Set_MaxENQSendCount;
    property FinishDocumentMode: TFinishDocumentMode read Get_FinishDocumentMode write Set_FinishDocumentMode;
    property LineDataHex: WideString read Get_LineDataHex write Set_LineDataHex;
    property SerialNumberAsInteger: Integer read Get_SerialNumberAsInteger;
    property INNAsInteger: Integer read Get_INNAsInteger;
    property ECRDate: TDateTime read Get_ECRDate write Set_ECRDate;
    property ECRTime: TDateTime read Get_ECRTime write Set_ECRTime;
    property HasCashControlLicense: WordBool read Get_HasCashControlLicense;
    property BufferingType: Integer read Get_BufferingType write Set_BufferingType;
    property CommandRetryCount: Integer read Get_CommandRetryCount write Set_CommandRetryCount;
    property FileName: WideString read Get_FileName write Set_FileName;
    property CenterImage: WordBool read Get_CenterImage write Set_CenterImage;
    property ShowProgress: WordBool read Get_ShowProgress write Set_ShowProgress;
    property AttributeNumber: Integer read Get_AttributeNumber write Set_AttributeNumber;
    property AttributeValue: WideString read Get_AttributeValue write Set_AttributeValue;
    property ModelID: Integer read Get_ModelID write Set_ModelID;
    property ModelParamValue: OleVariant read Get_ModelParamValue;
    property ModelParamNumber: Integer read Get_ModelParamNumber write Set_ModelParamNumber;
    property Connected: WordBool read Get_Connected write Set_Connected;
    property PrintBarcodeText: Integer read Get_PrintBarcodeText write Set_PrintBarcodeText;
    property EnteredTaxPassword: Integer read Get_EnteredTaxPassword;
    property Poll1: Integer read Get_Poll1;
    property Poll2: Integer read Get_Poll2;
    property CashAcceptorPollingMode: Integer read Get_CashAcceptorPollingMode;
    property BanknoteType: Integer read Get_BanknoteType write Set_BanknoteType;
    property BanknoteCount: Integer read Get_BanknoteCount;
    property FeedAfterCut: WordBool read Get_FeedAfterCut write Set_FeedAfterCut;
    property FeedLineCount: Integer read Get_FeedLineCount write Set_FeedLineCount;
    property LDSysAdminPassword: Integer read Get_LDSysAdminPassword write Set_LDSysAdminPassword;
    property CapOpenCheck: WordBool read Get_CapOpenCheck;
    property PollDescription: WideString read Get_PollDescription;
    property ConnectionTimeout: Integer read Get_ConnectionTimeout write Set_ConnectionTimeout;
    property ModelParamDescription: WideString read Get_ModelParamDescription;
    property DriverMajorVersion: LongWord read Get_DriverMajorVersion;
    property DriverMinorVersion: LongWord read Get_DriverMinorVersion;
    property DriverRelease: LongWord read Get_DriverRelease;
    property DriverBuild: LongWord read Get_DriverBuild;
    property DriverVersion: WideString read Get_DriverVersion;
    property HRIPosition: Integer read Get_HRIPosition write Set_HRIPosition;
    property KPKStr: WideString read Get_KPKStr;
    property TextBlockNumber: Integer read Get_TextBlockNumber write Set_TextBlockNumber;
    property TextBlock: WideString read Get_TextBlock write Set_TextBlock;
    property CashControlProtocols: WideString read Get_CashControlProtocols;
    property StatusCommand: TStatusCommand read Get_StatusCommand write Set_StatusCommand;
    property PosControlReceiptSeparator: WideString read Get_PosControlReceiptSeparator write Set_PosControlReceiptSeparator;
    property BlockType: Integer read Get_BlockType write Set_BlockType;
    property BlockNumber: Integer read Get_BlockNumber write Set_BlockNumber;
    property BlockDataHex: WideString read Get_BlockDataHex write Set_BlockDataHex;
    property BarcodeDataLength: Integer read Get_BarcodeDataLength write Set_BarcodeDataLength;
    property BarcodeParameter1: Integer read Get_BarcodeParameter1 write Set_BarcodeParameter1;
    property BarcodeParameter2: Integer read Get_BarcodeParameter2 write Set_BarcodeParameter2;
    property BarcodeParameter3: Integer read Get_BarcodeParameter3 write Set_BarcodeParameter3;
    property BarcodeParameter4: Integer read Get_BarcodeParameter4 write Set_BarcodeParameter4;
    property BarcodeParameter5: Integer read Get_BarcodeParameter5 write Set_BarcodeParameter5;
    property BarcodeStartBlockNumber: Integer read Get_BarcodeStartBlockNumber write Set_BarcodeStartBlockNumber;
    property ExciseCode: Integer read Get_ExciseCode write Set_ExciseCode;
    property LogMaxFileSize: Integer read Get_LogMaxFileSize write Set_LogMaxFileSize;
    property LogMaxFileCount: Integer read Get_LogMaxFileCount write Set_LogMaxFileCount;
    property SaveSettingsType: Integer read Get_SaveSettingsType write Set_SaveSettingsType;
    property BinaryConversion: TBinaryConversion read Get_BinaryConversion write Set_BinaryConversion;
    property CodePage: TCodePage read Get_CodePage write Set_CodePage;
    property PrintJournalBeforeZReport: WordBool read Get_PrintJournalBeforeZReport write Set_PrintJournalBeforeZReport;
    property TransmitStatus: Integer read Get_TransmitStatus;
    property TransmitQueueSize: Integer read Get_TransmitQueueSize;
    property TransmitSessionNumber: Integer read Get_TransmitSessionNumber;
    property TransmitDocumentNumber: Integer read Get_TransmitDocumentNumber;
    property ParameterNumber: Integer read Get_ParameterNumber write Set_ParameterNumber;
    property ParameterValue: WideString read Get_ParameterValue write Set_ParameterValue;
    property TranslationEnabled: WordBool read Get_TranslationEnabled write Set_TranslationEnabled;
    property ModelIndex: Integer read Get_ModelIndex write Set_ModelIndex;
    property ModelNames: WideString read Get_ModelNames;
    property ModelsCount: Integer read Get_ModelsCount;
    property FMFlagsEx: Integer read Get_FMFlagsEx;
    property FMMode: Integer read Get_FMMode;
    property IsASPDMode: WordBool read Get_IsASPDMode;
    property IsCorruptedFMRecords: WordBool read Get_IsCorruptedFMRecords;
    property IsCorruptedFiscalizationInfo: WordBool read Get_IsCorruptedFiscalizationInfo;
    property CarryStrings: WordBool read Get_CarryStrings write Set_CarryStrings;
    property DelayedPrint: WordBool read Get_DelayedPrint write Set_DelayedPrint;
    property RegSaleRec: Currency read Get_RegSaleRec;
    property RegBuyRec: Currency read Get_RegBuyRec;
    property RegSaleReturnRec: Currency read Get_RegSaleReturnRec;
    property RegBuyReturnRec: Currency read Get_RegBuyReturnRec;
    property RegSaleSession: Currency read Get_RegSaleSession;
    property RegBuySession: Currency read Get_RegBuySession;
    property RegSaleReturnSession: Currency read Get_RegSaleReturnSession;
    property RegBuyReturnSession: Currency read Get_RegBuyReturnSession;
    property WareCode: Integer read Get_WareCode write Set_WareCode;
    property RecordCount: Integer read Get_RecordCount;
    property CheckingType: Integer read Get_CheckingType write Set_CheckingType;
    property ErrorCode: Integer read Get_ErrorCode write Set_ErrorCode;
    property UseWareCode: WordBool read Get_UseWareCode write Set_UseWareCode;
    property RequestErrorDescription: WordBool read Get_RequestErrorDescription write Set_RequestErrorDescription;
    property ErrorDescription: WideString read Get_ErrorDescription;
    property AdjustRITimeout: WordBool read Get_AdjustRITimeout write Set_AdjustRITimeout;
    property UCodePageText: WideString read Get_UCodePageText;
    property ReconnectPort: WordBool read Get_ReconnectPort write Set_ReconnectPort;
    property DoNotSendENQ: WordBool read Get_DoNotSendENQ write Set_DoNotSendENQ;
    property SwapBytesMode: Integer read Get_SwapBytesMode write Set_SwapBytesMode;
    property ModelParamIndex: Integer read Get_ModelParamIndex write Set_ModelParamIndex;
    property ModelParamCount: Integer read Get_ModelParamCount;
    property CheckFMConnection: WordBool read Get_CheckFMConnection write Set_CheckFMConnection;
    property CheckEJConnection: WordBool read Get_CheckEJConnection write Set_CheckEJConnection;
    property BarcodeHex: WideString read Get_BarcodeHex write Set_BarcodeHex;
    property ProtocolType: Integer read Get_ProtocolType write Set_ProtocolType;
    property LDProtocolType: Integer read Get_LDProtocolType write Set_LDProtocolType;
    property LastPrintResult: SYSINT read Get_LastPrintResult;
    property UseSlipCheck: WordBool read Get_UseSlipCheck write Set_UseSlipCheck;
    property TypeOfLastEntryFMEx: Integer read Get_TypeOfLastEntryFMEx;
    property AutoSensorValues: WordBool read Get_AutoSensorValues write Set_AutoSensorValues;
    property SearchTimeout: Integer read Get_SearchTimeout write Set_SearchTimeout;
    property AutoStartSearch: WordBool read Get_AutoStartSearch write Set_AutoStartSearch;
    property TCPConnectionTimeout: Integer read Get_TCPConnectionTimeout write Set_TCPConnectionTimeout;
    property Summ5: Currency read Get_Summ5 write Set_Summ5;
    property Summ6: Currency read Get_Summ6 write Set_Summ6;
    property Summ7: Currency read Get_Summ7 write Set_Summ7;
    property Summ8: Currency read Get_Summ8 write Set_Summ8;
    property Summ9: Currency read Get_Summ9 write Set_Summ9;
    property Summ10: Currency read Get_Summ10 write Set_Summ10;
    property Summ11: Currency read Get_Summ11 write Set_Summ11;
    property Summ12: Currency read Get_Summ12 write Set_Summ12;
    property Summ13: Currency read Get_Summ13 write Set_Summ13;
    property Summ14: Currency read Get_Summ14 write Set_Summ14;
    property Summ15: Currency read Get_Summ15 write Set_Summ15;
    property Summ16: Currency read Get_Summ16 write Set_Summ16;
    property CustomerCode: Integer read Get_CustomerCode write Set_CustomerCode;
    property PermitActivizationCode: Integer read Get_PermitActivizationCode write Set_PermitActivizationCode;
    property NameCashRegEx: WideString read Get_NameCashRegEx;
    property ActivizationStatus: Integer read Get_ActivizationStatus write Set_ActivizationStatus;
    property MFPStatus: Integer read Get_MFPStatus write Set_MFPStatus;
    property MFPNumber: WideString read Get_MFPNumber write Set_MFPNumber;
    property KPKValue: Integer read Get_KPKValue write Set_KPKValue;
    property ActivizationControlByte: Integer read Get_ActivizationControlByte write Set_ActivizationControlByte;
    property PrepareActivizationRemainCount: Integer read Get_PrepareActivizationRemainCount write Set_PrepareActivizationRemainCount;
    property AnswerCode: Integer read Get_AnswerCode write Set_AnswerCode;
    property RequestType: Integer read Get_RequestType write Set_RequestType;
    property ReadTimeout: Integer read Get_ReadTimeout write Set_ReadTimeout;
    property LastFMRecordType: Integer read Get_LastFMRecordType;
    property IsBlockedByWrongTaxPassword: WordBool read Get_IsBlockedByWrongTaxPassword;
    property CloudCashdeskEnabled: WordBool read Get_CloudCashdeskEnabled write Set_CloudCashdeskEnabled;
    property ECRID: WideString read Get_ECRID write Set_ECRID;
    property KSAInfo: WideString read Get_KSAInfo write Set_KSAInfo;
    property VertScale: Integer read Get_VertScale write Set_VertScale;
    property HorizScale: Integer read Get_HorizScale write Set_HorizScale;
    property BarcodeFirstLine: Integer read Get_BarcodeFirstLine write Set_BarcodeFirstLine;
    property SKNOStatus: Integer read Get_SKNOStatus write Set_SKNOStatus;
    property SKNOError: Integer read Get_SKNOError write Set_SKNOError;
    property SKNOIdentifier: WideString read Get_SKNOIdentifier write Set_SKNOIdentifier;
    property LineLength: Integer read Get_LineLength write Set_LineLength;
    property GraphBufferType: Integer read Get_GraphBufferType write Set_GraphBufferType;
    property FNLifeState: Integer read Get_FNLifeState;
    property FNCurrentDocument: Integer read Get_FNCurrentDocument write Set_FNCurrentDocument;
    property FNDocumentData: Integer read Get_FNDocumentData;
    property FNSessionState: Integer read Get_FNSessionState;
    property FNWarningFlags: Integer read Get_FNWarningFlags;
    property FNSoftVersion: WideString read Get_FNSoftVersion;
    property SyncTimeout: Integer read Get_SyncTimeout write Set_SyncTimeout;
    property FNSoftType: Integer read Get_FNSoftType;
    property FiscalSign: Integer read Get_FiscalSign write Set_FiscalSign;
    property KKTRegistrationNumber: WideString read Get_KKTRegistrationNumber write Set_KKTRegistrationNumber;
    property TaxType: Integer read Get_TaxType write Set_TaxType;
    property WorkMode: Integer read Get_WorkMode write Set_WorkMode;
    property DocumentType: Integer read Get_DocumentType write Set_DocumentType;
    property OFDTicketReceived: WordBool read Get_OFDTicketReceived write Set_OFDTicketReceived;
    property DocumentData: WideString read Get_DocumentData write Set_DocumentData;
    property TLVData: WideString read Get_TLVData write Set_TLVData;
    property OFDServer: WideString read Get_OFDServer write Set_OFDServer;
    property OFDPort: Integer read Get_OFDPort write Set_OFDPort;
    property OFDPollPeriod: Integer read Get_OFDPollPeriod write Set_OFDPollPeriod;
    property OFDEnabled: WordBool read Get_OFDEnabled write Set_OFDEnabled;
    property DocumentCount: Integer read Get_DocumentCount write Set_DocumentCount;
    property ReceiptNumber: Integer read Get_ReceiptNumber write Set_ReceiptNumber;
    property MessageState: Integer read Get_MessageState write Set_MessageState;
    property InfoExchangeStatus: Integer read Get_InfoExchangeStatus write Set_InfoExchangeStatus;
    property MessageCount: Integer read Get_MessageCount write Set_MessageCount;
    property ReportTypeInt: Integer read Get_ReportTypeInt write Set_ReportTypeInt;
    property DataLength: Integer read Get_DataLength write Set_DataLength;
    property DiscountValue: Currency read Get_DiscountValue write Set_DiscountValue;
    property ChargeValue: Currency read Get_ChargeValue write Set_ChargeValue;
    property TaxValue: Currency read Get_TaxValue write Set_TaxValue;
    property RegistrationReasonCode: Integer read Get_RegistrationReasonCode write Set_RegistrationReasonCode;
    property DiscountName: WideString read Get_DiscountName write Set_DiscountName;
    property CustomerEmail: WideString read Get_CustomerEmail write Set_CustomerEmail;
    property Date2: TDateTime read Get_Date2 write Set_Date2;
    property Time2: TDateTime read Get_Time2 write Set_Time2;
    property FiscalSignOFD: WideString read Get_FiscalSignOFD write Set_FiscalSignOFD;
    property AutoOpenSession: WordBool read Get_AutoOpenSession write Set_AutoOpenSession;
    property TagNumber: Integer read Get_TagNumber write Set_TagNumber;
    property TagType: Integer read Get_TagType write Set_TagType;
    property TagValueInt: Integer read Get_TagValueInt write Set_TagValueInt;
    property TagValueStr: WideString read Get_TagValueStr write Set_TagValueStr;
    property TagValueFVLN: Currency read Get_TagValueFVLN write Set_TagValueFVLN;
    property TagValueDateTime: TDateTime read Get_TagValueDateTime write Set_TagValueDateTime;
    property TagValueLength: Integer read Get_TagValueLength write Set_TagValueLength;
    property TagValueBin: WideString read Get_TagValueBin write Set_TagValueBin;
    property TagDescription: WideString read Get_TagDescription write Set_TagDescription;
    property ShowTagNumber: WordBool read Get_ShowTagNumber write Set_ShowTagNumber;
    property URL: WideString read Get_URL write Set_URL;
    property PingTime: Integer read Get_PingTime write Set_PingTime;
    property PingResult: Integer read Get_PingResult write Set_PingResult;
    property ICSEnabled: WordBool read Get_ICSEnabled write Set_ICSEnabled;
    property ICSPollPeriod: Integer read Get_ICSPollPeriod write Set_ICSPollPeriod;
    property RoundingSumm: Integer read Get_RoundingSumm write Set_RoundingSumm;
    property TaxValue1: Currency read Get_TaxValue1 write Set_TaxValue1;
    property TaxValue2: Currency read Get_TaxValue2 write Set_TaxValue2;
    property TaxValue3: Currency read Get_TaxValue3 write Set_TaxValue3;
    property TaxValue4: Currency read Get_TaxValue4 write Set_TaxValue4;
    property TaxValue5: Currency read Get_TaxValue5 write Set_TaxValue5;
    property TaxValue6: Currency read Get_TaxValue6 write Set_TaxValue6;
    property TaxValue1Enabled: WordBool read Get_TaxValue1Enabled write Set_TaxValue1Enabled;
    property TaxValue2Enabled: WordBool read Get_TaxValue2Enabled write Set_TaxValue2Enabled;
    property TaxValue3Enabled: WordBool read Get_TaxValue3Enabled write Set_TaxValue3Enabled;
    property TaxValue4Enabled: WordBool read Get_TaxValue4Enabled write Set_TaxValue4Enabled;
    property TaxValue5Enabled: WordBool read Get_TaxValue5Enabled write Set_TaxValue5Enabled;
    property TaxValue6Enabled: WordBool read Get_TaxValue6Enabled write Set_TaxValue6Enabled;
    property TaxValueEnabled: WordBool read Get_TaxValueEnabled write Set_TaxValueEnabled;
    property Summ1Enabled: WordBool read Get_Summ1Enabled write Set_Summ1Enabled;
    property PaymentTypeSign: Integer read Get_PaymentTypeSign write Set_PaymentTypeSign;
    property PaymentItemSign: Integer read Get_PaymentItemSign write Set_PaymentItemSign;
    property CalculationSign: Integer read Get_CalculationSign write Set_CalculationSign;
    property CorrectionType: Integer read Get_CorrectionType write Set_CorrectionType;
    property OFDReadTimeout: Integer read Get_OFDReadTimeout write Set_OFDReadTimeout;
    property AutoEoD: WordBool read Get_AutoEoD write Set_AutoEoD;
    property FiscalSignAsString: WideString read Get_FiscalSignAsString;
    property DBFilePath: WideString read Get_DBFilePath write Set_DBFilePath;
    property KKTLicense: Integer read Get_KKTLicense write Set_KKTLicense;
    property LicenseNumber: Integer read Get_LicenseNumber write Set_LicenseNumber;
    property PUKCode: Integer read Get_PUKCode write Set_PUKCode;
    property OFDExchangeSuspended: WordBool read Get_OFDExchangeSuspended write Set_OFDExchangeSuspended;
    property AutoOFDExchange: WordBool read Get_AutoOFDExchange write Set_AutoOFDExchange;
    property EmailAddress: WideString read Get_EmailAddress write Set_EmailAddress;
    property Discount1: Currency read Get_Discount1 write Set_Discount1;
    property Discount2: Currency read Get_Discount2 write Set_Discount2;
    property Discount3: Currency read Get_Discount3 write Set_Discount3;
    property Discount4: Currency read Get_Discount4 write Set_Discount4;
    property UseTaxDiscountBel: WordBool read Get_UseTaxDiscountBel write Set_UseTaxDiscountBel;
    property Summ1AsString: WideString read Get_Summ1AsString;
    property Summ2AsString: WideString read Get_Summ2AsString;
    property Summ3AsString: WideString read Get_Summ3AsString;
    property Summ4AsString: WideString read Get_Summ4AsString;
    property DBDocType: Integer read Get_DBDocType write Set_DBDocType;
    property OPSystem: Integer read Get_OPSystem write Set_OPSystem;
    property OPTransactionType: Integer read Get_OPTransactionType write Set_OPTransactionType;
    property OPBarcodeInputType: Integer read Get_OPBarcodeInputType write Set_OPBarcodeInputType;
    property OPIdPayment: WideString read Get_OPIdPayment write Set_OPIdPayment;
    property OPTransactionStatus: Integer read Get_OPTransactionStatus write Set_OPTransactionStatus;
    property OPRequisiteNumber: Integer read Get_OPRequisiteNumber write Set_OPRequisiteNumber;
    property OPRequisiteValue: WideString read Get_OPRequisiteValue write Set_OPRequisiteValue;
    property Token: WideString read Get_Token write Set_Token;
    property TagID: Integer read Get_TagID write Set_TagID;
    property SymbolCode: Integer read Get_SymbolCode write Set_SymbolCode;
    property BlockData: WideString read Get_BlockData write Set_BlockData;
    property SymbolHeight: Integer read Get_SymbolHeight write Set_SymbolHeight;
    property SymbolWidth: Integer read Get_SymbolWidth write Set_SymbolWidth;
    property FileType: Integer read Get_FileType write Set_FileType;
    property DelayOnDisconnect: Integer read Get_DelayOnDisconnect write Set_DelayOnDisconnect;
    property WrapStrings: WordBool read Get_WrapStrings write Set_WrapStrings;
    property GTIN: WideString read Get_GTIN write Set_GTIN;
    property MarkingType: Integer read Get_MarkingType write Set_MarkingType;
    property LoaderVersion: WideString read Get_LoaderVersion;
    property RequestDocumentType: Integer read Get_RequestDocumentType write Set_RequestDocumentType;
    property WorkModeEx: Integer read Get_WorkModeEx write Set_WorkModeEx;
    property INNOFD: WideString read Get_INNOFD write Set_INNOFD;
    property RegistrationReasonCodeEx: Integer read Get_RegistrationReasonCodeEx write Set_RegistrationReasonCodeEx;
    property FN5YearResource: Integer read Get_FN5YearResource;
    property FN30DayResource: Integer read Get_FN30DayResource;
    property UpdateFirmwareSuspended: WordBool read Get_UpdateFirmwareSuspended write Set_UpdateFirmwareSuspended;
    property UpdateFirmwareStatus: Integer read Get_UpdateFirmwareStatus;
    property UpdateFirmwareStatusMessage: WideString read Get_UpdateFirmwareStatusMessage;
    property PluginsEnabled: WordBool read Get_PluginsEnabled write Set_PluginsEnabled;
    property FWUpdateEnabled: WordBool read Get_FWUpdateEnabled write Set_FWUpdateEnabled;
    property FWUpdateServerURL: WideString read Get_FWUpdateServerURL write Set_FWUpdateServerURL;
    property FWUpdatePollInterval: Integer read Get_FWUpdatePollInterval write Set_FWUpdatePollInterval;
    property AuthKey: WideString read Get_AuthKey write Set_AuthKey;
    property NewAuthKey: WideString read Get_NewAuthKey write Set_NewAuthKey;
    property AuthKeyStorageType: Integer read Get_AuthKeyStorageType write Set_AuthKeyStorageType;
    property ItemStatus: Integer read Get_ItemStatus write Set_ItemStatus;
    property CheckItemMode: Integer read Get_CheckItemMode write Set_CheckItemMode;
    property ItemSaleServerAllowed: Integer read Get_ItemSaleServerAllowed write Set_ItemSaleServerAllowed;
    property CheckItemLocalResult: Integer read Get_CheckItemLocalResult write Set_CheckItemLocalResult;
    property KMServerErrorCode: Integer read Get_KMServerErrorCode write Set_KMServerErrorCode;
    property KMServerCheckingStatus: Integer read Get_KMServerCheckingStatus write Set_KMServerCheckingStatus;
    property SymbolicType: Integer read Get_SymbolicType write Set_SymbolicType;
    property ProcessingCode: Integer read Get_ProcessingCode write Set_ProcessingCode;
    property ConnectionStatus: Integer read Get_ConnectionStatus write Set_ConnectionStatus;
    property MessageNumber: Integer read Get_MessageNumber write Set_MessageNumber;
    property FreeMemorySize: Integer read Get_FreeMemorySize write Set_FreeMemorySize;
    property ItemNameLength: Integer read Get_ItemNameLength write Set_ItemNameLength;
    property DigitalSign: WideString read Get_DigitalSign write Set_DigitalSign;
    property UpdateFirmwareMethod: Integer read Get_UpdateFirmwareMethod write Set_UpdateFirmwareMethod;
    property UserAttributeName: WideString read Get_UserAttributeName write Set_UserAttributeName;
    property UserAttributeValue: WideString read Get_UserAttributeValue write Set_UserAttributeValue;
    property TagValueVLN: WideString read Get_TagValueVLN write Set_TagValueVLN;
    property TLVDataHex: WideString read Get_TLVDataHex write Set_TLVDataHex;
    property FirstDocumentNumber: Integer read Get_FirstDocumentNumber write Set_FirstDocumentNumber;
    property LastDocumentNumber: Integer read Get_LastDocumentNumber write Set_LastDocumentNumber;
    property FNArchiveType: Integer read Get_FNArchiveType write Set_FNArchiveType;
    property MarkingOnly: WordBool read Get_MarkingOnly write Set_MarkingOnly;
    property MarkingTypeEx: Integer read Get_MarkingTypeEx write Set_MarkingTypeEx;
    property TagValueBinHex: WideString read Get_TagValueBinHex write Set_TagValueBinHex;
    property FWUpdateSearchTimeout: Integer read Get_FWUpdateSearchTimeout write Set_FWUpdateSearchTimeout;
    property FWUpdWriteTimeout: Integer read Get_FWUpdWriteTimeout write Set_FWUpdWriteTimeout;
    property FWUpdDelayAfterReboot: Integer read Get_FWUpdDelayAfterReboot write Set_FWUpdDelayAfterReboot;
    property FWUpdDelayBeforeWrite: Integer read Get_FWUpdDelayBeforeWrite write Set_FWUpdDelayBeforeWrite;
    property FWUpdDelayBeforeSearch: Integer read Get_FWUpdDelayBeforeSearch write Set_FWUpdDelayBeforeSearch;
    property MCCheckStatus: Integer read Get_MCCheckStatus write Set_MCCheckStatus;
    property MCNotificationStatus: Integer read Get_MCNotificationStatus write Set_MCNotificationStatus;
    property MCCheckResultSavedCount: Integer read Get_MCCheckResultSavedCount write Set_MCCheckResultSavedCount;
    property MCCommandFlags: Integer read Get_MCCommandFlags write Set_MCCommandFlags;
    property MCRealizationCount: Integer read Get_MCRealizationCount write Set_MCRealizationCount;
    property MCStorageSize: Integer read Get_MCStorageSize write Set_MCStorageSize;
    property CheckItemLocalError: Integer read Get_CheckItemLocalError write Set_CheckItemLocalError;
    property MeasureUnit: Integer read Get_MeasureUnit write Set_MeasureUnit;
    property NotificationCount: Integer read Get_NotificationCount write Set_NotificationCount;
    property NotificationNumber: Integer read Get_NotificationNumber write Set_NotificationNumber;
    property NotificationSize: Integer read Get_NotificationSize write Set_NotificationSize;
    property DataOffset: Integer read Get_DataOffset write Set_DataOffset;
    property CheckSum: Integer read Get_CheckSum write Set_CheckSum;
    property DivisionalQuantity: WordBool read Get_DivisionalQuantity write Set_DivisionalQuantity;
    property Numerator: WideString read Get_Numerator write Set_Numerator;
    property Denominator: WideString read Get_Denominator write Set_Denominator;
    property MarkingType2: Integer read Get_MarkingType2 write Set_MarkingType2;
    property FNMarkingFillPercentage: Integer read Get_FNMarkingFillPercentage write Set_FNMarkingFillPercentage;
    property TagValueFVLND: Double read Get_TagValueFVLND write Set_TagValueFVLND;
    property FWUpdateSaveTables: WordBool read Get_FWUpdateSaveTables write Set_FWUpdateSaveTables;
    property PlainTransferMode: Integer read Get_PlainTransferMode write Set_PlainTransferMode;
    property FWUpdateFFDParams: Integer read Get_FWUpdateFFDParams write Set_FWUpdateFFDParams;
    property FWUpdateFFDWaitInterval: Integer read Get_FWUpdateFFDWaitInterval write Set_FWUpdateFFDWaitInterval;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR48Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9BFA98D-04ED-4B1E-A874-4C6C3A91930E}
// *********************************************************************//
  IDrvFR48Disp = dispinterface
    ['{A9BFA98D-04ED-4B1E-A874-4C6C3A91930E}']
    function ClearPrintBuffer: Integer; dispid 649;
    function JournalClear: Integer; dispid 650;
    function JournalGetRow: Integer; dispid 651;
    function JournalInit: Integer; dispid 652;
    function ReadPrintBufferLine: Integer; dispid 653;
    function ReadPrintBufferLineNumber: Integer; dispid 654;
    property JournalEnabled: WordBool dispid 655;
    property JournalRow: WideString readonly dispid 656;
    property JournalRowCount: Integer readonly dispid 657;
    property JournalRowNumber: Integer dispid 658;
    property JournalText: WideString readonly dispid 659;
    property LogFileMaxSize: Integer dispid 660;
    property PrintBufferFormat: Integer dispid 661;
    property PrintBufferLineNumber: Integer readonly dispid 662;
    function FindDevice: Integer; dispid 663;
    function LoadParams: Integer; dispid 664;
    property NakCount: Integer dispid 665;
    property MaxCommandSendCount: Integer dispid 666;
    property MaxAnswerReadCount: Integer dispid 667;
    property MaxENQSendCount: Integer dispid 668;
    function FinishDocument: Integer; dispid 669;
    function PrintTrailer: Integer; dispid 670;
    property FinishDocumentMode: TFinishDocumentMode dispid 671;
    property LineDataHex: WideString dispid 672;
    property SerialNumberAsInteger: Integer readonly dispid 674;
    property INNAsInteger: Integer readonly dispid 673;
    property ECRDate: TDateTime dispid 675;
    property ECRTime: TDateTime dispid 676;
    function WaitForCheckClose: Integer; dispid 677;
    function GetSummFactor: Integer; dispid 678;
    function GetQuantityFactor: Integer; dispid 679;
    function ReadDeviceMetrics: Integer; dispid 681;
    function ReadEcrStatus: Integer; dispid 680;
    function SaveState: Integer; dispid 682;
    function RestoreState: Integer; dispid 683;
    property HasCashControlLicense: WordBool readonly dispid 684;
    property BufferingType: Integer dispid 685;
    function GetPortNames: WideString; dispid 686;
    property CommandRetryCount: Integer dispid 687;
    property FileName: WideString dispid 688;
    function LoadImage: Integer; dispid 689;
    property CenterImage: WordBool dispid 690;
    property ShowProgress: WordBool dispid 691;
    function OpenNonfiscalDocument: Integer; dispid 692;
    function CloseNonFiscalDocument: Integer; dispid 693;
    function PrintAttribute: Integer; dispid 694;
    property AttributeNumber: Integer dispid 695;
    property AttributeValue: WideString dispid 696;
    property ModelID: Integer dispid 1901;
    function ReadModelParamValue: Integer; dispid 1902;
    property ModelParamValue: OleVariant readonly dispid 1903;
    property ModelParamNumber: Integer dispid 1904;
    function LoadCashControlParams: Integer; dispid 1905;
    property Connected: WordBool dispid 1906;
    property PrintBarcodeText: Integer dispid 1907;
    property EnteredTaxPassword: Integer readonly dispid 1908;
    function GetCashAcceptorStatus: Integer; dispid 1909;
    function GetCashAcceptorRegisters: Integer; dispid 1910;
    function CashAcceptorReport: Integer; dispid 1911;
    property Poll1: Integer readonly dispid 1912;
    property Poll2: Integer readonly dispid 1913;
    property CashAcceptorPollingMode: Integer readonly dispid 1914;
    property BanknoteType: Integer dispid 1915;
    property BanknoteCount: Integer readonly dispid 1916;
    function ReadBanknoteCount: Integer; dispid 1917;
    property FeedAfterCut: WordBool dispid 1918;
    property FeedLineCount: Integer dispid 1919;
    property LDSysAdminPassword: Integer dispid 1920;
    function PrintOperationalTaxReport: Integer; dispid 1921;
    property CapOpenCheck: WordBool readonly dispid 1922;
    property PollDescription: WideString readonly dispid 1923;
    property ConnectionTimeout: Integer dispid 1924;
    function WaitConnection: Integer; dispid 1925;
    function ReadModelParamDescription: Integer; dispid 1926;
    property ModelParamDescription: WideString readonly dispid 1927;
    property DriverMajorVersion: LongWord readonly dispid 1928;
    property DriverMinorVersion: LongWord readonly dispid 1929;
    property DriverRelease: LongWord readonly dispid 1930;
    property DriverBuild: LongWord readonly dispid 1931;
    property DriverVersion: WideString readonly dispid 1932;
    function PrintBarcodeUsingPrinter: Integer; dispid 1933;
    property HRIPosition: Integer dispid 1934;
    function CloseCheckWithKPK: Integer; dispid 1935;
    property KPKStr: WideString readonly dispid 1936;
    function ReadEKLZActivizationParams: Integer; dispid 1937;
    function GetShortReportInSessionRange: Integer; dispid 1938;
    function GetShortReportInDatesRange: Integer; dispid 1939;
    function ClearResult: Integer; dispid 1940;
    function ReadLastReceipt: Integer; dispid 1941;
    function ReadLastReceiptLine: Integer; dispid 1942;
    function ReadLastReceiptMac: Integer; dispid 1943;
    function MasterPayClearBuffer: Integer; dispid 1944;
    function MasterPayAddTextBlock: Integer; dispid 1945;
    function MasterPayCreateMac: Integer; dispid 1946;
    property TextBlockNumber: Integer dispid 1947;
    property TextBlock: WideString dispid 1948;
    property CashControlProtocols: WideString readonly dispid 1949;
    property StatusCommand: TStatusCommand dispid 1950;
    function BeginDocument: Integer; dispid 1951;
    function EndDocument: Integer; dispid 1952;
    property PosControlReceiptSeparator: WideString dispid 1953;
    function LoadBlockData: Integer; dispid 1954;
    property BlockType: Integer dispid 1955;
    property BlockNumber: Integer dispid 1956;
    property BlockDataHex: WideString dispid 1957;
    function Print2DBarcode: Integer; dispid 1958;
    property BarcodeDataLength: Integer dispid 1959;
    property BarcodeParameter1: Integer dispid 1960;
    property BarcodeParameter2: Integer dispid 1961;
    property BarcodeParameter3: Integer dispid 1962;
    property BarcodeParameter4: Integer dispid 1963;
    property BarcodeParameter5: Integer dispid 1964;
    property BarcodeStartBlockNumber: Integer dispid 1965;
    function LoadAndPrint2DBarcode: Integer; dispid 1966;
    property ExciseCode: Integer dispid 1967;
    function ExcisableOperation: Integer; dispid 1968;
    function ReadReportBufferLine: Integer; dispid 1969;
    property LogMaxFileSize: Integer dispid 1970;
    property LogMaxFileCount: Integer dispid 1971;
    property SaveSettingsType: Integer dispid 1972;
    function ReadParams: Integer; dispid 1973;
    property BinaryConversion: TBinaryConversion dispid 1974;
    property CodePage: TCodePage dispid 1975;
    property PrintJournalBeforeZReport: WordBool dispid 1976;
    function GetEKLZCode3Report: Integer; dispid 1977;
    property TransmitStatus: Integer readonly dispid 1978;
    property TransmitQueueSize: Integer readonly dispid 1979;
    property TransmitSessionNumber: Integer readonly dispid 1980;
    property TransmitDocumentNumber: Integer readonly dispid 1981;
    function ReadModemParameter: Integer; dispid 1982;
    function WriteModemParameter: Integer; dispid 1983;
    property ParameterNumber: Integer dispid 1984;
    property ParameterValue: WideString dispid 1985;
    property TranslationEnabled: WordBool dispid 1986;
    property ModelIndex: Integer dispid 1987;
    property ModelNames: WideString readonly dispid 1988;
    property ModelsCount: Integer readonly dispid 1990;
    property FMFlagsEx: Integer readonly dispid 1989;
    property FMMode: Integer readonly dispid 1991;
    property IsASPDMode: WordBool readonly dispid 1992;
    property IsCorruptedFMRecords: WordBool readonly dispid 1993;
    property IsCorruptedFiscalizationInfo: WordBool readonly dispid 1994;
    property CarryStrings: WordBool dispid 1995;
    property DelayedPrint: WordBool dispid 1996;
    function GetCashRegEx: Integer; dispid 1997;
    property RegSaleRec: Currency readonly dispid 1998;
    property RegBuyRec: Currency readonly dispid 1999;
    property RegSaleReturnRec: Currency readonly dispid 2000;
    property RegBuyReturnRec: Currency readonly dispid 2001;
    property RegSaleSession: Currency readonly dispid 2002;
    property RegBuySession: Currency readonly dispid 2003;
    property RegSaleReturnSession: Currency readonly dispid 2004;
    property RegBuyReturnSession: Currency readonly dispid 2005;
    function GetWareBaseCashRegs: Integer; dispid 2006;
    property WareCode: Integer dispid 2007;
    function PrintCashierReport: Integer; dispid 2008;
    function PrintHourlyReport: Integer; dispid 2009;
    function PrintWareReport: Integer; dispid 2010;
    function UpdateWare: Integer; dispid 2011;
    function ReadWare: Integer; dispid 2012;
    function RemoveWare: Integer; dispid 2013;
    function CheckFM: Integer; dispid 2014;
    property RecordCount: Integer readonly dispid 2015;
    property CheckingType: Integer dispid 2016;
    function ReadErrorDescription: Integer; dispid 2017;
    property ErrorCode: Integer dispid 2018;
    property UseWareCode: WordBool dispid 2019;
    property RequestErrorDescription: WordBool dispid 2020;
    property ErrorDescription: WideString readonly dispid 2021;
    property AdjustRITimeout: WordBool dispid 2022;
    property UCodePageText: WideString readonly dispid 2023;
    property ReconnectPort: WordBool dispid 2024;
    property DoNotSendENQ: WordBool dispid 2025;
    property SwapBytesMode: Integer dispid 2026;
    property ModelParamIndex: Integer dispid 2027;
    property ModelParamCount: Integer readonly dispid 2028;
    function ReadModelParam: Integer; dispid 2029;
    function InitEEPROM: Integer; dispid 2030;
    property CheckFMConnection: WordBool dispid 2031;
    property CheckEJConnection: WordBool dispid 2032;
    function CheckConnection: Integer; dispid 2033;
    property BarcodeHex: WideString dispid 2034;
    function ChangeProtocol: Integer; dispid 2035;
    property ProtocolType: Integer dispid 2036;
    property LDProtocolType: Integer dispid 2037;
    function GetECRParams: Integer; dispid 2038;
    property LastPrintResult: SYSINT readonly dispid 2039;
    property UseSlipCheck: WordBool dispid 2040;
    property TypeOfLastEntryFMEx: Integer readonly dispid 2041;
    function JournalOperation: Integer; dispid 2042;
    property AutoSensorValues: WordBool dispid 2043;
    property SearchTimeout: Integer dispid 2044;
    property AutoStartSearch: WordBool dispid 2045;
    property TCPConnectionTimeout: Integer dispid 2046;
    function GetMFPCode3Status: Integer; dispid 2047;
    function MFPPrepareActivization: Integer; dispid 2048;
    function MFPGetPermitActivizationCode: Integer; dispid 2049;
    function MFPActivization: Integer; dispid 2050;
    function MFPGetPrepareActivizationResult: Integer; dispid 2051;
    function MFPGetCustomerCode: Integer; dispid 2052;
    function MFPCloseArchive: Integer; dispid 2053;
    function MFPSetCustomerCode: Integer; dispid 2054;
    function MFPSetPermitActivizationCode: Integer; dispid 2055;
    function CloseCheckEx: Integer; dispid 2056;
    property Summ5: Currency dispid 2057;
    property Summ6: Currency dispid 2058;
    property Summ7: Currency dispid 2059;
    property Summ8: Currency dispid 2060;
    property Summ9: Currency dispid 2061;
    property Summ10: Currency dispid 2062;
    property Summ11: Currency dispid 2063;
    property Summ12: Currency dispid 2064;
    property Summ13: Currency dispid 2065;
    property Summ14: Currency dispid 2066;
    property Summ15: Currency dispid 2067;
    property Summ16: Currency dispid 2068;
    property CustomerCode: Integer dispid 2069;
    property PermitActivizationCode: Integer dispid 2070;
    property NameCashRegEx: WideString readonly dispid 2071;
    property ActivizationStatus: Integer dispid 2072;
    property MFPStatus: Integer dispid 2073;
    property MFPNumber: WideString dispid 2074;
    property KPKValue: Integer dispid 2075;
    property ActivizationControlByte: Integer dispid 2076;
    property PrepareActivizationRemainCount: Integer dispid 2077;
    property AnswerCode: Integer dispid 2078;
    property RequestType: Integer dispid 2079;
    property ReadTimeout: Integer dispid 2080;
    function ClearReportBuffer: Integer; dispid 2081;
    property LastFMRecordType: Integer readonly dispid 2082;
    property IsBlockedByWrongTaxPassword: WordBool readonly dispid 2083;
    function ShowAdditionalParams: Integer; dispid 2084;
    property CloudCashdeskEnabled: WordBool dispid 2085;
    property ECRID: WideString dispid 2086;
    function GetCloudCashdeskParams: Integer; dispid 2087;
    property KSAInfo: WideString dispid 2088;
    property VertScale: Integer dispid 2089;
    property HorizScale: Integer dispid 2090;
    function DrawScale: Integer; dispid 2091;
    property BarcodeFirstLine: Integer dispid 2092;
    property SKNOStatus: Integer dispid 2093;
    property SKNOError: Integer dispid 2094;
    property SKNOIdentifier: WideString dispid 2095;
    function PrintGraphics512: Integer; dispid 2096;
    function LoadGraphics512: Integer; dispid 2097;
    property LineLength: Integer dispid 2098;
    property GraphBufferType: Integer dispid 2099;
    property FNLifeState: Integer readonly dispid 2100;
    property FNCurrentDocument: Integer dispid 2101;
    property FNDocumentData: Integer readonly dispid 2102;
    property FNSessionState: Integer readonly dispid 2103;
    property FNWarningFlags: Integer readonly dispid 2104;
    property FNSoftVersion: WideString readonly dispid 2105;
    property SyncTimeout: Integer dispid 2106;
    function FNGetStatus: Integer; dispid 2107;
    function FNGetSerial: Integer; dispid 2108;
    function FNGetExpirationTime: Integer; dispid 2109;
    function FNGetVersion: Integer; dispid 2110;
    property FNSoftType: Integer readonly dispid 2111;
    function FNBeginFiscalization: Integer; dispid 2112;
    function FNFiscalization: Integer; dispid 2113;
    property FiscalSign: Integer dispid 2114;
    property KKTRegistrationNumber: WideString dispid 2115;
    property TaxType: Integer dispid 2116;
    property WorkMode: Integer dispid 2117;
    function FNResetState: Integer; dispid 2118;
    function FNCancelDocument: Integer; dispid 2119;
    function FNGetFiscalizationResult: Integer; dispid 2120;
    function FNFindDocument: Integer; dispid 2121;
    property DocumentType: Integer dispid 2122;
    property OFDTicketReceived: WordBool dispid 2123;
    property DocumentData: WideString dispid 2124;
    function FNOpenSession: Integer; dispid 2125;
    function FNSendTLV: Integer; dispid 2126;
    property TLVData: WideString dispid 2127;
    function FNDiscountOperation: Integer; dispid 2128;
    function FNStorno: Integer; dispid 2129;
    property OFDServer: WideString dispid 2133;
    property OFDPort: Integer dispid 2134;
    property OFDPollPeriod: Integer dispid 2135;
    property OFDEnabled: WordBool dispid 2136;
    function FNBeginRegistrationReport: Integer; dispid 2130;
    function FNBuildRegistrationReport: Integer; dispid 2131;
    function FNBeginCorrectionReceipt: Integer; dispid 2137;
    function FNBuildCorrectionReceipt: Integer; dispid 2138;
    function FNBeginCalculationStateReport: Integer; dispid 2139;
    function FNBuildCalculationStateReport: Integer; dispid 2140;
    function FNCloseSession: Integer; dispid 2141;
    function FNGetInfoExchangeStatus: Integer; dispid 2142;
    function FNRequestFiscalDocumentTLV: Integer; dispid 2143;
    function FNReadFiscalDocumentTLV: Integer; dispid 2144;
    function FNGetOFDTicketByDocNumber: Integer; dispid 2145;
    function FNBeginCloseFiscalMode: Integer; dispid 2146;
    function FNCloseFiscalMode: Integer; dispid 2147;
    function FNGetUnconfirmedDocCount: Integer; dispid 2148;
    function FNGetCurrentSessionParams: Integer; dispid 2149;
    function FNBeginOpenSession: Integer; dispid 2150;
    function FNBeginCloseSession: Integer; dispid 2151;
    function FNBuildReregistrationReport: Integer; dispid 2132;
    property DocumentCount: Integer dispid 2152;
    property ReceiptNumber: Integer dispid 2153;
    property MessageState: Integer dispid 2154;
    property InfoExchangeStatus: Integer dispid 2155;
    property MessageCount: Integer dispid 2156;
    property ReportTypeInt: Integer dispid 2157;
    property DataLength: Integer dispid 2158;
    function FNDiscountTaxOperation: Integer; dispid 2159;
    function FNCloseCheckEx: Integer; dispid 2160;
    property DiscountValue: Currency dispid 2161;
    property ChargeValue: Currency dispid 2162;
    property TaxValue: Currency dispid 2163;
    property RegistrationReasonCode: Integer dispid 2164;
    property DiscountName: WideString dispid 2165;
    function FNSendCustomerEmail: Integer; dispid 2166;
    property CustomerEmail: WideString dispid 2167;
    function Annulment: Integer; dispid 2168;
    property Date2: TDateTime dispid 2169;
    property Time2: TDateTime dispid 2170;
    property FiscalSignOFD: WideString dispid 2171;
    property AutoOpenSession: WordBool dispid 2172;
    function FNDiscountChargeRN: Integer; dispid 2173;
    function ImportTables: Integer; dispid 2174;
    function ExportTables: Integer; dispid 2175;
    function FNSendTag: Integer; dispid 2176;
    property TagNumber: Integer dispid 2177;
    property TagType: Integer dispid 2178;
    property TagValueInt: Integer dispid 2179;
    property TagValueStr: WideString dispid 2180;
    property TagValueFVLN: Currency dispid 2181;
    property TagValueDateTime: TDateTime dispid 2182;
    property TagValueLength: Integer dispid 2183;
    property TagValueBin: WideString dispid 2184;
    function ReadSerialNumber: Integer; dispid 2185;
    function FNPrintOperatorConfirm: Integer; dispid 2186;
    function FNGetFiscalizationResultByNumber: Integer; dispid 2187;
    function AnnulmentRB: Integer; dispid 2188;
    function FNGetTagDescription: Integer; dispid 2189;
    property TagDescription: WideString dispid 2190;
    function FNPrintDocument: Integer; dispid 2191;
    function FNGetDocumentAsString: Integer; dispid 2192;
    property ShowTagNumber: WordBool dispid 2193;
    function Ping: Integer; dispid 2194;
    property URL: WideString dispid 2195;
    property PingTime: Integer dispid 2196;
    property PingResult: Integer dispid 2197;
    property ICSEnabled: WordBool dispid 2198;
    property ICSPollPeriod: Integer dispid 2199;
    function FNOperation: Integer; dispid 2201;
    function FNSendTLVOperation: Integer; dispid 2202;
    property RoundingSumm: Integer dispid 2200;
    property TaxValue1: Currency dispid 2203;
    property TaxValue2: Currency dispid 2204;
    property TaxValue3: Currency dispid 2205;
    property TaxValue4: Currency dispid 2206;
    property TaxValue5: Currency dispid 2207;
    property TaxValue6: Currency dispid 2208;
    property TaxValue1Enabled: WordBool dispid 2209;
    property TaxValue2Enabled: WordBool dispid 2210;
    property TaxValue3Enabled: WordBool dispid 2211;
    property TaxValue4Enabled: WordBool dispid 2212;
    property TaxValue5Enabled: WordBool dispid 2213;
    property TaxValue6Enabled: WordBool dispid 2214;
    property TaxValueEnabled: WordBool dispid 2215;
    property Summ1Enabled: WordBool dispid 2216;
    property PaymentTypeSign: Integer dispid 2217;
    property PaymentItemSign: Integer dispid 2218;
    function FNBuildCorrectionReceipt2: Integer; dispid 2219;
    property CalculationSign: Integer dispid 2220;
    property CorrectionType: Integer dispid 2221;
    property OFDReadTimeout: Integer dispid 2222;
    property AutoEoD: WordBool dispid 2224;
    function FNGetNonClearableSumm: Integer; dispid 2223;
    function ResetSerialNumber: Integer; dispid 2225;
    property FiscalSignAsString: WideString readonly dispid 2226;
    function DBFindDocument: Integer; dispid 2227;
    property DBFilePath: WideString dispid 2228;
    function DBPrintDocument: Integer; dispid 2229;
    property KKTLicense: Integer dispid 2230;
    property LicenseNumber: Integer dispid 2231;
    property PUKCode: Integer dispid 2232;
    function ReadKKTLicenses: Integer; dispid 2233;
    function GetKKTLicenseByNumber: Integer; dispid 2234;
    property OFDExchangeSuspended: WordBool dispid 2235;
    function CloseCheckBel: Integer; dispid 2236;
    property AutoOFDExchange: WordBool dispid 2237;
    function WriteKKTLicense: Integer; dispid 2238;
    function FNSendSenderEmail: Integer; dispid 2239;
    property EmailAddress: WideString dispid 2240;
    property Discount1: Currency dispid 2241;
    property Discount2: Currency dispid 2242;
    property Discount3: Currency dispid 2243;
    property Discount4: Currency dispid 2244;
    property UseTaxDiscountBel: WordBool dispid 2245;
    property Summ1AsString: WideString readonly dispid 2246;
    property Summ2AsString: WideString readonly dispid 2247;
    property Summ3AsString: WideString readonly dispid 2248;
    property Summ4AsString: WideString readonly dispid 2249;
    function DBQueryDocumentsInSession: Integer; dispid 2250;
    function DBGetNextDocument: Integer; dispid 2251;
    function DBPrintNextDocument: Integer; dispid 2252;
    property DBDocType: Integer dispid 2253;
    function OnlinePay: Integer; dispid 2254;
    function OPGetLastStatus: Integer; dispid 2255;
    function OPGetLastRequisite: Integer; dispid 2256;
    property OPSystem: Integer dispid 2257;
    property OPTransactionType: Integer dispid 2258;
    property OPBarcodeInputType: Integer dispid 2259;
    property OPIdPayment: WideString dispid 2260;
    property OPTransactionStatus: Integer dispid 2261;
    property OPRequisiteNumber: Integer dispid 2262;
    property OPRequisiteValue: WideString dispid 2263;
    function GenerateMonoToken: Integer; dispid 2264;
    property Token: WideString dispid 2265;
    function RebootKKT: Integer; dispid 2266;
    function FNSendTagOperation: Integer; dispid 2267;
    function FNBeginSTLVTag: Integer; dispid 2268;
    function FNAddTag: Integer; dispid 2269;
    function FNSendSTLVTagOperation: Integer; dispid 2270;
    function FNSendSTLVTag: Integer; dispid 2271;
    property TagID: Integer dispid 2272;
    function LoadFontSymbol: Integer; dispid 2273;
    property SymbolCode: Integer dispid 2274;
    property BlockData: WideString dispid 2275;
    property SymbolHeight: Integer dispid 2276;
    property SymbolWidth: Integer dispid 2277;
    property FileType: Integer dispid 2278;
    function LoadFont: Integer; dispid 2279;
    function LoadBlockOnSDCard: Integer; dispid 2280;
    function LoadFileOnSDCard: Integer; dispid 2281;
    property DelayOnDisconnect: Integer dispid 2282;
    function PrintStringWithWrap: Integer; dispid 2283;
    property WrapStrings: WordBool dispid 2284;
    function FNSendItemCodeData: Integer; dispid 2285;
    property GTIN: WideString dispid 2286;
    property MarkingType: Integer dispid 2287;
    function FNCheckItemBarcode: Integer; dispid 2288;
    function FNRequestRegistrationTLV: Integer; dispid 2289;
    function ReadLoaderVersion: Integer; dispid 2290;
    property LoaderVersion: WideString readonly dispid 2291;
    property RequestDocumentType: Integer dispid 2292;
    function FNOpenCheckCorrection: Integer; dispid 2293;
    property WorkModeEx: Integer dispid 2294;
    property INNOFD: WideString dispid 2295;
    property RegistrationReasonCodeEx: Integer dispid 2296;
    function FNCountersSync: Integer; dispid 2297;
    function FNGetFreeMemoryResource: Integer; dispid 2298;
    property FN5YearResource: Integer readonly dispid 2299;
    property FN30DayResource: Integer readonly dispid 2300;
    function UpdateFirmware: Integer; dispid 2301;
    function SetDFUMode: Integer; dispid 2302;
    property UpdateFirmwareSuspended: WordBool dispid 2303;
    property UpdateFirmwareStatus: Integer readonly dispid 2304;
    function CancelFirmwareUpdate: Integer; dispid 2305;
    property UpdateFirmwareStatusMessage: WideString readonly dispid 2306;
    property PluginsEnabled: WordBool dispid 2307;
    function WriteRNMTj: Integer; dispid 2308;
    function ReadRNMTj: Integer; dispid 2309;
    function FNGetNonClearableSummEx: Integer; dispid 2310;
    property FWUpdateEnabled: WordBool dispid 2311;
    property FWUpdateServerURL: WideString dispid 2312;
    property FWUpdatePollInterval: Integer dispid 2313;
    property AuthKey: WideString dispid 2314;
    function WriteAuthKey: Integer; dispid 2315;
    function RewriteAuthKey: Integer; dispid 2316;
    function ResetAuthKey: Integer; dispid 2317;
    property NewAuthKey: WideString dispid 2318;
    function SaveAuthKey: Integer; dispid 2319;
    function DeleteAuthKey: Integer; dispid 2320;
    property AuthKeyStorageType: Integer dispid 2321;
    property ItemStatus: Integer dispid 2322;
    property CheckItemMode: Integer dispid 2323;
    property ItemSaleServerAllowed: Integer dispid 2324;
    property CheckItemLocalResult: Integer dispid 2325;
    property KMServerErrorCode: Integer dispid 2326;
    property KMServerCheckingStatus: Integer dispid 2327;
    property SymbolicType: Integer dispid 2328;
    property ProcessingCode: Integer dispid 2329;
    function FNBindMarkingItem: Integer; dispid 2330;
    function FNGetKMServerExchangeStatus: Integer; dispid 2331;
    property ConnectionStatus: Integer dispid 2332;
    property MessageNumber: Integer dispid 2334;
    property FreeMemorySize: Integer dispid 2335;
    function FNAcceptMakringCode: Integer; dispid 2336;
    function FNDeclineMarkingCode: Integer; dispid 2337;
    property ItemNameLength: Integer dispid 2333;
    function ReadFeatureLicenses: Integer; dispid 2338;
    function WriteFeatureLicenses: Integer; dispid 2339;
    property DigitalSign: WideString dispid 2340;
    property UpdateFirmwareMethod: Integer dispid 2341;
    function PluginsUpdateSettings: Integer; dispid 2342;
    function FNSendUserAttribute: Integer; dispid 2343;
    property UserAttributeName: WideString dispid 2344;
    property UserAttributeValue: WideString dispid 2345;
    property TagValueVLN: WideString dispid 2346;
    function FNSendItemBarcode: Integer; dispid 2347;
    property TLVDataHex: WideString dispid 2348;
    function FNBeginReadArchive: Integer; dispid 2349;
    function FNReadArchiveItem: Integer; dispid 2350;
    function FNSaveArchive: Integer; dispid 2351;
    property FirstDocumentNumber: Integer dispid 2352;
    property LastDocumentNumber: Integer dispid 2353;
    property FNArchiveType: Integer dispid 2354;
    property MarkingOnly: WordBool dispid 2355;
    function FNOperationMdlp: Integer; dispid 2356;
    function FNCloseCheckMdlp: Integer; dispid 2357;
    property MarkingTypeEx: Integer dispid 2358;
    property TagValueBinHex: WideString dispid 2359;
    property FWUpdateSearchTimeout: Integer dispid 2360;
    property FWUpdWriteTimeout: Integer dispid 2361;
    property FWUpdDelayAfterReboot: Integer dispid 2362;
    property FWUpdDelayBeforeWrite: Integer dispid 2363;
    property FWUpdDelayBeforeSearch: Integer dispid 2364;
    function FNGetMarkingCodeWorkStatus: Integer; dispid 2365;
    property MCCheckStatus: Integer dispid 2366;
    property MCNotificationStatus: Integer dispid 2367;
    property MCCheckResultSavedCount: Integer dispid 2368;
    property MCCommandFlags: Integer dispid 2369;
    property MCRealizationCount: Integer dispid 2370;
    property MCStorageSize: Integer dispid 2371;
    function GetTagAsTLV: Integer; dispid 2372;
    property CheckItemLocalError: Integer dispid 2373;
    property MeasureUnit: Integer dispid 2374;
    function FNBeginReadNotifications: Integer; dispid 2375;
    function FNReadNotificationBlock: Integer; dispid 2376;
    property NotificationCount: Integer dispid 2377;
    property NotificationNumber: Integer dispid 2378;
    property NotificationSize: Integer dispid 2379;
    property DataOffset: Integer dispid 2380;
    property CheckSum: Integer dispid 2381;
    function FNConfirmNotificationRead: Integer; dispid 2382;
    property DivisionalQuantity: WordBool dispid 2383;
    property Numerator: WideString dispid 2384;
    property Denominator: WideString dispid 2385;
    property MarkingType2: Integer dispid 2386;
    function FNAcceptMarkingCode: Integer; dispid 2387;
    property FNMarkingFillPercentage: Integer dispid 2388;
    function FNReadFiscalBarcode: Integer; dispid 2389;
    property TagValueFVLND: Double dispid 2390;
    function FNMarkingClearBuffer: Integer; dispid 2391;
    property FWUpdateSaveTables: WordBool dispid 2392;
    function FNCheckItemBarcode2: Integer; dispid 2393;
    function PlainTransferEnable: Integer; dispid 2394;
    function PlainTransferDisable: Integer; dispid 2395;
    property PlainTransferMode: Integer dispid 2396;
    property FWUpdateFFDParams: Integer dispid 2397;
    property FWUpdateFFDWaitInterval: Integer dispid 2398;
    function CardPayProperties: Integer; dispid 626;
    property CardPayEnabled: WordBool dispid 625;
    property CardPayType: Integer dispid 628;
    property ccUseTextAsWareName: WordBool dispid 627;
    property ccWareNameLineNumber: Integer dispid 629;
    property ccHeaderLineCount: Integer dispid 630;
    property ccProtocol: TCashControlProtocol dispid 631;
    function PrintCliche: Integer; dispid 632;
    property LogCommands: WordBool dispid 633;
    property LogMethods: WordBool dispid 634;
    function PrintLine: Integer; dispid 635;
    property BarcodeType: Integer dispid 636;
    function PrintBarcodeLine: Integer; dispid 637;
    property BarcodeTypes: WideString readonly dispid 638;
    function PrintBarcodeGraph: Integer; dispid 639;
    property BarcodeAlignment: TBarcodeAlignment dispid 640;
    property BarcodeAlignments: WideString readonly dispid 641;
    property BarWidth: Integer dispid 642;
    property CapGetShortECRStatus: WordBool readonly dispid 643;
    property WaitForPrintingDelay: Integer dispid 644;
    function ResetECR: Integer; dispid 645;
    function PrintZReportInBuffer: Integer; dispid 646;
    function PrintZReportFromBuffer: Integer; dispid 647;
    property LineSwapBytes: WordBool dispid 648;
    function OutputReceipt: Integer; dispid 622;
    property ReceiptOutputType: Integer dispid 623;
    function Sale2: Integer; dispid 624;
    function GetInterval: Integer; dispid 607;
    function OpenSession: Integer; dispid 608;
    function ReprintSlipDocument: Integer; dispid 609;
    function SetInterval: Integer; dispid 610;
    function ShowPayParams: Integer; dispid 611;
    function ShowTablesDlg: Integer; dispid 612;
    function WaitForPrinting: Integer; dispid 613;
    property IntervalNumber: Integer dispid 614;
    property IntervalValue: Integer dispid 615;
    property MobilePayEnabled: WordBool dispid 616;
    property ParamsPageIndex: Integer dispid 617;
    property ParentWnd: Integer dispid 618;
    property PayDepartment: Integer dispid 619;
    property RealPayDepartment: Integer dispid 620;
    property SaleError: WordBool dispid 621;
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR49
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {043489E2-2E2F-4404-8DCF-9FD484D29E33}
// *********************************************************************//
  IDrvFR49 = interface(IDrvFR48)
    ['{043489E2-2E2F-4404-8DCF-9FD484D29E33}']
    function Get_UpdateKeysResultCode: Integer; safecall;
    procedure Set_UpdateKeysResultCode(Value: Integer); safecall;
    function Get_UpdateKeysStatus: Integer; safecall;
    procedure Set_UpdateKeysStatus(Value: Integer); safecall;
    function Get_PrinterHeadTemperature: Integer; safecall;
    procedure Set_PrinterHeadTemperature(Value: Integer); safecall;
    function Get_PreviousECRMode: Integer; safecall;
    procedure Set_PreviousECRMode(Value: Integer); safecall;
    function Get_FWUpdPrintStatus: WordBool; safecall;
    procedure Set_FWUpdPrintStatus(Value: WordBool); safecall;
    function ReadFontHash: Integer; safecall;
    function ResetFont: Integer; safecall;
    function Get_FontHashHex: WideString; safecall;
    procedure Set_FontHashHex(const Value: WideString); safecall;
    property UpdateKeysResultCode: Integer read Get_UpdateKeysResultCode write Set_UpdateKeysResultCode;
    property UpdateKeysStatus: Integer read Get_UpdateKeysStatus write Set_UpdateKeysStatus;
    property PrinterHeadTemperature: Integer read Get_PrinterHeadTemperature write Set_PrinterHeadTemperature;
    property PreviousECRMode: Integer read Get_PreviousECRMode write Set_PreviousECRMode;
    property FWUpdPrintStatus: WordBool read Get_FWUpdPrintStatus write Set_FWUpdPrintStatus;
    property FontHashHex: WideString read Get_FontHashHex write Set_FontHashHex;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR49Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {043489E2-2E2F-4404-8DCF-9FD484D29E33}
// *********************************************************************//
  IDrvFR49Disp = dispinterface
    ['{043489E2-2E2F-4404-8DCF-9FD484D29E33}']
    property UpdateKeysResultCode: Integer dispid 2399;
    property UpdateKeysStatus: Integer dispid 2400;
    property PrinterHeadTemperature: Integer dispid 2401;
    property PreviousECRMode: Integer dispid 2402;
    property FWUpdPrintStatus: WordBool dispid 2403;
    function ReadFontHash: Integer; dispid 2404;
    function ResetFont: Integer; dispid 2405;
    property FontHashHex: WideString dispid 2406;
    function ClearPrintBuffer: Integer; dispid 649;
    function JournalClear: Integer; dispid 650;
    function JournalGetRow: Integer; dispid 651;
    function JournalInit: Integer; dispid 652;
    function ReadPrintBufferLine: Integer; dispid 653;
    function ReadPrintBufferLineNumber: Integer; dispid 654;
    property JournalEnabled: WordBool dispid 655;
    property JournalRow: WideString readonly dispid 656;
    property JournalRowCount: Integer readonly dispid 657;
    property JournalRowNumber: Integer dispid 658;
    property JournalText: WideString readonly dispid 659;
    property LogFileMaxSize: Integer dispid 660;
    property PrintBufferFormat: Integer dispid 661;
    property PrintBufferLineNumber: Integer readonly dispid 662;
    function FindDevice: Integer; dispid 663;
    function LoadParams: Integer; dispid 664;
    property NakCount: Integer dispid 665;
    property MaxCommandSendCount: Integer dispid 666;
    property MaxAnswerReadCount: Integer dispid 667;
    property MaxENQSendCount: Integer dispid 668;
    function FinishDocument: Integer; dispid 669;
    function PrintTrailer: Integer; dispid 670;
    property FinishDocumentMode: TFinishDocumentMode dispid 671;
    property LineDataHex: WideString dispid 672;
    property SerialNumberAsInteger: Integer readonly dispid 674;
    property INNAsInteger: Integer readonly dispid 673;
    property ECRDate: TDateTime dispid 675;
    property ECRTime: TDateTime dispid 676;
    function WaitForCheckClose: Integer; dispid 677;
    function GetSummFactor: Integer; dispid 678;
    function GetQuantityFactor: Integer; dispid 679;
    function ReadDeviceMetrics: Integer; dispid 681;
    function ReadEcrStatus: Integer; dispid 680;
    function SaveState: Integer; dispid 682;
    function RestoreState: Integer; dispid 683;
    property HasCashControlLicense: WordBool readonly dispid 684;
    property BufferingType: Integer dispid 685;
    function GetPortNames: WideString; dispid 686;
    property CommandRetryCount: Integer dispid 687;
    property FileName: WideString dispid 688;
    function LoadImage: Integer; dispid 689;
    property CenterImage: WordBool dispid 690;
    property ShowProgress: WordBool dispid 691;
    function OpenNonfiscalDocument: Integer; dispid 692;
    function CloseNonFiscalDocument: Integer; dispid 693;
    function PrintAttribute: Integer; dispid 694;
    property AttributeNumber: Integer dispid 695;
    property AttributeValue: WideString dispid 696;
    property ModelID: Integer dispid 1901;
    function ReadModelParamValue: Integer; dispid 1902;
    property ModelParamValue: OleVariant readonly dispid 1903;
    property ModelParamNumber: Integer dispid 1904;
    function LoadCashControlParams: Integer; dispid 1905;
    property Connected: WordBool dispid 1906;
    property PrintBarcodeText: Integer dispid 1907;
    property EnteredTaxPassword: Integer readonly dispid 1908;
    function GetCashAcceptorStatus: Integer; dispid 1909;
    function GetCashAcceptorRegisters: Integer; dispid 1910;
    function CashAcceptorReport: Integer; dispid 1911;
    property Poll1: Integer readonly dispid 1912;
    property Poll2: Integer readonly dispid 1913;
    property CashAcceptorPollingMode: Integer readonly dispid 1914;
    property BanknoteType: Integer dispid 1915;
    property BanknoteCount: Integer readonly dispid 1916;
    function ReadBanknoteCount: Integer; dispid 1917;
    property FeedAfterCut: WordBool dispid 1918;
    property FeedLineCount: Integer dispid 1919;
    property LDSysAdminPassword: Integer dispid 1920;
    function PrintOperationalTaxReport: Integer; dispid 1921;
    property CapOpenCheck: WordBool readonly dispid 1922;
    property PollDescription: WideString readonly dispid 1923;
    property ConnectionTimeout: Integer dispid 1924;
    function WaitConnection: Integer; dispid 1925;
    function ReadModelParamDescription: Integer; dispid 1926;
    property ModelParamDescription: WideString readonly dispid 1927;
    property DriverMajorVersion: LongWord readonly dispid 1928;
    property DriverMinorVersion: LongWord readonly dispid 1929;
    property DriverRelease: LongWord readonly dispid 1930;
    property DriverBuild: LongWord readonly dispid 1931;
    property DriverVersion: WideString readonly dispid 1932;
    function PrintBarcodeUsingPrinter: Integer; dispid 1933;
    property HRIPosition: Integer dispid 1934;
    function CloseCheckWithKPK: Integer; dispid 1935;
    property KPKStr: WideString readonly dispid 1936;
    function ReadEKLZActivizationParams: Integer; dispid 1937;
    function GetShortReportInSessionRange: Integer; dispid 1938;
    function GetShortReportInDatesRange: Integer; dispid 1939;
    function ClearResult: Integer; dispid 1940;
    function ReadLastReceipt: Integer; dispid 1941;
    function ReadLastReceiptLine: Integer; dispid 1942;
    function ReadLastReceiptMac: Integer; dispid 1943;
    function MasterPayClearBuffer: Integer; dispid 1944;
    function MasterPayAddTextBlock: Integer; dispid 1945;
    function MasterPayCreateMac: Integer; dispid 1946;
    property TextBlockNumber: Integer dispid 1947;
    property TextBlock: WideString dispid 1948;
    property CashControlProtocols: WideString readonly dispid 1949;
    property StatusCommand: TStatusCommand dispid 1950;
    function BeginDocument: Integer; dispid 1951;
    function EndDocument: Integer; dispid 1952;
    property PosControlReceiptSeparator: WideString dispid 1953;
    function LoadBlockData: Integer; dispid 1954;
    property BlockType: Integer dispid 1955;
    property BlockNumber: Integer dispid 1956;
    property BlockDataHex: WideString dispid 1957;
    function Print2DBarcode: Integer; dispid 1958;
    property BarcodeDataLength: Integer dispid 1959;
    property BarcodeParameter1: Integer dispid 1960;
    property BarcodeParameter2: Integer dispid 1961;
    property BarcodeParameter3: Integer dispid 1962;
    property BarcodeParameter4: Integer dispid 1963;
    property BarcodeParameter5: Integer dispid 1964;
    property BarcodeStartBlockNumber: Integer dispid 1965;
    function LoadAndPrint2DBarcode: Integer; dispid 1966;
    property ExciseCode: Integer dispid 1967;
    function ExcisableOperation: Integer; dispid 1968;
    function ReadReportBufferLine: Integer; dispid 1969;
    property LogMaxFileSize: Integer dispid 1970;
    property LogMaxFileCount: Integer dispid 1971;
    property SaveSettingsType: Integer dispid 1972;
    function ReadParams: Integer; dispid 1973;
    property BinaryConversion: TBinaryConversion dispid 1974;
    property CodePage: TCodePage dispid 1975;
    property PrintJournalBeforeZReport: WordBool dispid 1976;
    function GetEKLZCode3Report: Integer; dispid 1977;
    property TransmitStatus: Integer readonly dispid 1978;
    property TransmitQueueSize: Integer readonly dispid 1979;
    property TransmitSessionNumber: Integer readonly dispid 1980;
    property TransmitDocumentNumber: Integer readonly dispid 1981;
    function ReadModemParameter: Integer; dispid 1982;
    function WriteModemParameter: Integer; dispid 1983;
    property ParameterNumber: Integer dispid 1984;
    property ParameterValue: WideString dispid 1985;
    property TranslationEnabled: WordBool dispid 1986;
    property ModelIndex: Integer dispid 1987;
    property ModelNames: WideString readonly dispid 1988;
    property ModelsCount: Integer readonly dispid 1990;
    property FMFlagsEx: Integer readonly dispid 1989;
    property FMMode: Integer readonly dispid 1991;
    property IsASPDMode: WordBool readonly dispid 1992;
    property IsCorruptedFMRecords: WordBool readonly dispid 1993;
    property IsCorruptedFiscalizationInfo: WordBool readonly dispid 1994;
    property CarryStrings: WordBool dispid 1995;
    property DelayedPrint: WordBool dispid 1996;
    function GetCashRegEx: Integer; dispid 1997;
    property RegSaleRec: Currency readonly dispid 1998;
    property RegBuyRec: Currency readonly dispid 1999;
    property RegSaleReturnRec: Currency readonly dispid 2000;
    property RegBuyReturnRec: Currency readonly dispid 2001;
    property RegSaleSession: Currency readonly dispid 2002;
    property RegBuySession: Currency readonly dispid 2003;
    property RegSaleReturnSession: Currency readonly dispid 2004;
    property RegBuyReturnSession: Currency readonly dispid 2005;
    function GetWareBaseCashRegs: Integer; dispid 2006;
    property WareCode: Integer dispid 2007;
    function PrintCashierReport: Integer; dispid 2008;
    function PrintHourlyReport: Integer; dispid 2009;
    function PrintWareReport: Integer; dispid 2010;
    function UpdateWare: Integer; dispid 2011;
    function ReadWare: Integer; dispid 2012;
    function RemoveWare: Integer; dispid 2013;
    function CheckFM: Integer; dispid 2014;
    property RecordCount: Integer readonly dispid 2015;
    property CheckingType: Integer dispid 2016;
    function ReadErrorDescription: Integer; dispid 2017;
    property ErrorCode: Integer dispid 2018;
    property UseWareCode: WordBool dispid 2019;
    property RequestErrorDescription: WordBool dispid 2020;
    property ErrorDescription: WideString readonly dispid 2021;
    property AdjustRITimeout: WordBool dispid 2022;
    property UCodePageText: WideString readonly dispid 2023;
    property ReconnectPort: WordBool dispid 2024;
    property DoNotSendENQ: WordBool dispid 2025;
    property SwapBytesMode: Integer dispid 2026;
    property ModelParamIndex: Integer dispid 2027;
    property ModelParamCount: Integer readonly dispid 2028;
    function ReadModelParam: Integer; dispid 2029;
    function InitEEPROM: Integer; dispid 2030;
    property CheckFMConnection: WordBool dispid 2031;
    property CheckEJConnection: WordBool dispid 2032;
    function CheckConnection: Integer; dispid 2033;
    property BarcodeHex: WideString dispid 2034;
    function ChangeProtocol: Integer; dispid 2035;
    property ProtocolType: Integer dispid 2036;
    property LDProtocolType: Integer dispid 2037;
    function GetECRParams: Integer; dispid 2038;
    property LastPrintResult: SYSINT readonly dispid 2039;
    property UseSlipCheck: WordBool dispid 2040;
    property TypeOfLastEntryFMEx: Integer readonly dispid 2041;
    function JournalOperation: Integer; dispid 2042;
    property AutoSensorValues: WordBool dispid 2043;
    property SearchTimeout: Integer dispid 2044;
    property AutoStartSearch: WordBool dispid 2045;
    property TCPConnectionTimeout: Integer dispid 2046;
    function GetMFPCode3Status: Integer; dispid 2047;
    function MFPPrepareActivization: Integer; dispid 2048;
    function MFPGetPermitActivizationCode: Integer; dispid 2049;
    function MFPActivization: Integer; dispid 2050;
    function MFPGetPrepareActivizationResult: Integer; dispid 2051;
    function MFPGetCustomerCode: Integer; dispid 2052;
    function MFPCloseArchive: Integer; dispid 2053;
    function MFPSetCustomerCode: Integer; dispid 2054;
    function MFPSetPermitActivizationCode: Integer; dispid 2055;
    function CloseCheckEx: Integer; dispid 2056;
    property Summ5: Currency dispid 2057;
    property Summ6: Currency dispid 2058;
    property Summ7: Currency dispid 2059;
    property Summ8: Currency dispid 2060;
    property Summ9: Currency dispid 2061;
    property Summ10: Currency dispid 2062;
    property Summ11: Currency dispid 2063;
    property Summ12: Currency dispid 2064;
    property Summ13: Currency dispid 2065;
    property Summ14: Currency dispid 2066;
    property Summ15: Currency dispid 2067;
    property Summ16: Currency dispid 2068;
    property CustomerCode: Integer dispid 2069;
    property PermitActivizationCode: Integer dispid 2070;
    property NameCashRegEx: WideString readonly dispid 2071;
    property ActivizationStatus: Integer dispid 2072;
    property MFPStatus: Integer dispid 2073;
    property MFPNumber: WideString dispid 2074;
    property KPKValue: Integer dispid 2075;
    property ActivizationControlByte: Integer dispid 2076;
    property PrepareActivizationRemainCount: Integer dispid 2077;
    property AnswerCode: Integer dispid 2078;
    property RequestType: Integer dispid 2079;
    property ReadTimeout: Integer dispid 2080;
    function ClearReportBuffer: Integer; dispid 2081;
    property LastFMRecordType: Integer readonly dispid 2082;
    property IsBlockedByWrongTaxPassword: WordBool readonly dispid 2083;
    function ShowAdditionalParams: Integer; dispid 2084;
    property CloudCashdeskEnabled: WordBool dispid 2085;
    property ECRID: WideString dispid 2086;
    function GetCloudCashdeskParams: Integer; dispid 2087;
    property KSAInfo: WideString dispid 2088;
    property VertScale: Integer dispid 2089;
    property HorizScale: Integer dispid 2090;
    function DrawScale: Integer; dispid 2091;
    property BarcodeFirstLine: Integer dispid 2092;
    property SKNOStatus: Integer dispid 2093;
    property SKNOError: Integer dispid 2094;
    property SKNOIdentifier: WideString dispid 2095;
    function PrintGraphics512: Integer; dispid 2096;
    function LoadGraphics512: Integer; dispid 2097;
    property LineLength: Integer dispid 2098;
    property GraphBufferType: Integer dispid 2099;
    property FNLifeState: Integer readonly dispid 2100;
    property FNCurrentDocument: Integer dispid 2101;
    property FNDocumentData: Integer readonly dispid 2102;
    property FNSessionState: Integer readonly dispid 2103;
    property FNWarningFlags: Integer readonly dispid 2104;
    property FNSoftVersion: WideString readonly dispid 2105;
    property SyncTimeout: Integer dispid 2106;
    function FNGetStatus: Integer; dispid 2107;
    function FNGetSerial: Integer; dispid 2108;
    function FNGetExpirationTime: Integer; dispid 2109;
    function FNGetVersion: Integer; dispid 2110;
    property FNSoftType: Integer readonly dispid 2111;
    function FNBeginFiscalization: Integer; dispid 2112;
    function FNFiscalization: Integer; dispid 2113;
    property FiscalSign: Integer dispid 2114;
    property KKTRegistrationNumber: WideString dispid 2115;
    property TaxType: Integer dispid 2116;
    property WorkMode: Integer dispid 2117;
    function FNResetState: Integer; dispid 2118;
    function FNCancelDocument: Integer; dispid 2119;
    function FNGetFiscalizationResult: Integer; dispid 2120;
    function FNFindDocument: Integer; dispid 2121;
    property DocumentType: Integer dispid 2122;
    property OFDTicketReceived: WordBool dispid 2123;
    property DocumentData: WideString dispid 2124;
    function FNOpenSession: Integer; dispid 2125;
    function FNSendTLV: Integer; dispid 2126;
    property TLVData: WideString dispid 2127;
    function FNDiscountOperation: Integer; dispid 2128;
    function FNStorno: Integer; dispid 2129;
    property OFDServer: WideString dispid 2133;
    property OFDPort: Integer dispid 2134;
    property OFDPollPeriod: Integer dispid 2135;
    property OFDEnabled: WordBool dispid 2136;
    function FNBeginRegistrationReport: Integer; dispid 2130;
    function FNBuildRegistrationReport: Integer; dispid 2131;
    function FNBeginCorrectionReceipt: Integer; dispid 2137;
    function FNBuildCorrectionReceipt: Integer; dispid 2138;
    function FNBeginCalculationStateReport: Integer; dispid 2139;
    function FNBuildCalculationStateReport: Integer; dispid 2140;
    function FNCloseSession: Integer; dispid 2141;
    function FNGetInfoExchangeStatus: Integer; dispid 2142;
    function FNRequestFiscalDocumentTLV: Integer; dispid 2143;
    function FNReadFiscalDocumentTLV: Integer; dispid 2144;
    function FNGetOFDTicketByDocNumber: Integer; dispid 2145;
    function FNBeginCloseFiscalMode: Integer; dispid 2146;
    function FNCloseFiscalMode: Integer; dispid 2147;
    function FNGetUnconfirmedDocCount: Integer; dispid 2148;
    function FNGetCurrentSessionParams: Integer; dispid 2149;
    function FNBeginOpenSession: Integer; dispid 2150;
    function FNBeginCloseSession: Integer; dispid 2151;
    function FNBuildReregistrationReport: Integer; dispid 2132;
    property DocumentCount: Integer dispid 2152;
    property ReceiptNumber: Integer dispid 2153;
    property MessageState: Integer dispid 2154;
    property InfoExchangeStatus: Integer dispid 2155;
    property MessageCount: Integer dispid 2156;
    property ReportTypeInt: Integer dispid 2157;
    property DataLength: Integer dispid 2158;
    function FNDiscountTaxOperation: Integer; dispid 2159;
    function FNCloseCheckEx: Integer; dispid 2160;
    property DiscountValue: Currency dispid 2161;
    property ChargeValue: Currency dispid 2162;
    property TaxValue: Currency dispid 2163;
    property RegistrationReasonCode: Integer dispid 2164;
    property DiscountName: WideString dispid 2165;
    function FNSendCustomerEmail: Integer; dispid 2166;
    property CustomerEmail: WideString dispid 2167;
    function Annulment: Integer; dispid 2168;
    property Date2: TDateTime dispid 2169;
    property Time2: TDateTime dispid 2170;
    property FiscalSignOFD: WideString dispid 2171;
    property AutoOpenSession: WordBool dispid 2172;
    function FNDiscountChargeRN: Integer; dispid 2173;
    function ImportTables: Integer; dispid 2174;
    function ExportTables: Integer; dispid 2175;
    function FNSendTag: Integer; dispid 2176;
    property TagNumber: Integer dispid 2177;
    property TagType: Integer dispid 2178;
    property TagValueInt: Integer dispid 2179;
    property TagValueStr: WideString dispid 2180;
    property TagValueFVLN: Currency dispid 2181;
    property TagValueDateTime: TDateTime dispid 2182;
    property TagValueLength: Integer dispid 2183;
    property TagValueBin: WideString dispid 2184;
    function ReadSerialNumber: Integer; dispid 2185;
    function FNPrintOperatorConfirm: Integer; dispid 2186;
    function FNGetFiscalizationResultByNumber: Integer; dispid 2187;
    function AnnulmentRB: Integer; dispid 2188;
    function FNGetTagDescription: Integer; dispid 2189;
    property TagDescription: WideString dispid 2190;
    function FNPrintDocument: Integer; dispid 2191;
    function FNGetDocumentAsString: Integer; dispid 2192;
    property ShowTagNumber: WordBool dispid 2193;
    function Ping: Integer; dispid 2194;
    property URL: WideString dispid 2195;
    property PingTime: Integer dispid 2196;
    property PingResult: Integer dispid 2197;
    property ICSEnabled: WordBool dispid 2198;
    property ICSPollPeriod: Integer dispid 2199;
    function FNOperation: Integer; dispid 2201;
    function FNSendTLVOperation: Integer; dispid 2202;
    property RoundingSumm: Integer dispid 2200;
    property TaxValue1: Currency dispid 2203;
    property TaxValue2: Currency dispid 2204;
    property TaxValue3: Currency dispid 2205;
    property TaxValue4: Currency dispid 2206;
    property TaxValue5: Currency dispid 2207;
    property TaxValue6: Currency dispid 2208;
    property TaxValue1Enabled: WordBool dispid 2209;
    property TaxValue2Enabled: WordBool dispid 2210;
    property TaxValue3Enabled: WordBool dispid 2211;
    property TaxValue4Enabled: WordBool dispid 2212;
    property TaxValue5Enabled: WordBool dispid 2213;
    property TaxValue6Enabled: WordBool dispid 2214;
    property TaxValueEnabled: WordBool dispid 2215;
    property Summ1Enabled: WordBool dispid 2216;
    property PaymentTypeSign: Integer dispid 2217;
    property PaymentItemSign: Integer dispid 2218;
    function FNBuildCorrectionReceipt2: Integer; dispid 2219;
    property CalculationSign: Integer dispid 2220;
    property CorrectionType: Integer dispid 2221;
    property OFDReadTimeout: Integer dispid 2222;
    property AutoEoD: WordBool dispid 2224;
    function FNGetNonClearableSumm: Integer; dispid 2223;
    function ResetSerialNumber: Integer; dispid 2225;
    property FiscalSignAsString: WideString readonly dispid 2226;
    function DBFindDocument: Integer; dispid 2227;
    property DBFilePath: WideString dispid 2228;
    function DBPrintDocument: Integer; dispid 2229;
    property KKTLicense: Integer dispid 2230;
    property LicenseNumber: Integer dispid 2231;
    property PUKCode: Integer dispid 2232;
    function ReadKKTLicenses: Integer; dispid 2233;
    function GetKKTLicenseByNumber: Integer; dispid 2234;
    property OFDExchangeSuspended: WordBool dispid 2235;
    function CloseCheckBel: Integer; dispid 2236;
    property AutoOFDExchange: WordBool dispid 2237;
    function WriteKKTLicense: Integer; dispid 2238;
    function FNSendSenderEmail: Integer; dispid 2239;
    property EmailAddress: WideString dispid 2240;
    property Discount1: Currency dispid 2241;
    property Discount2: Currency dispid 2242;
    property Discount3: Currency dispid 2243;
    property Discount4: Currency dispid 2244;
    property UseTaxDiscountBel: WordBool dispid 2245;
    property Summ1AsString: WideString readonly dispid 2246;
    property Summ2AsString: WideString readonly dispid 2247;
    property Summ3AsString: WideString readonly dispid 2248;
    property Summ4AsString: WideString readonly dispid 2249;
    function DBQueryDocumentsInSession: Integer; dispid 2250;
    function DBGetNextDocument: Integer; dispid 2251;
    function DBPrintNextDocument: Integer; dispid 2252;
    property DBDocType: Integer dispid 2253;
    function OnlinePay: Integer; dispid 2254;
    function OPGetLastStatus: Integer; dispid 2255;
    function OPGetLastRequisite: Integer; dispid 2256;
    property OPSystem: Integer dispid 2257;
    property OPTransactionType: Integer dispid 2258;
    property OPBarcodeInputType: Integer dispid 2259;
    property OPIdPayment: WideString dispid 2260;
    property OPTransactionStatus: Integer dispid 2261;
    property OPRequisiteNumber: Integer dispid 2262;
    property OPRequisiteValue: WideString dispid 2263;
    function GenerateMonoToken: Integer; dispid 2264;
    property Token: WideString dispid 2265;
    function RebootKKT: Integer; dispid 2266;
    function FNSendTagOperation: Integer; dispid 2267;
    function FNBeginSTLVTag: Integer; dispid 2268;
    function FNAddTag: Integer; dispid 2269;
    function FNSendSTLVTagOperation: Integer; dispid 2270;
    function FNSendSTLVTag: Integer; dispid 2271;
    property TagID: Integer dispid 2272;
    function LoadFontSymbol: Integer; dispid 2273;
    property SymbolCode: Integer dispid 2274;
    property BlockData: WideString dispid 2275;
    property SymbolHeight: Integer dispid 2276;
    property SymbolWidth: Integer dispid 2277;
    property FileType: Integer dispid 2278;
    function LoadFont: Integer; dispid 2279;
    function LoadBlockOnSDCard: Integer; dispid 2280;
    function LoadFileOnSDCard: Integer; dispid 2281;
    property DelayOnDisconnect: Integer dispid 2282;
    function PrintStringWithWrap: Integer; dispid 2283;
    property WrapStrings: WordBool dispid 2284;
    function FNSendItemCodeData: Integer; dispid 2285;
    property GTIN: WideString dispid 2286;
    property MarkingType: Integer dispid 2287;
    function FNCheckItemBarcode: Integer; dispid 2288;
    function FNRequestRegistrationTLV: Integer; dispid 2289;
    function ReadLoaderVersion: Integer; dispid 2290;
    property LoaderVersion: WideString readonly dispid 2291;
    property RequestDocumentType: Integer dispid 2292;
    function FNOpenCheckCorrection: Integer; dispid 2293;
    property WorkModeEx: Integer dispid 2294;
    property INNOFD: WideString dispid 2295;
    property RegistrationReasonCodeEx: Integer dispid 2296;
    function FNCountersSync: Integer; dispid 2297;
    function FNGetFreeMemoryResource: Integer; dispid 2298;
    property FN5YearResource: Integer readonly dispid 2299;
    property FN30DayResource: Integer readonly dispid 2300;
    function UpdateFirmware: Integer; dispid 2301;
    function SetDFUMode: Integer; dispid 2302;
    property UpdateFirmwareSuspended: WordBool dispid 2303;
    property UpdateFirmwareStatus: Integer readonly dispid 2304;
    function CancelFirmwareUpdate: Integer; dispid 2305;
    property UpdateFirmwareStatusMessage: WideString readonly dispid 2306;
    property PluginsEnabled: WordBool dispid 2307;
    function WriteRNMTj: Integer; dispid 2308;
    function ReadRNMTj: Integer; dispid 2309;
    function FNGetNonClearableSummEx: Integer; dispid 2310;
    property FWUpdateEnabled: WordBool dispid 2311;
    property FWUpdateServerURL: WideString dispid 2312;
    property FWUpdatePollInterval: Integer dispid 2313;
    property AuthKey: WideString dispid 2314;
    function WriteAuthKey: Integer; dispid 2315;
    function RewriteAuthKey: Integer; dispid 2316;
    function ResetAuthKey: Integer; dispid 2317;
    property NewAuthKey: WideString dispid 2318;
    function SaveAuthKey: Integer; dispid 2319;
    function DeleteAuthKey: Integer; dispid 2320;
    property AuthKeyStorageType: Integer dispid 2321;
    property ItemStatus: Integer dispid 2322;
    property CheckItemMode: Integer dispid 2323;
    property ItemSaleServerAllowed: Integer dispid 2324;
    property CheckItemLocalResult: Integer dispid 2325;
    property KMServerErrorCode: Integer dispid 2326;
    property KMServerCheckingStatus: Integer dispid 2327;
    property SymbolicType: Integer dispid 2328;
    property ProcessingCode: Integer dispid 2329;
    function FNBindMarkingItem: Integer; dispid 2330;
    function FNGetKMServerExchangeStatus: Integer; dispid 2331;
    property ConnectionStatus: Integer dispid 2332;
    property MessageNumber: Integer dispid 2334;
    property FreeMemorySize: Integer dispid 2335;
    function FNAcceptMakringCode: Integer; dispid 2336;
    function FNDeclineMarkingCode: Integer; dispid 2337;
    property ItemNameLength: Integer dispid 2333;
    function ReadFeatureLicenses: Integer; dispid 2338;
    function WriteFeatureLicenses: Integer; dispid 2339;
    property DigitalSign: WideString dispid 2340;
    property UpdateFirmwareMethod: Integer dispid 2341;
    function PluginsUpdateSettings: Integer; dispid 2342;
    function FNSendUserAttribute: Integer; dispid 2343;
    property UserAttributeName: WideString dispid 2344;
    property UserAttributeValue: WideString dispid 2345;
    property TagValueVLN: WideString dispid 2346;
    function FNSendItemBarcode: Integer; dispid 2347;
    property TLVDataHex: WideString dispid 2348;
    function FNBeginReadArchive: Integer; dispid 2349;
    function FNReadArchiveItem: Integer; dispid 2350;
    function FNSaveArchive: Integer; dispid 2351;
    property FirstDocumentNumber: Integer dispid 2352;
    property LastDocumentNumber: Integer dispid 2353;
    property FNArchiveType: Integer dispid 2354;
    property MarkingOnly: WordBool dispid 2355;
    function FNOperationMdlp: Integer; dispid 2356;
    function FNCloseCheckMdlp: Integer; dispid 2357;
    property MarkingTypeEx: Integer dispid 2358;
    property TagValueBinHex: WideString dispid 2359;
    property FWUpdateSearchTimeout: Integer dispid 2360;
    property FWUpdWriteTimeout: Integer dispid 2361;
    property FWUpdDelayAfterReboot: Integer dispid 2362;
    property FWUpdDelayBeforeWrite: Integer dispid 2363;
    property FWUpdDelayBeforeSearch: Integer dispid 2364;
    function FNGetMarkingCodeWorkStatus: Integer; dispid 2365;
    property MCCheckStatus: Integer dispid 2366;
    property MCNotificationStatus: Integer dispid 2367;
    property MCCheckResultSavedCount: Integer dispid 2368;
    property MCCommandFlags: Integer dispid 2369;
    property MCRealizationCount: Integer dispid 2370;
    property MCStorageSize: Integer dispid 2371;
    function GetTagAsTLV: Integer; dispid 2372;
    property CheckItemLocalError: Integer dispid 2373;
    property MeasureUnit: Integer dispid 2374;
    function FNBeginReadNotifications: Integer; dispid 2375;
    function FNReadNotificationBlock: Integer; dispid 2376;
    property NotificationCount: Integer dispid 2377;
    property NotificationNumber: Integer dispid 2378;
    property NotificationSize: Integer dispid 2379;
    property DataOffset: Integer dispid 2380;
    property CheckSum: Integer dispid 2381;
    function FNConfirmNotificationRead: Integer; dispid 2382;
    property DivisionalQuantity: WordBool dispid 2383;
    property Numerator: WideString dispid 2384;
    property Denominator: WideString dispid 2385;
    property MarkingType2: Integer dispid 2386;
    function FNAcceptMarkingCode: Integer; dispid 2387;
    property FNMarkingFillPercentage: Integer dispid 2388;
    function FNReadFiscalBarcode: Integer; dispid 2389;
    property TagValueFVLND: Double dispid 2390;
    function FNMarkingClearBuffer: Integer; dispid 2391;
    property FWUpdateSaveTables: WordBool dispid 2392;
    function FNCheckItemBarcode2: Integer; dispid 2393;
    function PlainTransferEnable: Integer; dispid 2394;
    function PlainTransferDisable: Integer; dispid 2395;
    property PlainTransferMode: Integer dispid 2396;
    property FWUpdateFFDParams: Integer dispid 2397;
    property FWUpdateFFDWaitInterval: Integer dispid 2398;
    function CardPayProperties: Integer; dispid 626;
    property CardPayEnabled: WordBool dispid 625;
    property CardPayType: Integer dispid 628;
    property ccUseTextAsWareName: WordBool dispid 627;
    property ccWareNameLineNumber: Integer dispid 629;
    property ccHeaderLineCount: Integer dispid 630;
    property ccProtocol: TCashControlProtocol dispid 631;
    function PrintCliche: Integer; dispid 632;
    property LogCommands: WordBool dispid 633;
    property LogMethods: WordBool dispid 634;
    function PrintLine: Integer; dispid 635;
    property BarcodeType: Integer dispid 636;
    function PrintBarcodeLine: Integer; dispid 637;
    property BarcodeTypes: WideString readonly dispid 638;
    function PrintBarcodeGraph: Integer; dispid 639;
    property BarcodeAlignment: TBarcodeAlignment dispid 640;
    property BarcodeAlignments: WideString readonly dispid 641;
    property BarWidth: Integer dispid 642;
    property CapGetShortECRStatus: WordBool readonly dispid 643;
    property WaitForPrintingDelay: Integer dispid 644;
    function ResetECR: Integer; dispid 645;
    function PrintZReportInBuffer: Integer; dispid 646;
    function PrintZReportFromBuffer: Integer; dispid 647;
    property LineSwapBytes: WordBool dispid 648;
    function OutputReceipt: Integer; dispid 622;
    property ReceiptOutputType: Integer dispid 623;
    function Sale2: Integer; dispid 624;
    function GetInterval: Integer; dispid 607;
    function OpenSession: Integer; dispid 608;
    function ReprintSlipDocument: Integer; dispid 609;
    function SetInterval: Integer; dispid 610;
    function ShowPayParams: Integer; dispid 611;
    function ShowTablesDlg: Integer; dispid 612;
    function WaitForPrinting: Integer; dispid 613;
    property IntervalNumber: Integer dispid 614;
    property IntervalValue: Integer dispid 615;
    property MobilePayEnabled: WordBool dispid 616;
    property ParamsPageIndex: Integer dispid 617;
    property ParentWnd: Integer dispid 618;
    property PayDepartment: Integer dispid 619;
    property RealPayDepartment: Integer dispid 620;
    property SaleError: WordBool dispid 621;
    property LastKPKDateStr: WideString readonly dispid 556;
    property LastKPKTimeStr: WideString readonly dispid 557;
    function MethodSupported: WordBool; dispid 558;
    property MethodName: WideString dispid 559;
    property PropertyName: WideString dispid 560;
    function PropertySupported: WordBool; dispid 561;
    property LockTimeout: Integer dispid 563;
    function LockPortTimeout: Integer; dispid 562;
    property SlipStringInterval: Integer dispid 564;
    function GetIBMStatus: Integer; dispid 565;
    function GetShortIBMStatus: Integer; dispid 566;
    property IBMStatusByte1: Integer readonly dispid 567;
    property IBMStatusByte2: Integer readonly dispid 568;
    property IBMStatusByte3: Integer readonly dispid 569;
    property IBMStatusByte4: Integer readonly dispid 570;
    property IBMStatusByte5: Integer readonly dispid 571;
    property IBMStatusByte6: Integer readonly dispid 572;
    property IBMStatusByte7: Integer readonly dispid 573;
    property IBMStatusByte8: Integer readonly dispid 574;
    property IBMFlags: Integer readonly dispid 575;
    property IBMDocumentNumber: Integer readonly dispid 576;
    property IBMLastSaleReceiptNumber: Integer readonly dispid 577;
    property IBMLastBuyReceiptNumber: Integer readonly dispid 578;
    property IBMLastReturnSaleReceiptNumber: Integer readonly dispid 579;
    property IBMLastReturnBuyReceiptNumber: Integer readonly dispid 580;
    property IBMSessionDay: Integer readonly dispid 581;
    property IBMSessionMonth: Integer readonly dispid 583;
    property IBMSessionYear: Integer readonly dispid 584;
    property IBMSessionHour: Integer readonly dispid 585;
    property IBMSessionMin: Integer readonly dispid 586;
    property IBMSessionSec: Integer readonly dispid 587;
    property IBMSessionDateTime: TDateTime readonly dispid 588;
    property EscapeIP: WideString dispid 582;
    property EscapePort: Integer dispid 589;
    property LDEscapeIP: WideString dispid 590;
    property LDEscapePort: Integer dispid 591;
    property EscapeTimeout: Integer dispid 592;
    property LDEscapeTimeout: Integer dispid 593;
    property CommandTimeout: Integer dispid 594;
    property UseCommandTimeout: WordBool dispid 595;
    property CommandCount: Integer readonly dispid 596;
    property CommandIndex: Integer dispid 597;
    function GetCommandParams: Integer; dispid 598;
    function SetCommandParams: Integer; dispid 599;
    function SaveCommandParams: Integer; dispid 600;
    property CommandName: WideString readonly dispid 601;
    property CommandDefTimeout: Integer readonly dispid 602;
    property CommandCode: Integer readonly dispid 603;
    function SetAllCommandsParams: Integer; dispid 604;
    property TimeoutsUsing: Integer dispid 605;
    function SetDefCommandsParams: Integer; dispid 606;
    function SetSCPassword: Integer; dispid 553;
    property SCPassword: Integer dispid 554;
    property NewSCPassword: Integer dispid 555;
    property ComLogOnlyErrors: WordBool dispid 545;
    property PresenterIn: WordBool readonly dispid 547;
    property PresenterOut: WordBool readonly dispid 548;
    function PresenterKeep: Integer; dispid 549;
    function PresenterPush: Integer; dispid 550;
    function OpenScreen: Integer; dispid 551;
    function CloseScreen: Integer; dispid 552;
    function GetEKLZCode1Status: Integer; dispid 533;
    function GetEKLZCode2Status: Integer; dispid 534;
    function ReadWriteFM: Integer; dispid 535;
    function PrintHeader: Integer; dispid 536;
    function CloseCheckWithResult: Integer; dispid 537;
    property OperationCode: Integer readonly dispid 538;
    property AccType: Integer dispid 540;
    property Address: Integer dispid 541;
    property WrittenByte: Integer dispid 542;
    property ReadByte: Integer readonly dispid 543;
    property TransferByte: WideString dispid 544;
    property OperationType: Integer dispid 546;
    function AboutBox: Integer; dispid 539;
    property SysAdminPassword: Integer dispid 514;
    property RecoverError165: WordBool dispid 531;
    property MaxRecoverCount: Integer dispid 532;
    property LineData2: WideString dispid 513;
    property CPLogFile: WideString dispid 511;
    property ComLogFile: WideString dispid 512;
    property ConnectionType: Integer dispid 522;
    property LDConnectionType: Integer dispid 523;
    property TCPPort: Integer dispid 524;
    property LDTCPPort: Integer dispid 525;
    property IPAddress: WideString dispid 526;
    property LDIPAddress: WideString dispid 527;
    property UseIPAddress: WordBool dispid 528;
    property LDUseIPAddress: WordBool dispid 529;
    function SaveParams: Integer; dispid 530;
    property CashControlHost: WideString dispid 515;
    property CashControlPort: WideString dispid 516;
    property CashControlEnabled: WordBool dispid 517;
    property CashControlUseTCP: WordBool dispid 518;
    property CashControlPassword: Integer dispid 519;
    function CashControlOpen: Integer; dispid 520;
    function CashControlClose: Integer; dispid 521;
    property CPLog: WordBool dispid 510;
    property LogOn: WordBool dispid 503;
    procedure SetIsString(Value: WordBool); dispid 504;
    procedure SetFieldSize(Value: Integer); dispid 505;
    function ReadTable2: Integer; dispid 506;
    function WriteTable2: Integer; dispid 507;
    procedure SetFieldMinValue(Value: Integer); dispid 508;
    procedure SetFieldMaxValue(Value: Integer); dispid 509;
    property ServerVersion: WideString readonly dispid 484;
    property LDComputerName: WideString dispid 485;
    property LDTimeout: Integer dispid 486;
    property ComputerName: WideString dispid 487;
    function ServerConnect: Integer; dispid 488;
    function ServerDisconnect: Integer; dispid 489;
    property ServerConnected: WordBool readonly dispid 490;
    function LockPort: Integer; dispid 491;
    function UnlockPort: Integer; dispid 492;
    property PortLocked: WordBool readonly dispid 493;
    function AdminUnlockPort: Integer; dispid 494;
    function AdminUnlockPorts: Integer; dispid 495;
    function ServerCheckKey: Integer; dispid 496;
    function GetFontMetrics: Integer; dispid 497;
    property PrintWidth: Integer readonly dispid 498;
    property CharWidth: Integer readonly dispid 499;
    property CharHeight: Integer readonly dispid 500;
    property FontCount: Integer readonly dispid 502;
    function GetFreeLDNumber: Integer; dispid 501;
    function AddLD: Integer; dispid 1;
    function Beep: Integer; dispid 2;
    function Buy: Integer; dispid 3;
    function BuyEx: Integer; dispid 4;
    function CancelCheck: Integer; dispid 5;
    function CashIncome: Integer; dispid 6;
    function CashOutcome: Integer; dispid 7;
    function Charge: Integer; dispid 8;
    function CheckSubTotal: Integer; dispid 9;
    function CloseCheck: Integer; dispid 10;
    function ConfirmDate: Integer; dispid 12;
    function Connect: Integer; dispid 13;
    function ContinuePrint: Integer; dispid 14;
    function Correction: Integer; dispid 15;
    function CutCheck: Integer; dispid 16;
    function DampRequest: Integer; dispid 17;
    function DeleteLD: Integer; dispid 18;
    function Disconnect: Integer; dispid 19;
    function Discount: Integer; dispid 20;
    function DozeOilCheck: Integer; dispid 21;
    function Draw: Integer; dispid 22;
    function EKLZDepartmentReportInDatesRange: Integer; dispid 23;
    function EKLZDepartmentReportInSessionsRange: Integer; dispid 24;
    function EKLZJournalOnSessionNumber: Integer; dispid 25;
    function EKLZSessionReportInDatesRange: Integer; dispid 26;
    function EKLZSessionReportInSessionsRange: Integer; dispid 27;
    function ExchangeBytes: Integer; dispid 28;
    function FeedDocument: Integer; dispid 29;
    function Fiscalization: Integer; dispid 30;
    function FiscalReportForDatesRange: Integer; dispid 31;
    function FiscalReportForSessionRange: Integer; dispid 32;
    function GetActiveLD: Integer; dispid 33;
    function EnumLD: Integer; dispid 34;
    function GetCashReg: Integer; dispid 35;
    function GetCountLD: Integer; dispid 36;
    function GetData: Integer; dispid 37;
    function GetDeviceMetrics: Integer; dispid 38;
    function GetECRStatus: Integer; dispid 39;
    function GetShortECRStatus: Integer; dispid 40;
    function GetExchangeParam: Integer; dispid 41;
    function GetFieldStruct: Integer; dispid 42;
    function GetFiscalizationParameters: Integer; dispid 43;
    function GetFMRecordsSum: Integer; dispid 44;
    function GetLastFMRecordDate: Integer; dispid 45;
    function GetLiterSumCounter: Integer; dispid 46;
    function GetOperationReg: Integer; dispid 47;
    function GetParamLD: Integer; dispid 48;
    function GetRangeDatesAndSessions: Integer; dispid 49;
    function GetRKStatus: Integer; dispid 50;
    function GetTableStruct: Integer; dispid 51;
    function InitFM: Integer; dispid 52;
    function InitTable: Integer; dispid 53;
    function InterruptDataStream: Integer; dispid 54;
    function InterruptFullReport: Integer; dispid 55;
    function InterruptTest: Integer; dispid 56;
    function LaunchRK: Integer; dispid 57;
    function LoadLineData: Integer; dispid 58;
    function OilSale: Integer; dispid 59;
    function OpenCheck: Integer; dispid 60;
    function OpenDrawer: Integer; dispid 61;
    function PrintBarCode: Integer; dispid 62;
    function PrintDepartmentReport: Integer; dispid 63;
    function PrintDocumentTitle: Integer; dispid 64;
    function PrintOperationReg: Integer; dispid 65;
    function PrintReportWithCleaning: Integer; dispid 66;
    function PrintReportWithoutCleaning: Integer; dispid 67;
    function PrintString: Integer; dispid 68;
    function PrintWideString: Integer; dispid 69;
    function ReadEKLZDocumentOnKPK: Integer; dispid 70;
    function ReadEKLZSessionTotal: Integer; dispid 71;
    function ReadLicense: Integer; dispid 72;
    function ReadTable: Integer; dispid 73;
    function RepeatDocument: Integer; dispid 74;
    function ResetAllTRK: Integer; dispid 75;
    function ResetRK: Integer; dispid 76;
    function ResetSettings: Integer; dispid 77;
    function ResetSummary: Integer; dispid 78;
    function ReturnBuy: Integer; dispid 79;
    function ReturnBuyEx: Integer; dispid 80;
    function ReturnSale: Integer; dispid 81;
    function ReturnSaleEx: Integer; dispid 82;
    function Sale: Integer; dispid 83;
    function SaleEx: Integer; dispid 84;
    function SetActiveLD: Integer; dispid 85;
    function SetDate: Integer; dispid 86;
    function SetDozeInMilliliters: Integer; dispid 87;
    function SetDozeInMoney: Integer; dispid 88;
    function SetExchangeParam: Integer; dispid 89;
    function SetParamLD: Integer; dispid 90;
    function SetPointPosition: Integer; dispid 91;
    function SetRKParameters: Integer; dispid 92;
    function SetSerialNumber: Integer; dispid 93;
    function SetTime: Integer; dispid 94;
    function ShowProperties: Integer; dispid 95;
    function StopEKLZDocumentPrinting: Integer; dispid 96;
    function StopRK: Integer; dispid 97;
    function Storno: Integer; dispid 98;
    function StornoEx: Integer; dispid 99;
    function StornoCharge: Integer; dispid 100;
    function StornoDiscount: Integer; dispid 101;
    function SummOilCheck: Integer; dispid 102;
    function SysAdminCancelCheck: Integer; dispid 104;
    function Test: Integer; dispid 105;
    function WriteLicense: Integer; dispid 106;
    function WriteTable: Integer; dispid 107;
    property BarCode: WideString dispid 103;
    property BatteryCondition: WordBool readonly dispid 108;
    property BatteryVoltage: Double readonly dispid 109;
    property BaudRate: Integer dispid 110;
    property Change: Currency readonly dispid 111;
    property CheckResult: Currency dispid 112;
    property CheckType: Integer dispid 113;
    property ComNumber: Integer dispid 114;
    property ContentsOfCashRegister: Currency readonly dispid 115;
    property ContentsOfOperationRegister: Integer readonly dispid 116;
    property CurrentDozeInMilliliters: Integer dispid 117;
    property CurrentDozeInMoney: Currency dispid 118;
    property CutType: WordBool dispid 119;
    property DataBlock: WideString readonly dispid 120;
    property DataBlockNumber: Integer readonly dispid 121;
    property Date: TDateTime dispid 122;
    property Department: Integer dispid 123;
    property DeviceCode: Integer dispid 124;
    property DeviceCodeDescription: WideString readonly dispid 125;
    property DiscountOnCheck: Double dispid 126;
    property DocumentName: WideString dispid 127;
    property DocumentNumber: Integer dispid 128;
    property DozeInMilliliters: Integer dispid 129;
    property DozeInMoney: Currency dispid 130;
    property DrawerNumber: Integer dispid 131;
    property ECRAdvancedMode: Integer readonly dispid 132;
    property ECRAdvancedModeDescription: WideString readonly dispid 133;
    property ECRBuild: Integer readonly dispid 134;
    property ECRFlags: Integer readonly dispid 135;
    property ECRInput: WideString readonly dispid 136;
    property ECRMode: Integer readonly dispid 137;
    property ECRMode8Status: Integer readonly dispid 138;
    property ECRModeDescription: WideString readonly dispid 139;
    property ECROutput: WideString readonly dispid 140;
    property ECRSoftDate: TDateTime readonly dispid 141;
    property ECRSoftVersion: WideString readonly dispid 142;
    property EKLZIsPresent: WordBool readonly dispid 143;
    property EmergencyStopCode: Integer readonly dispid 144;
    property EmergencyStopCodeDescription: WideString readonly dispid 145;
    property FieldName: WideString readonly dispid 146;
    property FieldNumber: Integer dispid 147;
    property FieldSize: Integer readonly dispid 148;
    property FieldType: WordBool readonly dispid 149;
    property FirstLineNumber: Integer dispid 150;
    property FirstSessionDate: TDateTime dispid 151;
    property FirstSessionNumber: Integer dispid 152;
    property FM1IsPresent: WordBool readonly dispid 153;
    property FM2IsPresent: WordBool readonly dispid 154;
    property FMBuild: Integer readonly dispid 155;
    property FMFlags: Integer readonly dispid 156;
    property FMOverflow: WordBool readonly dispid 157;
    property FMSoftDate: TDateTime readonly dispid 158;
    property FMSoftVersion: WideString readonly dispid 159;
    property FreeRecordInFM: Integer readonly dispid 160;
    property FreeRegistration: Integer readonly dispid 161;
    property INN: WideString dispid 162;
    property IsCheckClosed: WordBool readonly dispid 163;
    property IsCheckMadeOut: WordBool readonly dispid 164;
    property IsDrawerOpen: WordBool readonly dispid 165;
    property JournalRibbonIsPresent: WordBool readonly dispid 166;
    property JournalRibbonLever: WordBool readonly dispid 167;
    property JournalRibbonOpticalSensor: WordBool readonly dispid 168;
    property KPKNumber: Integer dispid 170;
    property LastLineNumber: Integer dispid 171;
    property LastSessionDate: TDateTime dispid 172;
    property LastSessionNumber: Integer dispid 173;
    property License: WideString dispid 174;
    property LicenseIsPresent: WordBool readonly dispid 175;
    property LidPositionSensor: WordBool readonly dispid 176;
    property LineData: WideString dispid 177;
    property LineNumber: Integer dispid 178;
    property LogicalNumber: Integer readonly dispid 179;
    property MAXValueOfField: Integer readonly dispid 180;
    property MINValueOfField: Integer readonly dispid 181;
    property Motor: WordBool readonly dispid 182;
    property NameCashReg: WideString readonly dispid 183;
    property NameOperationReg: WideString readonly dispid 184;
    property NewPasswordTI: Integer dispid 185;
    property OpenDocumentNumber: Integer readonly dispid 186;
    property OperatorNumber: Integer readonly dispid 187;
    property Password: Integer dispid 188;
    property Pistol: WordBool readonly dispid 189;
    property PointPosition: WordBool dispid 190;
    property PortNumber: Integer dispid 191;
    property Price: Currency dispid 192;
    property Quantity: Double dispid 193;
    property QuantityOfOperations: Integer readonly dispid 194;
    property ReceiptRibbonIsPresent: WordBool readonly dispid 195;
    property ReceiptRibbonLever: WordBool readonly dispid 196;
    property ReceiptRibbonOpticalSensor: WordBool readonly dispid 197;
    property RegisterNumber: Integer dispid 198;
    property RegistrationNumber: Integer dispid 199;
    property ReportType: WordBool dispid 200;
    property ResultCode: Integer readonly dispid 201;
    property ResultCodeDescription: WideString readonly dispid 202;
    property RKNumber: Integer dispid 203;
    property RNM: WideString dispid 204;
    property RoughValve: WordBool readonly dispid 205;
    property RowNumber: Integer dispid 206;
    property RunningPeriod: Integer dispid 207;
    property SerialNumber: WideString dispid 208;
    property SessionNumber: Integer dispid 209;
    property SlipDocumentIsMoving: WordBool readonly dispid 210;
    property SlipDocumentIsPresent: WordBool readonly dispid 211;
    property SlowingInMilliliters: Integer dispid 212;
    property SlowingValve: WordBool readonly dispid 213;
    property StatusRK: Integer readonly dispid 214;
    property StatusRKDescription: WideString readonly dispid 215;
    property StringForPrinting: WideString dispid 216;
    property StringQuantity: Integer dispid 217;
    property Summ1: Currency dispid 218;
    property Summ2: Currency dispid 219;
    property Summ3: Currency dispid 220;
    property Summ4: Currency dispid 221;
    property TableName: WideString readonly dispid 222;
    property TableNumber: Integer dispid 223;
    property Tax1: Integer dispid 224;
    property Tax2: Integer dispid 225;
    property Tax3: Integer dispid 226;
    property Tax4: Integer dispid 227;
    property Time: TDateTime dispid 228;
    property Timeout: Integer dispid 229;
    property TimeStr: WideString dispid 230;
    property TransferBytes: WideString dispid 231;
    property TRKNumber: Integer dispid 232;
    property TypeOfLastEntryFM: WordBool readonly dispid 233;
    property TypeOfSumOfEntriesFM: WordBool dispid 234;
    property UCodePage: Integer readonly dispid 235;
    property UDescription: WideString readonly dispid 236;
    property UMajorProtocolVersion: Integer readonly dispid 237;
    property UMajorType: Integer readonly dispid 238;
    property UMinorProtocolVersion: Integer readonly dispid 239;
    property UMinorType: Integer readonly dispid 240;
    property UModel: Integer readonly dispid 241;
    property UseJournalRibbon: WordBool dispid 242;
    property UseReceiptRibbon: WordBool dispid 243;
    property UseSlipDocument: WordBool dispid 244;
    property ValueOfFieldInteger: Integer dispid 245;
    property ValueOfFieldString: WideString dispid 246;
    function PrintStringWithFont: Integer; dispid 169;
    property FontType: Integer dispid 247;
    property LDBaudrate: Integer dispid 248;
    property LDComNumber: Integer dispid 249;
    property LDCount: Integer readonly dispid 250;
    property LDIndex: Integer dispid 251;
    property LDName: WideString dispid 252;
    property LDNumber: Integer dispid 253;
    property WaitPrintingTime: Integer readonly dispid 254;
    property IsPrinterLeftSensorFailure: WordBool readonly dispid 255;
    property IsPrinterRightSensorFailure: WordBool readonly dispid 256;
    function EKLZActivizationResult: Integer; dispid 257;
    function EKLZActivization: Integer; dispid 258;
    function CloseEKLZArchive: Integer; dispid 259;
    function GetEKLZSerialNumber: Integer; dispid 260;
    property EKLZNumber: WideString readonly dispid 261;
    function EKLZInterrupt: Integer; dispid 262;
    function GetEKLZCode1Report: Integer; dispid 263;
    property LastKPKDocumentResult: Currency readonly dispid 264;
    property LastKPKDate: TDateTime readonly dispid 265;
    property LastKPKTime: TDateTime readonly dispid 266;
    property LastKPKNumber: Integer readonly dispid 267;
    property EKLZFlags: Integer readonly dispid 268;
    function GetEKLZCode2Report: Integer; dispid 269;
    function TestEKLZArchiveIntegrity: Integer; dispid 270;
    property TestNumber: Integer dispid 271;
    property EKLZVersion: WideString readonly dispid 272;
    property EKLZData: WideString readonly dispid 273;
    function GetEKLZVersion: Integer; dispid 274;
    function InitEKLZArchive: Integer; dispid 275;
    function GetEKLZData: Integer; dispid 276;
    function GetEKLZJournal: Integer; dispid 277;
    function GetEKLZDocument: Integer; dispid 278;
    function GetEKLZDepartmentReportInDatesRange: Integer; dispid 279;
    function GetEKLZDepartmentReportInSessionsRange: Integer; dispid 280;
    function GetEKLZSessionReportInDatesRange: Integer; dispid 281;
    function GetEKLZSessionReportInSessionsRange: Integer; dispid 282;
    function GetEKLZSessionTotal: Integer; dispid 283;
    function GetEKLZActivizationResult: Integer; dispid 284;
    function SetEKLZResultCode: Integer; dispid 285;
    property EKLZResultCode: Integer dispid 286;
    property FMResultCode: Integer readonly dispid 287;
    property PowerSourceVoltage: Double readonly dispid 288;
    property IsEKLZOverflow: WordBool readonly dispid 289;
    function OpenFiscalSlipDocument: Integer; dispid 291;
    function OpenStandardFiscalSlipDocument: Integer; dispid 292;
    function RegistrationOnSlipDocument: Integer; dispid 293;
    function StandardRegistrationOnSlipDocument: Integer; dispid 294;
    function ChargeOnSlipDocument: Integer; dispid 295;
    function StandardChargeOnSlipDocument: Integer; dispid 296;
    function CloseCheckOnSlipDocument: Integer; dispid 297;
    function StandardCloseCheckOnSlipDocument: Integer; dispid 298;
    function ConfigureSlipDocument: Integer; dispid 299;
    function ConfigureStandardSlipDocument: Integer; dispid 300;
    function FillSlipDocumentWithUnfiscalInfo: Integer; dispid 301;
    function ClearSlipDocumentBufferString: Integer; dispid 302;
    function ClearSlipDocumentBuffer: Integer; dispid 303;
    function PrintSlipDocument: Integer; dispid 304;
    property CopyType: Integer dispid 305;
    property NumberOfCopies: Integer dispid 307;
    property CopyOffset1: Integer dispid 308;
    property CopyOffset2: Integer dispid 309;
    property CopyOffset3: Integer dispid 310;
    property CopyOffset4: Integer dispid 311;
    property CopyOffset5: Integer dispid 312;
    property ClicheFont: Integer dispid 313;
    property HeaderFont: Integer dispid 314;
    property EKLZFont: Integer dispid 315;
    property ClicheStringNumber: Integer dispid 316;
    property HeaderStringNumber: Integer dispid 317;
    property EKLZStringNumber: Integer dispid 318;
    property FMStringNumber: Integer dispid 319;
    property ClicheOffset: Integer dispid 320;
    property HeaderOffset: Integer dispid 321;
    property EKLZOffset: Integer dispid 322;
    property KPKOffset: Integer dispid 323;
    property FMOffset: Integer dispid 324;
    property OperationBlockFirstString: Integer dispid 325;
    property QuantityFormat: Integer dispid 326;
    property StringQuantityInOperation: Integer dispid 327;
    property TextStringNumber: Integer dispid 328;
    property QuantityStringNumber: Integer dispid 329;
    property SummStringNumber: Integer dispid 330;
    property DepartmentStringNumber: Integer dispid 331;
    property TextFont: Integer dispid 332;
    property QuantityFont: Integer dispid 333;
    property MultiplicationFont: Integer dispid 334;
    property PriceFont: Integer dispid 335;
    property SummFont: Integer dispid 336;
    property DepartmentFont: Integer dispid 337;
    property TextSymbolNumber: Integer dispid 338;
    property QuantitySymbolNumber: Integer dispid 339;
    property PriceSymbolNumber: Integer dispid 340;
    property SummSymbolNumber: Integer dispid 341;
    property DepartmentSymbolNumber: Integer dispid 342;
    property TextOffset: Integer dispid 343;
    property QuantityOffset: Integer dispid 344;
    property SummOffset: Integer dispid 345;
    property DepartmentOffset: Integer dispid 346;
    function DiscountOnSlipDocument: Integer; dispid 347;
    function StandardDiscountOnSlipDocument: Integer; dispid 348;
    property IsClearUnfiscalInfo: WordBool dispid 349;
    property InfoType: Integer dispid 350;
    property StringNumber: Integer dispid 11;
    function EjectSlipDocument: Integer; dispid 290;
    property EjectDirection: Integer dispid 306;
    function LoadLineDataEx: Integer; dispid 351;
    function DrawEx: Integer; dispid 352;
    function ConfigureGeneralSlipDocument: Integer; dispid 353;
    property OperationNameStringNumber: Integer dispid 355;
    property OperationNameFont: Integer dispid 356;
    property OperationNameOffset: Integer dispid 357;
    property TotalStringNumber: Integer dispid 358;
    property Summ1StringNumber: Integer dispid 359;
    property Summ2StringNumber: Integer dispid 360;
    property Summ3StringNumber: Integer dispid 361;
    property Summ4StringNumber: Integer dispid 362;
    property ChangeStringNumber: Integer dispid 363;
    property Tax1TurnOverStringNumber: Integer dispid 364;
    property Tax2TurnOverStringNumber: Integer dispid 365;
    property Tax3TurnOverStringNumber: Integer dispid 366;
    property Tax4TurnOverStringNumber: Integer dispid 367;
    property Tax1SumStringNumber: Integer dispid 368;
    property Tax2SumStringNumber: Integer dispid 369;
    property Tax3SumStringNumber: Integer dispid 370;
    property Tax4SumStringNumber: Integer dispid 371;
    property SubTotalStringNumber: Integer dispid 372;
    property DiscountOnCheckStringNumber: Integer dispid 373;
    property TotalFont: Integer dispid 374;
    property TotalSumFont: Integer dispid 375;
    property Summ1Font: Integer dispid 376;
    property Summ1NameFont: Integer dispid 377;
    property Summ2NameFont: Integer dispid 378;
    property Summ3NameFont: Integer dispid 379;
    property Summ4NameFont: Integer dispid 380;
    property Summ2Font: Integer dispid 381;
    property Summ3Font: Integer dispid 382;
    property Summ4Font: Integer dispid 383;
    property ChangeFont: Integer dispid 384;
    property ChangeSumFont: Integer dispid 385;
    property Tax1NameFont: Integer dispid 386;
    property Tax2NameFont: Integer dispid 387;
    property Tax3NameFont: Integer dispid 388;
    property Tax4NameFont: Integer dispid 389;
    property Tax1TurnOverFont: Integer dispid 390;
    property Tax2TurnOverFont: Integer dispid 391;
    property Tax3TurnOverFont: Integer dispid 392;
    property Tax4TurnOverFont: Integer dispid 393;
    property Tax1RateFont: Integer dispid 394;
    property Tax2RateFont: Integer dispid 395;
    property Tax3RateFont: Integer dispid 396;
    property Tax4RateFont: Integer dispid 397;
    property Tax1SumFont: Integer dispid 398;
    property Tax2SumFont: Integer dispid 399;
    property Tax3SumFont: Integer dispid 400;
    property Tax4SumFont: Integer dispid 401;
    property SubTotalFont: Integer dispid 402;
    property SubTotalSumFont: Integer dispid 403;
    property DiscountOnCheckFont: Integer dispid 404;
    property DiscountOnCheckSumFont: Integer dispid 405;
    property TotalSymbolNumber: Integer dispid 406;
    property Summ1SymbolNumber: Integer dispid 407;
    property Summ2SymbolNumber: Integer dispid 408;
    property Summ3SymbolNumber: Integer dispid 409;
    property Summ4SymbolNumber: Integer dispid 410;
    property ChangeSymbolNumber: Integer dispid 411;
    property Tax1NameSymbolNumber: Integer dispid 412;
    property Tax1TurnOverSymbolNumber: Integer dispid 413;
    property Tax1RateSymbolNumber: Integer dispid 414;
    property Tax1SumSymbolNumber: Integer dispid 415;
    property Tax2NameSymbolNumber: Integer dispid 416;
    property Tax2TurnOverSymbolNumber: Integer dispid 417;
    property Tax2RateSymbolNumber: Integer dispid 418;
    property Tax2SumSymbolNumber: Integer dispid 419;
    property Tax3NameSymbolNumber: Integer dispid 420;
    property Tax3TurnOverSymbolNumber: Integer dispid 421;
    property Tax3RateSymbolNumber: Integer dispid 422;
    property Tax3SumSymbolNumber: Integer dispid 423;
    property Tax4NameSymbolNumber: Integer dispid 424;
    property Tax4TurnOverSymbolNumber: Integer dispid 425;
    property Tax4RateSymbolNumber: Integer dispid 426;
    property Tax4SumSymbolNumber: Integer dispid 427;
    property SubTotalSymbolNumber: Integer dispid 428;
    property DiscountOnCheckSymbolNumber: Integer dispid 429;
    property DiscountOnCheckSumSymbolNumber: Integer dispid 430;
    property TotalOffset: Integer dispid 431;
    property Summ1Offset: Integer dispid 432;
    property TotalSumOffset: Integer dispid 433;
    property Summ1NameOffset: Integer dispid 434;
    property Summ2Offset: Integer dispid 435;
    property Summ2NameOffset: Integer dispid 436;
    property Summ3Offset: Integer dispid 437;
    property Summ3NameOffset: Integer dispid 438;
    property Summ4Offset: Integer dispid 439;
    property Summ4NameOffset: Integer dispid 440;
    property ChangeOffset: Integer dispid 441;
    property ChangeSumOffset: Integer dispid 442;
    property Tax1NameOffset: Integer dispid 443;
    property Tax1TurnOverOffset: Integer dispid 444;
    property Tax1RateOffset: Integer dispid 445;
    property Tax1SumOffset: Integer dispid 446;
    property Tax2NameOffset: Integer dispid 447;
    property Tax2TurnOverOffset: Integer dispid 448;
    property Tax2RateOffset: Integer dispid 449;
    property Tax2SumOffset: Integer dispid 450;
    property Tax3NameOffset: Integer dispid 451;
    property Tax3TurnOverOffset: Integer dispid 452;
    property Tax3RateOffset: Integer dispid 453;
    property Tax3SumOffset: Integer dispid 454;
    property Tax4NameOffset: Integer dispid 455;
    property Tax4TurnOverOffset: Integer dispid 456;
    property Tax4RateOffset: Integer dispid 457;
    property Tax4SumOffset: Integer dispid 458;
    property SubTotalOffset: Integer dispid 459;
    property SubTotalSumOffset: Integer dispid 460;
    property SlipDocumentWidth: Integer dispid 461;
    property SlipDocumentLength: Integer dispid 462;
    property PrintingAlignment: Integer dispid 463;
    property SlipStringIntervals: WideString dispid 464;
    property SlipEqualStringIntervals: Integer dispid 465;
    property KPKFont: Integer dispid 354;
    property DiscountOnCheckOffset: Integer dispid 466;
    property DiscountOnCheckSumOffset: Integer dispid 467;
    function WideLoadLineData: Integer; dispid 468;
    function PrintTaxReport: Integer; dispid 469;
    property QuantityPointPosition: WordBool readonly dispid 470;
    property FileVersionMS: LongWord readonly dispid 471;
    property FileVersionLS: LongWord readonly dispid 472;
    function GetLongSerialNumberAndLongRNM: Integer; dispid 473;
    function SetLongSerialNumber: Integer; dispid 474;
    function FiscalizationWithLongRNM: Integer; dispid 475;
    property IsBatteryLow: WordBool readonly dispid 476;
    property IsLastFMRecordCorrupted: WordBool readonly dispid 477;
    property IsFMSessionOpen: WordBool readonly dispid 478;
    property IsFM24HoursOver: WordBool readonly dispid 479;
    function Connect2: Integer; dispid 480;
    property ECRModeStatus: Integer readonly dispid 481;
    function GetECRPrinterStatus: Integer; dispid 482;
    property PrinterStatus: Integer readonly dispid 483;
  end;

// *********************************************************************//
// Interface: IDrvFR1C
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {241707F7-BF29-4858-8FF8-B2502344EBE5}
// *********************************************************************//
  IDrvFR1C = interface(IDispatch)
    ['{241707F7-BF29-4858-8FF8-B2502344EBE5}']
    function GetVersion: WideString; safecall;
    function GetLastError(out ErrorDescription: WideString): Integer; safecall;
    function Close(const DeviceID: WideString): WordBool; safecall;
    function PrintXReport(const DeviceID: WideString): WordBool; safecall;
    function PrintZReport(const DeviceID: WideString): WordBool; safecall;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; safecall;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool; safecall;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Single): WordBool; safecall;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double): WordBool; safecall;
    function CancelCheck(const DeviceID: WideString): WordBool; safecall;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool; safecall;
    function DeviceTest(const ValuesArray: IDispatch; out AdditionalDescription: WideString): WordBool; safecall;
    function Open(const ValuesArray: IDispatch; out DeviceID: WideString): WordBool; safecall;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool; safecall;
    function ContinuePrinting(const DeviceID: WideString): WordBool; safecall;
    function OpenCashDrawer(const DeviceID: WideString; CashDrawerID: Integer): WordBool; safecall;
    function LoadLogo(const ValuesArray: IDispatch; const LogoFileName: WideString; 
                      CenterLogo: WordBool; out LogoSize: Integer; 
                      out AdditionalDescription: WideString): WordBool; safecall;
    function OpenSession(const DeviceID: WideString): WordBool; safecall;
    function DeviceControl(const DeviceID: WideString; const TxData: WideString; 
                           out RxData: WideString): WordBool; safecall;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool; safecall;
    function Get_DiscountOnCheck: Double; safecall;
    procedure Set_DiscountOnCheck(Value: Double); safecall;
    function Get_PayType4: Double; safecall;
    procedure Set_PayType4(Value: Double); safecall;
    property DiscountOnCheck: Double read Get_DiscountOnCheck write Set_DiscountOnCheck;
    property PayType4: Double read Get_PayType4 write Set_PayType4;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR1CDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {241707F7-BF29-4858-8FF8-B2502344EBE5}
// *********************************************************************//
  IDrvFR1CDisp = dispinterface
    ['{241707F7-BF29-4858-8FF8-B2502344EBE5}']
    function GetVersion: WideString; dispid 201;
    function GetLastError(out ErrorDescription: WideString): Integer; dispid 202;
    function Close(const DeviceID: WideString): WordBool; dispid 204;
    function PrintXReport(const DeviceID: WideString): WordBool; dispid 205;
    function PrintZReport(const DeviceID: WideString): WordBool; dispid 206;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; dispid 207;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool; dispid 208;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Single): WordBool; dispid 209;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double): WordBool; dispid 210;
    function CancelCheck(const DeviceID: WideString): WordBool; dispid 211;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool; dispid 212;
    function DeviceTest(const ValuesArray: IDispatch; out AdditionalDescription: WideString): WordBool; dispid 213;
    function Open(const ValuesArray: IDispatch; out DeviceID: WideString): WordBool; dispid 203;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool; dispid 214;
    function ContinuePrinting(const DeviceID: WideString): WordBool; dispid 215;
    function OpenCashDrawer(const DeviceID: WideString; CashDrawerID: Integer): WordBool; dispid 216;
    function LoadLogo(const ValuesArray: IDispatch; const LogoFileName: WideString; 
                      CenterLogo: WordBool; out LogoSize: Integer; 
                      out AdditionalDescription: WideString): WordBool; dispid 217;
    function OpenSession(const DeviceID: WideString): WordBool; dispid 218;
    function DeviceControl(const DeviceID: WideString; const TxData: WideString; 
                           out RxData: WideString): WordBool; dispid 219;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool; dispid 220;
    property DiscountOnCheck: Double dispid 221;
    property PayType4: Double dispid 222;
  end;

// *********************************************************************//
// Interface: IDrvFR1C11
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9941F158-93F5-4DA2-A333-BB4937B58E05}
// *********************************************************************//
  IDrvFR1C11 = interface(IDispatch)
    ['{9941F158-93F5-4DA2-A333-BB4937B58E05}']
    function GetVersion: WideString; safecall;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out GetDownloadURL: WideString): WordBool; safecall;
    function GetLastError(out ErrorDescription: WideString): Integer; safecall;
    function GetParameters(out TableParameters: WideString): WordBool; safecall;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; safecall;
    function Open(out DeviceID: WideString): WordBool; safecall;
    function Close(const DeviceID: WideString): WordBool; safecall;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; safecall;
    function GetAdditionalActions(out TableActions: WideString): WordBool; safecall;
    function DoAdditionalAction(const ActionName: WideString): WordBool; safecall;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool; safecall;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Double): WordBool; safecall;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool; safecall;
    function PrintBarCode(const DeviceID: WideString; const BarcodeType: WideString; 
                          const BarCode: WideString): WordBool; safecall;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double; PayByCertificate: Double): WordBool; safecall;
    function CancelCheck(const DeviceID: WideString): WordBool; safecall;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; safecall;
    function PrintXReport(const DeviceID: WideString): WordBool; safecall;
    function PrintZReport(const DeviceID: WideString): WordBool; safecall;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; safecall;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; safecall;
    procedure SetLang(LangID: Integer); safecall;
    function OpenShift(const DeviceID: WideString): WordBool; safecall;
    function PrintFiscalString2(const DeviceID: WideString; const Name: WideString; 
                                Quantity: Double; Price: Double; Amount: Double; 
                                Department: Integer; Tax1: Integer; Tax2: Integer; Tax3: Integer; 
                                Tax4: Integer): WordBool; safecall;
    function ContinuePrinting(const DeviceID: WideString): WordBool; safecall;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool; safecall;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR1C11Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9941F158-93F5-4DA2-A333-BB4937B58E05}
// *********************************************************************//
  IDrvFR1C11Disp = dispinterface
    ['{9941F158-93F5-4DA2-A333-BB4937B58E05}']
    function GetVersion: WideString; dispid 201;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out GetDownloadURL: WideString): WordBool; dispid 202;
    function GetLastError(out ErrorDescription: WideString): Integer; dispid 203;
    function GetParameters(out TableParameters: WideString): WordBool; dispid 204;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; dispid 205;
    function Open(out DeviceID: WideString): WordBool; dispid 206;
    function Close(const DeviceID: WideString): WordBool; dispid 207;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; dispid 208;
    function GetAdditionalActions(out TableActions: WideString): WordBool; dispid 209;
    function DoAdditionalAction(const ActionName: WideString): WordBool; dispid 210;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool; dispid 211;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Double): WordBool; dispid 212;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool; dispid 213;
    function PrintBarCode(const DeviceID: WideString; const BarcodeType: WideString; 
                          const BarCode: WideString): WordBool; dispid 214;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double; PayByCertificate: Double): WordBool; dispid 215;
    function CancelCheck(const DeviceID: WideString): WordBool; dispid 216;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; dispid 217;
    function PrintXReport(const DeviceID: WideString): WordBool; dispid 218;
    function PrintZReport(const DeviceID: WideString): WordBool; dispid 219;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; dispid 220;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; dispid 221;
    procedure SetLang(LangID: Integer); dispid 222;
    function OpenShift(const DeviceID: WideString): WordBool; dispid 223;
    function PrintFiscalString2(const DeviceID: WideString; const Name: WideString; 
                                Quantity: Double; Price: Double; Amount: Double; 
                                Department: Integer; Tax1: Integer; Tax2: Integer; Tax3: Integer; 
                                Tax4: Integer): WordBool; dispid 224;
    function ContinuePrinting(const DeviceID: WideString): WordBool; dispid 225;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool; dispid 226;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool; dispid 227;
  end;

// *********************************************************************//
// Interface: IDrvFR1C17
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {135578E8-34E8-440C-AFEC-993C33CC9153}
// *********************************************************************//
  IDrvFR1C17 = interface(IDispatch)
    ['{135578E8-34E8-440C-AFEC-993C33CC9153}']
    function GetVersion: WideString; safecall;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool; safecall;
    function GetLastError(out ErrorDescription: WideString): Integer; safecall;
    function GetParameters(out TableParameters: WideString): WordBool; safecall;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; safecall;
    function Open(out DeviceID: WideString): WordBool; safecall;
    function Close(const DeviceID: WideString): WordBool; safecall;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; safecall;
    function GetAdditionalActions(out TableActions: WideString): WordBool; safecall;
    function DoAdditionalAction(const ActionName: WideString): WordBool; safecall;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; safecall;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const CashierName: WideString; const ParametersFiscal: WideString): WordBool; safecall;
    function OpenShift(const DeviceID: WideString; const CashierName: WideString; 
                       out SessionNumber: Integer; out DocumentNumber: Integer): WordBool; safecall;
    function CloseShift(const DeviceID: WideString; const CashierName: WideString; 
                        out SessionNumber: Integer; out DocumentNumber: Integer): WordBool; safecall;
    function ProcessCheck(const DeviceID: WideString; const CashierName: WideString; 
                          Electronically: WordBool; const CheckPackage: WideString; 
                          out CheckNumber: Integer; out SessionNumber: Integer; 
                          out FiscalSign: WideString; out AddressSiteInspections: WideString): WordBool; safecall;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CashierName: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool; safecall;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; safecall;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool; safecall;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString): WordBool; safecall;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; safecall;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; safecall;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; safecall;
    procedure SetLang(LangID: Integer); safecall;
    function PrintXReport(const DeviceID: WideString): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR1C17Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {135578E8-34E8-440C-AFEC-993C33CC9153}
// *********************************************************************//
  IDrvFR1C17Disp = dispinterface
    ['{135578E8-34E8-440C-AFEC-993C33CC9153}']
    function GetVersion: WideString; dispid 201;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool; dispid 202;
    function GetLastError(out ErrorDescription: WideString): Integer; dispid 203;
    function GetParameters(out TableParameters: WideString): WordBool; dispid 204;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; dispid 205;
    function Open(out DeviceID: WideString): WordBool; dispid 206;
    function Close(const DeviceID: WideString): WordBool; dispid 207;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; dispid 208;
    function GetAdditionalActions(out TableActions: WideString): WordBool; dispid 209;
    function DoAdditionalAction(const ActionName: WideString): WordBool; dispid 210;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; dispid 211;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const CashierName: WideString; const ParametersFiscal: WideString): WordBool; dispid 212;
    function OpenShift(const DeviceID: WideString; const CashierName: WideString; 
                       out SessionNumber: Integer; out DocumentNumber: Integer): WordBool; dispid 213;
    function CloseShift(const DeviceID: WideString; const CashierName: WideString; 
                        out SessionNumber: Integer; out DocumentNumber: Integer): WordBool; dispid 214;
    function ProcessCheck(const DeviceID: WideString; const CashierName: WideString; 
                          Electronically: WordBool; const CheckPackage: WideString; 
                          out CheckNumber: Integer; out SessionNumber: Integer; 
                          out FiscalSign: WideString; out AddressSiteInspections: WideString): WordBool; dispid 215;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CashierName: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool; dispid 216;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool; dispid 217;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool; dispid 218;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString): WordBool; dispid 219;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; dispid 220;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; dispid 221;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; dispid 222;
    procedure SetLang(LangID: Integer); dispid 223;
    function PrintXReport(const DeviceID: WideString): WordBool; dispid 224;
  end;

// *********************************************************************//
// Interface: IDrvFR1C22
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFD84A0D-EFCF-4805-B8CF-125F2996576A}
// *********************************************************************//
  IDrvFR1C22 = interface(IDispatch)
    ['{DFD84A0D-EFCF-4805-B8CF-125F2996576A}']
    function GetVersion: WideString; safecall;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool; safecall;
    function GetLastError(out ErrorDescription: WideString): Integer; safecall;
    function GetParameters(out TableParameters: WideString): WordBool; safecall;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; safecall;
    function Open(out DeviceID: WideString): WordBool; safecall;
    function Close(const DeviceID: WideString): WordBool; safecall;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; safecall;
    function GetAdditionalActions(out TableActions: WideString): WordBool; safecall;
    function DoAdditionalAction(const ActionName: WideString): WordBool; safecall;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; safecall;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool; safecall;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString; out SessionNumber: Integer; 
                       out DocumentNumber: Integer): WordBool; safecall;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString; out SessionNumber: Integer; 
                        out DocumentNumber: Integer): WordBool; safecall;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out CheckNumber: Integer; 
                          out SessionNumber: Integer; out FiscalSign: WideString; 
                          out AddressSiteInspections: WideString): WordBool; safecall;
    function ProcessCorrectionCheck(const DeviceID: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool; safecall;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; safecall;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool; safecall;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool; safecall;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool; safecall;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool; safecall;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; safecall;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; safecall;
    procedure SetLang(LangID: Integer); safecall;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR1C22Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFD84A0D-EFCF-4805-B8CF-125F2996576A}
// *********************************************************************//
  IDrvFR1C22Disp = dispinterface
    ['{DFD84A0D-EFCF-4805-B8CF-125F2996576A}']
    function GetVersion: WideString; dispid 201;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool; dispid 202;
    function GetLastError(out ErrorDescription: WideString): Integer; dispid 203;
    function GetParameters(out TableParameters: WideString): WordBool; dispid 204;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; dispid 205;
    function Open(out DeviceID: WideString): WordBool; dispid 206;
    function Close(const DeviceID: WideString): WordBool; dispid 207;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; dispid 208;
    function GetAdditionalActions(out TableActions: WideString): WordBool; dispid 209;
    function DoAdditionalAction(const ActionName: WideString): WordBool; dispid 210;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; dispid 211;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool; dispid 212;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString; out SessionNumber: Integer; 
                       out DocumentNumber: Integer): WordBool; dispid 213;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString; out SessionNumber: Integer; 
                        out DocumentNumber: Integer): WordBool; dispid 214;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out CheckNumber: Integer; 
                          out SessionNumber: Integer; out FiscalSign: WideString; 
                          out AddressSiteInspections: WideString): WordBool; dispid 215;
    function ProcessCorrectionCheck(const DeviceID: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool; dispid 216;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; dispid 217;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool; dispid 218;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool; dispid 219;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool; dispid 220;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool; dispid 221;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; dispid 222;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; dispid 223;
    procedure SetLang(LangID: Integer); dispid 224;
  end;

// *********************************************************************//
// Interface: IDrvFR1C30
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E390D34B-02C3-46C8-803C-DB8131AC5331}
// *********************************************************************//
  IDrvFR1C30 = interface(IDispatch)
    ['{E390D34B-02C3-46C8-803C-DB8131AC5331}']
    function GetInterfaceRevision: Integer; safecall;
    function GetDescription(out DriverDescription: WideString): WordBool; safecall;
    function GetLastError(out ErrorDescription: WideString): Integer; safecall;
    function GetParameters(out TableParameters: WideString): WordBool; safecall;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; safecall;
    function Open(out DeviceID: WideString): WordBool; safecall;
    function Close(const DeviceID: WideString): WordBool; safecall;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; safecall;
    function GetAdditionalActions(out TableActions: WideString): WordBool; safecall;
    function DoAdditionalAction(const ActionName: WideString): WordBool; safecall;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; safecall;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool; safecall;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString): WordBool; safecall;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString): WordBool; safecall;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out DocumentOutputParameters: WideString): WordBool; safecall;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CheckPackage: WideString; 
                                    out DocumentOutputParameters: WideString): WordBool; safecall;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool; safecall;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool; safecall;
    function GetCurrentStatus(const DeviceID: WideString; const InputParameters: WideString; 
                              out OutputParameters: WideString): WordBool; safecall;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool; safecall;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; safecall;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; safecall;
    function PrintCheckCopy(const DeviceID: WideString; const CheckNumber: WideString): WordBool; safecall;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; safecall;
    function Get_sm_FormatVersion: Integer; safecall;
    procedure Set_sm_FormatVersion(Value: Integer); safecall;
    function OpenSessionRegistrationKM(const DeviceID: WideString): WordBool; safecall;
    function CloseSessionRegistrationKM(const DeviceID: WideString): WordBool; safecall;
    function RequestKM(const DeviceID: WideString; const RequestKM: WideString; 
                       out RequestKMResult: WideString): WordBool; safecall;
    function GetProcessingKMResult(const DeviceID: WideString; out ProcessingKMResult: WideString; 
                                   out RequestStatus: Integer): WordBool; safecall;
    function ConfirmKM(const DeviceID: WideString; const RequestGUID: WideString; 
                       ConfirmationType: Integer): WordBool; safecall;
    property sm_FormatVersion: Integer read Get_sm_FormatVersion write Set_sm_FormatVersion;
  end;

// *********************************************************************//
// DispIntf:  IDrvFR1C30Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E390D34B-02C3-46C8-803C-DB8131AC5331}
// *********************************************************************//
  IDrvFR1C30Disp = dispinterface
    ['{E390D34B-02C3-46C8-803C-DB8131AC5331}']
    function GetInterfaceRevision: Integer; dispid 201;
    function GetDescription(out DriverDescription: WideString): WordBool; dispid 202;
    function GetLastError(out ErrorDescription: WideString): Integer; dispid 203;
    function GetParameters(out TableParameters: WideString): WordBool; dispid 204;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool; dispid 205;
    function Open(out DeviceID: WideString): WordBool; dispid 206;
    function Close(const DeviceID: WideString): WordBool; dispid 207;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool; dispid 208;
    function GetAdditionalActions(out TableActions: WideString): WordBool; dispid 209;
    function DoAdditionalAction(const ActionName: WideString): WordBool; dispid 210;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool; dispid 211;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool; dispid 212;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString): WordBool; dispid 213;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString): WordBool; dispid 214;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out DocumentOutputParameters: WideString): WordBool; dispid 215;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CheckPackage: WideString; 
                                    out DocumentOutputParameters: WideString): WordBool; dispid 216;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool; dispid 218;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool; dispid 219;
    function GetCurrentStatus(const DeviceID: WideString; const InputParameters: WideString; 
                              out OutputParameters: WideString): WordBool; dispid 220;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool; dispid 221;
    function OpenCashDrawer(const DeviceID: WideString): WordBool; dispid 222;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool; dispid 223;
    function PrintCheckCopy(const DeviceID: WideString; const CheckNumber: WideString): WordBool; dispid 224;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool; dispid 225;
    property sm_FormatVersion: Integer dispid 217;
    function OpenSessionRegistrationKM(const DeviceID: WideString): WordBool; dispid 226;
    function CloseSessionRegistrationKM(const DeviceID: WideString): WordBool; dispid 227;
    function RequestKM(const DeviceID: WideString; const RequestKM: WideString; 
                       out RequestKMResult: WideString): WordBool; dispid 228;
    function GetProcessingKMResult(const DeviceID: WideString; out ProcessingKMResult: WideString; 
                                   out RequestStatus: Integer): WordBool; dispid 229;
    function ConfirmKM(const DeviceID: WideString; const RequestGUID: WideString; 
                       ConfirmationType: Integer): WordBool; dispid 230;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR1C
// Help String      : Драйвер ФР 1С
// Default Interface: IDrvFR1C
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
  TDrvFR1C = class(TOleControl)
  private
    FIntf: IDrvFR1C;
    function  GetControlInterface: IDrvFR1C;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
  public
    function GetVersion: WideString;
    function GetLastError(out ErrorDescription: WideString): Integer;
    function Close(const DeviceID: WideString): WordBool;
    function PrintXReport(const DeviceID: WideString): WordBool;
    function PrintZReport(const DeviceID: WideString): WordBool;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Single): WordBool;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double): WordBool;
    function CancelCheck(const DeviceID: WideString): WordBool;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool;
    function DeviceTest(const ValuesArray: IDispatch; out AdditionalDescription: WideString): WordBool;
    function Open(const ValuesArray: IDispatch; out DeviceID: WideString): WordBool;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool;
    function ContinuePrinting(const DeviceID: WideString): WordBool;
    function OpenCashDrawer(const DeviceID: WideString; CashDrawerID: Integer): WordBool;
    function LoadLogo(const ValuesArray: IDispatch; const LogoFileName: WideString; 
                      CenterLogo: WordBool; out LogoSize: Integer; 
                      out AdditionalDescription: WideString): WordBool;
    function OpenSession(const DeviceID: WideString): WordBool;
    function DeviceControl(const DeviceID: WideString; const TxData: WideString; 
                           out RxData: WideString): WordBool;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool;
    property  ControlInterface: IDrvFR1C read GetControlInterface;
    property  DefaultInterface: IDrvFR1C read GetControlInterface;
  published
    property Anchors;
    property DiscountOnCheck: Double index 221 read GetDoubleProp write SetDoubleProp stored False;
    property PayType4: Double index 222 read GetDoubleProp write SetDoubleProp stored False;
  end;

// *********************************************************************//
// The Class CoDrvFR3 provides a Create and CreateRemote method to          
// create instances of the default interface IDrvFR11 exposed by              
// the CoClass DrvFR3. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDrvFR3 = class
    class function Create: IDrvFR11;
    class function CreateRemote(const MachineName: string): IDrvFR11;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR1C11
// Help String      : DrvFR1C11 Object
// Default Interface: IDrvFR1C11
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
  TDrvFR1C11 = class(TOleControl)
  private
    FIntf: IDrvFR1C11;
    function  GetControlInterface: IDrvFR1C11;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
  public
    function GetVersion: WideString;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out GetDownloadURL: WideString): WordBool;
    function GetLastError(out ErrorDescription: WideString): Integer;
    function GetParameters(out TableParameters: WideString): WordBool;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool;
    function Open(out DeviceID: WideString): WordBool;
    function Close(const DeviceID: WideString): WordBool;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
    function GetAdditionalActions(out TableActions: WideString): WordBool;
    function DoAdditionalAction(const ActionName: WideString): WordBool;
    function OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                       IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                       out CheckNumber: Integer; out SessionNumber: Integer): WordBool;
    function PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                               Quantity: Double; Price: Double; Amount: Double; 
                               Department: Integer; Tax: Double): WordBool;
    function PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool;
    function PrintBarCode(const DeviceID: WideString; const BarcodeType: WideString; 
                          const BarCode: WideString): WordBool;
    function CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                        PayByCredit: Double; PayByCertificate: Double): WordBool;
    function CancelCheck(const DeviceID: WideString): WordBool;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
    function PrintXReport(const DeviceID: WideString): WordBool;
    function PrintZReport(const DeviceID: WideString): WordBool;
    function OpenCashDrawer(const DeviceID: WideString): WordBool;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
    procedure SetLang(LangID: Integer);
    function OpenShift(const DeviceID: WideString): WordBool;
    function PrintFiscalString2(const DeviceID: WideString; const Name: WideString; 
                                Quantity: Double; Price: Double; Amount: Double; 
                                Department: Integer; Tax1: Integer; Tax2: Integer; Tax3: Integer; 
                                Tax4: Integer): WordBool;
    function ContinuePrinting(const DeviceID: WideString): WordBool;
    function CheckPrintingStatus(const DeviceID: WideString): WordBool;
    function DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                              out RxData: WideString): WordBool;
    property  ControlInterface: IDrvFR1C11 read GetControlInterface;
    property  DefaultInterface: IDrvFR1C11 read GetControlInterface;
  published
    property Anchors;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR1C17
// Help String      : DrvFR1C17 Control
// Default Interface: IDrvFR1C17
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
  TDrvFR1C17 = class(TOleControl)
  private
    FIntf: IDrvFR1C17;
    function  GetControlInterface: IDrvFR1C17;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
  public
    function GetVersion: WideString;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool;
    function GetLastError(out ErrorDescription: WideString): Integer;
    function GetParameters(out TableParameters: WideString): WordBool;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool;
    function Open(out DeviceID: WideString): WordBool;
    function Close(const DeviceID: WideString): WordBool;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
    function GetAdditionalActions(out TableActions: WideString): WordBool;
    function DoAdditionalAction(const ActionName: WideString): WordBool;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const CashierName: WideString; const ParametersFiscal: WideString): WordBool;
    function OpenShift(const DeviceID: WideString; const CashierName: WideString; 
                       out SessionNumber: Integer; out DocumentNumber: Integer): WordBool;
    function CloseShift(const DeviceID: WideString; const CashierName: WideString; 
                        out SessionNumber: Integer; out DocumentNumber: Integer): WordBool;
    function ProcessCheck(const DeviceID: WideString; const CashierName: WideString; 
                          Electronically: WordBool; const CheckPackage: WideString; 
                          out CheckNumber: Integer; out SessionNumber: Integer; 
                          out FiscalSign: WideString; out AddressSiteInspections: WideString): WordBool;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CashierName: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool;
    function CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString): WordBool;
    function OpenCashDrawer(const DeviceID: WideString): WordBool;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
    procedure SetLang(LangID: Integer);
    function PrintXReport(const DeviceID: WideString): WordBool;
    property  ControlInterface: IDrvFR1C17 read GetControlInterface;
    property  DefaultInterface: IDrvFR1C17 read GetControlInterface;
  published
    property Anchors;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR1C22
// Help String      : DrvFR1C22 Object
// Default Interface: IDrvFR1C22
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
  TDrvFR1C22 = class(TOleControl)
  private
    FIntf: IDrvFR1C22;
    function  GetControlInterface: IDrvFR1C22;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
  public
    function GetVersion: WideString;
    function GetDescription(out Name: WideString; out Description: WideString; 
                            out EquipmentType: WideString; out InterfaceRevision: Integer; 
                            out IntegrationLibrary: WordBool; out MainDriverInstalled: WordBool; 
                            out DownloadURL: WideString): WordBool;
    function GetLastError(out ErrorDescription: WideString): Integer;
    function GetParameters(out TableParameters: WideString): WordBool;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool;
    function Open(out DeviceID: WideString): WordBool;
    function Close(const DeviceID: WideString): WordBool;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
    function GetAdditionalActions(out TableActions: WideString): WordBool;
    function DoAdditionalAction(const ActionName: WideString): WordBool;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString; out SessionNumber: Integer; 
                       out DocumentNumber: Integer): WordBool;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString; out SessionNumber: Integer; 
                        out DocumentNumber: Integer): WordBool;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out CheckNumber: Integer; 
                          out SessionNumber: Integer; out FiscalSign: WideString; 
                          out AddressSiteInspections: WideString): WordBool;
    function ProcessCorrectionCheck(const DeviceID: WideString; 
                                    const CheckCorrectionPackage: WideString; 
                                    out CheckNumber: Integer; out SessionNumber: Integer; 
                                    out FiscalSign: WideString; 
                                    out AddressSiteInspections: WideString): WordBool;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool;
    function GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                              out SessionNumber: Integer; out SessionState: Integer; 
                              out StatusParameters: WideString): WordBool;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool;
    function OpenCashDrawer(const DeviceID: WideString): WordBool;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
    procedure SetLang(LangID: Integer);
    property  ControlInterface: IDrvFR1C22 read GetControlInterface;
    property  DefaultInterface: IDrvFR1C22 read GetControlInterface;
  published
    property Anchors;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR1C30
// Help String      : 
// Default Interface: IDrvFR1C30
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//
  TDrvFR1C30 = class(TOleControl)
  private
    FIntf: IDrvFR1C30;
    function  GetControlInterface: IDrvFR1C30;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
  public
    function GetInterfaceRevision: Integer;
    function GetDescription(out DriverDescription: WideString): WordBool;
    function GetLastError(out ErrorDescription: WideString): Integer;
    function GetParameters(out TableParameters: WideString): WordBool;
    function SetParameter(const Name: WideString; Value: OleVariant): WordBool;
    function Open(out DeviceID: WideString): WordBool;
    function Close(const DeviceID: WideString): WordBool;
    function DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
    function GetAdditionalActions(out TableActions: WideString): WordBool;
    function DoAdditionalAction(const ActionName: WideString): WordBool;
    function GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
    function OperationFN(const DeviceID: WideString; OperationType: Integer; 
                         const ParametersFiscal: WideString): WordBool;
    function OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                       out OutputParameters: WideString): WordBool;
    function CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                        out OutputParameters: WideString): WordBool;
    function ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                          const CheckPackage: WideString; out DocumentOutputParameters: WideString): WordBool;
    function ProcessCorrectionCheck(const DeviceID: WideString; const CheckPackage: WideString; 
                                    out DocumentOutputParameters: WideString): WordBool;
    function CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                           Amount: Double): WordBool;
    function PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool;
    function GetCurrentStatus(const DeviceID: WideString; const InputParameters: WideString; 
                              out OutputParameters: WideString): WordBool;
    function ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                              const InputParameters: WideString; 
                                              out OutputParameters: WideString): WordBool;
    function OpenCashDrawer(const DeviceID: WideString): WordBool;
    function GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
    function PrintCheckCopy(const DeviceID: WideString; const CheckNumber: WideString): WordBool;
    function PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
    function OpenSessionRegistrationKM(const DeviceID: WideString): WordBool;
    function CloseSessionRegistrationKM(const DeviceID: WideString): WordBool;
    function RequestKM(const DeviceID: WideString; const RequestKM: WideString; 
                       out RequestKMResult: WideString): WordBool;
    function GetProcessingKMResult(const DeviceID: WideString; out ProcessingKMResult: WideString; 
                                   out RequestStatus: Integer): WordBool;
    function ConfirmKM(const DeviceID: WideString; const RequestGUID: WideString; 
                       ConfirmationType: Integer): WordBool;
    property  ControlInterface: IDrvFR1C30 read GetControlInterface;
    property  DefaultInterface: IDrvFR1C30 read GetControlInterface;
  published
    property Anchors;
    property sm_FormatVersion: Integer index 217 read GetIntegerProp write SetIntegerProp stored False;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TDrvFR
// Help String      : Драйвер ФР
// Default Interface: IDrvFR49
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//
  TDrvFR = class(TOleControl)
  private
    FIntf: IDrvFR49;
    function  GetControlInterface: IDrvFR49;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
    function Get_ModelParamValue: OleVariant;
  public
    function AddLD: Integer;
    function Beep: Integer;
    function Buy: Integer;
    function BuyEx: Integer;
    function CancelCheck: Integer;
    function CashIncome: Integer;
    function CashOutcome: Integer;
    function Charge: Integer;
    function CheckSubTotal: Integer;
    function CloseCheck: Integer;
    function ConfirmDate: Integer;
    function Connect: Integer;
    function ContinuePrint: Integer;
    function Correction: Integer;
    function CutCheck: Integer;
    function DampRequest: Integer;
    function DeleteLD: Integer;
    function Disconnect: Integer;
    function Discount: Integer;
    function DozeOilCheck: Integer;
    function Draw: Integer;
    function EKLZDepartmentReportInDatesRange: Integer;
    function EKLZDepartmentReportInSessionsRange: Integer;
    function EKLZJournalOnSessionNumber: Integer;
    function EKLZSessionReportInDatesRange: Integer;
    function EKLZSessionReportInSessionsRange: Integer;
    function ExchangeBytes: Integer;
    function FeedDocument: Integer;
    function Fiscalization: Integer;
    function FiscalReportForDatesRange: Integer;
    function FiscalReportForSessionRange: Integer;
    function GetActiveLD: Integer;
    function EnumLD: Integer;
    function GetCashReg: Integer;
    function GetCountLD: Integer;
    function GetData: Integer;
    function GetDeviceMetrics: Integer;
    function GetECRStatus: Integer;
    function GetShortECRStatus: Integer;
    function GetExchangeParam: Integer;
    function GetFieldStruct: Integer;
    function GetFiscalizationParameters: Integer;
    function GetFMRecordsSum: Integer;
    function GetLastFMRecordDate: Integer;
    function GetLiterSumCounter: Integer;
    function GetOperationReg: Integer;
    function GetParamLD: Integer;
    function GetRangeDatesAndSessions: Integer;
    function GetRKStatus: Integer;
    function GetTableStruct: Integer;
    function InitFM: Integer;
    function InitTable: Integer;
    function InterruptDataStream: Integer;
    function InterruptFullReport: Integer;
    function InterruptTest: Integer;
    function LaunchRK: Integer;
    function LoadLineData: Integer;
    function OilSale: Integer;
    function OpenCheck: Integer;
    function OpenDrawer: Integer;
    function PrintBarCode: Integer;
    function PrintDepartmentReport: Integer;
    function PrintDocumentTitle: Integer;
    function PrintOperationReg: Integer;
    function PrintReportWithCleaning: Integer;
    function PrintReportWithoutCleaning: Integer;
    function PrintString: Integer;
    function PrintWideString: Integer;
    function ReadEKLZDocumentOnKPK: Integer;
    function ReadEKLZSessionTotal: Integer;
    function ReadLicense: Integer;
    function ReadTable: Integer;
    function RepeatDocument: Integer;
    function ResetAllTRK: Integer;
    function ResetRK: Integer;
    function ResetSettings: Integer;
    function ResetSummary: Integer;
    function ReturnBuy: Integer;
    function ReturnBuyEx: Integer;
    function ReturnSale: Integer;
    function ReturnSaleEx: Integer;
    function Sale: Integer;
    function SaleEx: Integer;
    function SetActiveLD: Integer;
    function SetDate: Integer;
    function SetDozeInMilliliters: Integer;
    function SetDozeInMoney: Integer;
    function SetExchangeParam: Integer;
    function SetParamLD: Integer;
    function SetPointPosition: Integer;
    function SetRKParameters: Integer;
    function SetSerialNumber: Integer;
    function SetTime: Integer;
    function ShowProperties: Integer;
    function StopEKLZDocumentPrinting: Integer;
    function StopRK: Integer;
    function Storno: Integer;
    function StornoEx: Integer;
    function StornoCharge: Integer;
    function StornoDiscount: Integer;
    function SummOilCheck: Integer;
    function SysAdminCancelCheck: Integer;
    function Test: Integer;
    function WriteLicense: Integer;
    function WriteTable: Integer;
    function PrintStringWithFont: Integer;
    function EKLZActivizationResult: Integer;
    function EKLZActivization: Integer;
    function CloseEKLZArchive: Integer;
    function GetEKLZSerialNumber: Integer;
    function EKLZInterrupt: Integer;
    function GetEKLZCode1Report: Integer;
    function GetEKLZCode2Report: Integer;
    function TestEKLZArchiveIntegrity: Integer;
    function GetEKLZVersion: Integer;
    function InitEKLZArchive: Integer;
    function GetEKLZData: Integer;
    function GetEKLZJournal: Integer;
    function GetEKLZDocument: Integer;
    function GetEKLZDepartmentReportInDatesRange: Integer;
    function GetEKLZDepartmentReportInSessionsRange: Integer;
    function GetEKLZSessionReportInDatesRange: Integer;
    function GetEKLZSessionReportInSessionsRange: Integer;
    function GetEKLZSessionTotal: Integer;
    function GetEKLZActivizationResult: Integer;
    function SetEKLZResultCode: Integer;
    function OpenFiscalSlipDocument: Integer;
    function OpenStandardFiscalSlipDocument: Integer;
    function RegistrationOnSlipDocument: Integer;
    function StandardRegistrationOnSlipDocument: Integer;
    function ChargeOnSlipDocument: Integer;
    function StandardChargeOnSlipDocument: Integer;
    function CloseCheckOnSlipDocument: Integer;
    function StandardCloseCheckOnSlipDocument: Integer;
    function ConfigureSlipDocument: Integer;
    function ConfigureStandardSlipDocument: Integer;
    function FillSlipDocumentWithUnfiscalInfo: Integer;
    function ClearSlipDocumentBufferString: Integer;
    function ClearSlipDocumentBuffer: Integer;
    function PrintSlipDocument: Integer;
    function DiscountOnSlipDocument: Integer;
    function StandardDiscountOnSlipDocument: Integer;
    function EjectSlipDocument: Integer;
    function LoadLineDataEx: Integer;
    function DrawEx: Integer;
    function ConfigureGeneralSlipDocument: Integer;
    function WideLoadLineData: Integer;
    function PrintTaxReport: Integer;
    function GetLongSerialNumberAndLongRNM: Integer;
    function SetLongSerialNumber: Integer;
    function FiscalizationWithLongRNM: Integer;
    function Connect2: Integer;
    function GetECRPrinterStatus: Integer;
    function ServerConnect: Integer;
    function ServerDisconnect: Integer;
    function LockPort: Integer;
    function UnlockPort: Integer;
    function AdminUnlockPort: Integer;
    function AdminUnlockPorts: Integer;
    function ServerCheckKey: Integer;
    function GetFontMetrics: Integer;
    function GetFreeLDNumber: Integer;
    procedure SetIsString(Value: WordBool);
    procedure SetFieldSize(Value: Integer);
    function ReadTable2: Integer;
    function WriteTable2: Integer;
    procedure SetFieldMinValue(Value: Integer);
    procedure SetFieldMaxValue(Value: Integer);
    function CashControlOpen: Integer;
    function CashControlClose: Integer;
    function SaveParams: Integer;
    function GetEKLZCode1Status: Integer;
    function GetEKLZCode2Status: Integer;
    function ReadWriteFM: Integer;
    function PrintHeader: Integer;
    function CloseCheckWithResult: Integer;
    function AboutBox: Integer;
    function PresenterKeep: Integer;
    function PresenterPush: Integer;
    function OpenScreen: Integer;
    function CloseScreen: Integer;
    function SetSCPassword: Integer;
    function MethodSupported: WordBool;
    function PropertySupported: WordBool;
    function LockPortTimeout: Integer;
    function GetIBMStatus: Integer;
    function GetShortIBMStatus: Integer;
    function GetCommandParams: Integer;
    function SetCommandParams: Integer;
    function SaveCommandParams: Integer;
    function SetAllCommandsParams: Integer;
    function SetDefCommandsParams: Integer;
    function GetInterval: Integer;
    function OpenSession: Integer;
    function ReprintSlipDocument: Integer;
    function SetInterval: Integer;
    function ShowPayParams: Integer;
    function ShowTablesDlg: Integer;
    function WaitForPrinting: Integer;
    function OutputReceipt: Integer;
    function Sale2: Integer;
    function CardPayProperties: Integer;
    function PrintCliche: Integer;
    function PrintLine: Integer;
    function PrintBarcodeLine: Integer;
    function PrintBarcodeGraph: Integer;
    function ResetECR: Integer;
    function PrintZReportInBuffer: Integer;
    function PrintZReportFromBuffer: Integer;
    function ClearPrintBuffer: Integer;
    function JournalClear: Integer;
    function JournalGetRow: Integer;
    function JournalInit: Integer;
    function ReadPrintBufferLine: Integer;
    function ReadPrintBufferLineNumber: Integer;
    function FindDevice: Integer;
    function LoadParams: Integer;
    function FinishDocument: Integer;
    function PrintTrailer: Integer;
    function WaitForCheckClose: Integer;
    function GetSummFactor: Integer;
    function GetQuantityFactor: Integer;
    function ReadDeviceMetrics: Integer;
    function ReadEcrStatus: Integer;
    function SaveState: Integer;
    function RestoreState: Integer;
    function GetPortNames: WideString;
    function LoadImage: Integer;
    function OpenNonfiscalDocument: Integer;
    function CloseNonFiscalDocument: Integer;
    function PrintAttribute: Integer;
    function ReadModelParamValue: Integer;
    function LoadCashControlParams: Integer;
    function GetCashAcceptorStatus: Integer;
    function GetCashAcceptorRegisters: Integer;
    function CashAcceptorReport: Integer;
    function ReadBanknoteCount: Integer;
    function PrintOperationalTaxReport: Integer;
    function WaitConnection: Integer;
    function ReadModelParamDescription: Integer;
    function PrintBarcodeUsingPrinter: Integer;
    function CloseCheckWithKPK: Integer;
    function ReadEKLZActivizationParams: Integer;
    function GetShortReportInSessionRange: Integer;
    function GetShortReportInDatesRange: Integer;
    function ClearResult: Integer;
    function ReadLastReceipt: Integer;
    function ReadLastReceiptLine: Integer;
    function ReadLastReceiptMac: Integer;
    function MasterPayClearBuffer: Integer;
    function MasterPayAddTextBlock: Integer;
    function MasterPayCreateMac: Integer;
    function BeginDocument: Integer;
    function EndDocument: Integer;
    function LoadBlockData: Integer;
    function Print2DBarcode: Integer;
    function LoadAndPrint2DBarcode: Integer;
    function ExcisableOperation: Integer;
    function ReadReportBufferLine: Integer;
    function ReadParams: Integer;
    function GetEKLZCode3Report: Integer;
    function ReadModemParameter: Integer;
    function WriteModemParameter: Integer;
    function GetCashRegEx: Integer;
    function GetWareBaseCashRegs: Integer;
    function PrintCashierReport: Integer;
    function PrintHourlyReport: Integer;
    function PrintWareReport: Integer;
    function UpdateWare: Integer;
    function ReadWare: Integer;
    function RemoveWare: Integer;
    function CheckFM: Integer;
    function ReadErrorDescription: Integer;
    function ReadModelParam: Integer;
    function InitEEPROM: Integer;
    function CheckConnection: Integer;
    function ChangeProtocol: Integer;
    function GetECRParams: Integer;
    function JournalOperation: Integer;
    function GetMFPCode3Status: Integer;
    function MFPPrepareActivization: Integer;
    function MFPGetPermitActivizationCode: Integer;
    function MFPActivization: Integer;
    function MFPGetPrepareActivizationResult: Integer;
    function MFPGetCustomerCode: Integer;
    function MFPCloseArchive: Integer;
    function MFPSetCustomerCode: Integer;
    function MFPSetPermitActivizationCode: Integer;
    function CloseCheckEx: Integer;
    function ClearReportBuffer: Integer;
    function ShowAdditionalParams: Integer;
    function GetCloudCashdeskParams: Integer;
    function DrawScale: Integer;
    function PrintGraphics512: Integer;
    function LoadGraphics512: Integer;
    function FNGetStatus: Integer;
    function FNGetSerial: Integer;
    function FNGetExpirationTime: Integer;
    function FNGetVersion: Integer;
    function FNBeginFiscalization: Integer;
    function FNFiscalization: Integer;
    function FNResetState: Integer;
    function FNCancelDocument: Integer;
    function FNGetFiscalizationResult: Integer;
    function FNFindDocument: Integer;
    function FNOpenSession: Integer;
    function FNSendTLV: Integer;
    function FNDiscountOperation: Integer;
    function FNStorno: Integer;
    function FNBeginRegistrationReport: Integer;
    function FNBuildRegistrationReport: Integer;
    function FNBeginCorrectionReceipt: Integer;
    function FNBuildCorrectionReceipt: Integer;
    function FNBeginCalculationStateReport: Integer;
    function FNBuildCalculationStateReport: Integer;
    function FNCloseSession: Integer;
    function FNGetInfoExchangeStatus: Integer;
    function FNRequestFiscalDocumentTLV: Integer;
    function FNReadFiscalDocumentTLV: Integer;
    function FNGetOFDTicketByDocNumber: Integer;
    function FNBeginCloseFiscalMode: Integer;
    function FNCloseFiscalMode: Integer;
    function FNGetUnconfirmedDocCount: Integer;
    function FNGetCurrentSessionParams: Integer;
    function FNBeginOpenSession: Integer;
    function FNBeginCloseSession: Integer;
    function FNBuildReregistrationReport: Integer;
    function FNDiscountTaxOperation: Integer;
    function FNCloseCheckEx: Integer;
    function FNSendCustomerEmail: Integer;
    function Annulment: Integer;
    function FNDiscountChargeRN: Integer;
    function ImportTables: Integer;
    function ExportTables: Integer;
    function FNSendTag: Integer;
    function ReadSerialNumber: Integer;
    function FNPrintOperatorConfirm: Integer;
    function FNGetFiscalizationResultByNumber: Integer;
    function AnnulmentRB: Integer;
    function FNGetTagDescription: Integer;
    function FNPrintDocument: Integer;
    function FNGetDocumentAsString: Integer;
    function Ping: Integer;
    function FNOperation: Integer;
    function FNSendTLVOperation: Integer;
    function FNBuildCorrectionReceipt2: Integer;
    function FNGetNonClearableSumm: Integer;
    function ResetSerialNumber: Integer;
    function DBFindDocument: Integer;
    function DBPrintDocument: Integer;
    function ReadKKTLicenses: Integer;
    function GetKKTLicenseByNumber: Integer;
    function CloseCheckBel: Integer;
    function WriteKKTLicense: Integer;
    function FNSendSenderEmail: Integer;
    function DBQueryDocumentsInSession: Integer;
    function DBGetNextDocument: Integer;
    function DBPrintNextDocument: Integer;
    function OnlinePay: Integer;
    function OPGetLastStatus: Integer;
    function OPGetLastRequisite: Integer;
    function GenerateMonoToken: Integer;
    function RebootKKT: Integer;
    function FNSendTagOperation: Integer;
    function FNBeginSTLVTag: Integer;
    function FNAddTag: Integer;
    function FNSendSTLVTagOperation: Integer;
    function FNSendSTLVTag: Integer;
    function LoadFontSymbol: Integer;
    function LoadFont: Integer;
    function LoadBlockOnSDCard: Integer;
    function LoadFileOnSDCard: Integer;
    function PrintStringWithWrap: Integer;
    function FNSendItemCodeData: Integer;
    function FNCheckItemBarcode: Integer;
    function FNRequestRegistrationTLV: Integer;
    function ReadLoaderVersion: Integer;
    function FNOpenCheckCorrection: Integer;
    function FNCountersSync: Integer;
    function FNGetFreeMemoryResource: Integer;
    function UpdateFirmware: Integer;
    function SetDFUMode: Integer;
    function CancelFirmwareUpdate: Integer;
    function WriteRNMTj: Integer;
    function ReadRNMTj: Integer;
    function FNGetNonClearableSummEx: Integer;
    function WriteAuthKey: Integer;
    function RewriteAuthKey: Integer;
    function ResetAuthKey: Integer;
    function SaveAuthKey: Integer;
    function DeleteAuthKey: Integer;
    function FNBindMarkingItem: Integer;
    function FNGetKMServerExchangeStatus: Integer;
    function FNAcceptMakringCode: Integer;
    function FNDeclineMarkingCode: Integer;
    function ReadFeatureLicenses: Integer;
    function WriteFeatureLicenses: Integer;
    function PluginsUpdateSettings: Integer;
    function FNSendUserAttribute: Integer;
    function FNSendItemBarcode: Integer;
    function FNBeginReadArchive: Integer;
    function FNReadArchiveItem: Integer;
    function FNSaveArchive: Integer;
    function FNOperationMdlp: Integer;
    function FNCloseCheckMdlp: Integer;
    function FNGetMarkingCodeWorkStatus: Integer;
    function GetTagAsTLV: Integer;
    function FNBeginReadNotifications: Integer;
    function FNReadNotificationBlock: Integer;
    function FNConfirmNotificationRead: Integer;
    function FNAcceptMarkingCode: Integer;
    function FNReadFiscalBarcode: Integer;
    function FNMarkingClearBuffer: Integer;
    function FNCheckItemBarcode2: Integer;
    function PlainTransferEnable: Integer;
    function PlainTransferDisable: Integer;
    function ReadFontHash: Integer;
    function ResetFont: Integer;
    property  ControlInterface: IDrvFR49 read GetControlInterface;
    property  DefaultInterface: IDrvFR49 read GetControlInterface;
    property BatteryCondition: WordBool index 108 read GetWordBoolProp;
    property BatteryVoltage: Double index 109 read GetDoubleProp;
    property Change: Currency index 111 read GetCurrencyProp;
    property ContentsOfCashRegister: Currency index 115 read GetCurrencyProp;
    property ContentsOfOperationRegister: Integer index 116 read GetIntegerProp;
    property DataBlock: WideString index 120 read GetWideStringProp;
    property DataBlockNumber: Integer index 121 read GetIntegerProp;
    property DeviceCodeDescription: WideString index 125 read GetWideStringProp;
    property ECRAdvancedMode: Integer index 132 read GetIntegerProp;
    property ECRAdvancedModeDescription: WideString index 133 read GetWideStringProp;
    property ECRBuild: Integer index 134 read GetIntegerProp;
    property ECRFlags: Integer index 135 read GetIntegerProp;
    property ECRInput: WideString index 136 read GetWideStringProp;
    property ECRMode: Integer index 137 read GetIntegerProp;
    property ECRMode8Status: Integer index 138 read GetIntegerProp;
    property ECRModeDescription: WideString index 139 read GetWideStringProp;
    property ECROutput: WideString index 140 read GetWideStringProp;
    property ECRSoftDate: TDateTime index 141 read GetTDateTimeProp;
    property ECRSoftVersion: WideString index 142 read GetWideStringProp;
    property EKLZIsPresent: WordBool index 143 read GetWordBoolProp;
    property EmergencyStopCode: Integer index 144 read GetIntegerProp;
    property EmergencyStopCodeDescription: WideString index 145 read GetWideStringProp;
    property FieldName: WideString index 146 read GetWideStringProp;
    property FieldSize: Integer index 148 read GetIntegerProp;
    property FieldType: WordBool index 149 read GetWordBoolProp;
    property FM1IsPresent: WordBool index 153 read GetWordBoolProp;
    property FM2IsPresent: WordBool index 154 read GetWordBoolProp;
    property FMBuild: Integer index 155 read GetIntegerProp;
    property FMFlags: Integer index 156 read GetIntegerProp;
    property FMOverflow: WordBool index 157 read GetWordBoolProp;
    property FMSoftDate: TDateTime index 158 read GetTDateTimeProp;
    property FMSoftVersion: WideString index 159 read GetWideStringProp;
    property FreeRecordInFM: Integer index 160 read GetIntegerProp;
    property FreeRegistration: Integer index 161 read GetIntegerProp;
    property IsCheckClosed: WordBool index 163 read GetWordBoolProp;
    property IsCheckMadeOut: WordBool index 164 read GetWordBoolProp;
    property IsDrawerOpen: WordBool index 165 read GetWordBoolProp;
    property JournalRibbonIsPresent: WordBool index 166 read GetWordBoolProp;
    property JournalRibbonLever: WordBool index 167 read GetWordBoolProp;
    property JournalRibbonOpticalSensor: WordBool index 168 read GetWordBoolProp;
    property LicenseIsPresent: WordBool index 175 read GetWordBoolProp;
    property LidPositionSensor: WordBool index 176 read GetWordBoolProp;
    property LogicalNumber: Integer index 179 read GetIntegerProp;
    property MAXValueOfField: Integer index 180 read GetIntegerProp;
    property MINValueOfField: Integer index 181 read GetIntegerProp;
    property Motor: WordBool index 182 read GetWordBoolProp;
    property NameCashReg: WideString index 183 read GetWideStringProp;
    property NameOperationReg: WideString index 184 read GetWideStringProp;
    property OpenDocumentNumber: Integer index 186 read GetIntegerProp;
    property OperatorNumber: Integer index 187 read GetIntegerProp;
    property Pistol: WordBool index 189 read GetWordBoolProp;
    property QuantityOfOperations: Integer index 194 read GetIntegerProp;
    property ReceiptRibbonIsPresent: WordBool index 195 read GetWordBoolProp;
    property ReceiptRibbonLever: WordBool index 196 read GetWordBoolProp;
    property ReceiptRibbonOpticalSensor: WordBool index 197 read GetWordBoolProp;
    property ResultCode: Integer index 201 read GetIntegerProp;
    property ResultCodeDescription: WideString index 202 read GetWideStringProp;
    property RoughValve: WordBool index 205 read GetWordBoolProp;
    property SlipDocumentIsMoving: WordBool index 210 read GetWordBoolProp;
    property SlipDocumentIsPresent: WordBool index 211 read GetWordBoolProp;
    property SlowingValve: WordBool index 213 read GetWordBoolProp;
    property StatusRK: Integer index 214 read GetIntegerProp;
    property StatusRKDescription: WideString index 215 read GetWideStringProp;
    property TableName: WideString index 222 read GetWideStringProp;
    property TypeOfLastEntryFM: WordBool index 233 read GetWordBoolProp;
    property UCodePage: Integer index 235 read GetIntegerProp;
    property UDescription: WideString index 236 read GetWideStringProp;
    property UMajorProtocolVersion: Integer index 237 read GetIntegerProp;
    property UMajorType: Integer index 238 read GetIntegerProp;
    property UMinorProtocolVersion: Integer index 239 read GetIntegerProp;
    property UMinorType: Integer index 240 read GetIntegerProp;
    property UModel: Integer index 241 read GetIntegerProp;
    property LDCount: Integer index 250 read GetIntegerProp;
    property WaitPrintingTime: Integer index 254 read GetIntegerProp;
    property IsPrinterLeftSensorFailure: WordBool index 255 read GetWordBoolProp;
    property IsPrinterRightSensorFailure: WordBool index 256 read GetWordBoolProp;
    property EKLZNumber: WideString index 261 read GetWideStringProp;
    property LastKPKDocumentResult: Currency index 264 read GetCurrencyProp;
    property LastKPKDate: TDateTime index 265 read GetTDateTimeProp;
    property LastKPKTime: TDateTime index 266 read GetTDateTimeProp;
    property LastKPKNumber: Integer index 267 read GetIntegerProp;
    property EKLZFlags: Integer index 268 read GetIntegerProp;
    property EKLZVersion: WideString index 272 read GetWideStringProp;
    property EKLZData: WideString index 273 read GetWideStringProp;
    property FMResultCode: Integer index 287 read GetIntegerProp;
    property PowerSourceVoltage: Double index 288 read GetDoubleProp;
    property IsEKLZOverflow: WordBool index 289 read GetWordBoolProp;
    property QuantityPointPosition: WordBool index 470 read GetWordBoolProp;
    property FileVersionMS: Integer index 471 read GetIntegerProp;
    property FileVersionLS: Integer index 472 read GetIntegerProp;
    property IsBatteryLow: WordBool index 476 read GetWordBoolProp;
    property IsLastFMRecordCorrupted: WordBool index 477 read GetWordBoolProp;
    property IsFMSessionOpen: WordBool index 478 read GetWordBoolProp;
    property IsFM24HoursOver: WordBool index 479 read GetWordBoolProp;
    property ECRModeStatus: Integer index 481 read GetIntegerProp;
    property PrinterStatus: Integer index 483 read GetIntegerProp;
    property ServerVersion: WideString index 484 read GetWideStringProp;
    property ServerConnected: WordBool index 490 read GetWordBoolProp;
    property PortLocked: WordBool index 493 read GetWordBoolProp;
    property PrintWidth: Integer index 498 read GetIntegerProp;
    property CharWidth: Integer index 499 read GetIntegerProp;
    property CharHeight: Integer index 500 read GetIntegerProp;
    property FontCount: Integer index 502 read GetIntegerProp;
    property OperationCode: Integer index 538 read GetIntegerProp;
    property ReadByte: Integer index 543 read GetIntegerProp;
    property PresenterIn: WordBool index 547 read GetWordBoolProp;
    property PresenterOut: WordBool index 548 read GetWordBoolProp;
    property LastKPKDateStr: WideString index 556 read GetWideStringProp;
    property LastKPKTimeStr: WideString index 557 read GetWideStringProp;
    property IBMStatusByte1: Integer index 567 read GetIntegerProp;
    property IBMStatusByte2: Integer index 568 read GetIntegerProp;
    property IBMStatusByte3: Integer index 569 read GetIntegerProp;
    property IBMStatusByte4: Integer index 570 read GetIntegerProp;
    property IBMStatusByte5: Integer index 571 read GetIntegerProp;
    property IBMStatusByte6: Integer index 572 read GetIntegerProp;
    property IBMStatusByte7: Integer index 573 read GetIntegerProp;
    property IBMStatusByte8: Integer index 574 read GetIntegerProp;
    property IBMFlags: Integer index 575 read GetIntegerProp;
    property IBMDocumentNumber: Integer index 576 read GetIntegerProp;
    property IBMLastSaleReceiptNumber: Integer index 577 read GetIntegerProp;
    property IBMLastBuyReceiptNumber: Integer index 578 read GetIntegerProp;
    property IBMLastReturnSaleReceiptNumber: Integer index 579 read GetIntegerProp;
    property IBMLastReturnBuyReceiptNumber: Integer index 580 read GetIntegerProp;
    property IBMSessionDay: Integer index 581 read GetIntegerProp;
    property IBMSessionMonth: Integer index 583 read GetIntegerProp;
    property IBMSessionYear: Integer index 584 read GetIntegerProp;
    property IBMSessionHour: Integer index 585 read GetIntegerProp;
    property IBMSessionMin: Integer index 586 read GetIntegerProp;
    property IBMSessionSec: Integer index 587 read GetIntegerProp;
    property IBMSessionDateTime: TDateTime index 588 read GetTDateTimeProp;
    property CommandCount: Integer index 596 read GetIntegerProp;
    property CommandName: WideString index 601 read GetWideStringProp;
    property CommandDefTimeout: Integer index 602 read GetIntegerProp;
    property CommandCode: Integer index 603 read GetIntegerProp;
    property BarcodeTypes: WideString index 638 read GetWideStringProp;
    property BarcodeAlignments: WideString index 641 read GetWideStringProp;
    property CapGetShortECRStatus: WordBool index 643 read GetWordBoolProp;
    property JournalRow: WideString index 656 read GetWideStringProp;
    property JournalRowCount: Integer index 657 read GetIntegerProp;
    property JournalText: WideString index 659 read GetWideStringProp;
    property PrintBufferLineNumber: Integer index 662 read GetIntegerProp;
    property SerialNumberAsInteger: Integer index 674 read GetIntegerProp;
    property INNAsInteger: Integer index 673 read GetIntegerProp;
    property HasCashControlLicense: WordBool index 684 read GetWordBoolProp;
    property ModelParamValue: OleVariant index 1903 read GetOleVariantProp;
    property EnteredTaxPassword: Integer index 1908 read GetIntegerProp;
    property Poll1: Integer index 1912 read GetIntegerProp;
    property Poll2: Integer index 1913 read GetIntegerProp;
    property CashAcceptorPollingMode: Integer index 1914 read GetIntegerProp;
    property BanknoteCount: Integer index 1916 read GetIntegerProp;
    property CapOpenCheck: WordBool index 1922 read GetWordBoolProp;
    property PollDescription: WideString index 1923 read GetWideStringProp;
    property ModelParamDescription: WideString index 1927 read GetWideStringProp;
    property DriverMajorVersion: Integer index 1928 read GetIntegerProp;
    property DriverMinorVersion: Integer index 1929 read GetIntegerProp;
    property DriverRelease: Integer index 1930 read GetIntegerProp;
    property DriverBuild: Integer index 1931 read GetIntegerProp;
    property DriverVersion: WideString index 1932 read GetWideStringProp;
    property KPKStr: WideString index 1936 read GetWideStringProp;
    property CashControlProtocols: WideString index 1949 read GetWideStringProp;
    property TransmitStatus: Integer index 1978 read GetIntegerProp;
    property TransmitQueueSize: Integer index 1979 read GetIntegerProp;
    property TransmitSessionNumber: Integer index 1980 read GetIntegerProp;
    property TransmitDocumentNumber: Integer index 1981 read GetIntegerProp;
    property ModelNames: WideString index 1988 read GetWideStringProp;
    property ModelsCount: Integer index 1990 read GetIntegerProp;
    property FMFlagsEx: Integer index 1989 read GetIntegerProp;
    property FMMode: Integer index 1991 read GetIntegerProp;
    property IsASPDMode: WordBool index 1992 read GetWordBoolProp;
    property IsCorruptedFMRecords: WordBool index 1993 read GetWordBoolProp;
    property IsCorruptedFiscalizationInfo: WordBool index 1994 read GetWordBoolProp;
    property RegSaleRec: Currency index 1998 read GetCurrencyProp;
    property RegBuyRec: Currency index 1999 read GetCurrencyProp;
    property RegSaleReturnRec: Currency index 2000 read GetCurrencyProp;
    property RegBuyReturnRec: Currency index 2001 read GetCurrencyProp;
    property RegSaleSession: Currency index 2002 read GetCurrencyProp;
    property RegBuySession: Currency index 2003 read GetCurrencyProp;
    property RegSaleReturnSession: Currency index 2004 read GetCurrencyProp;
    property RegBuyReturnSession: Currency index 2005 read GetCurrencyProp;
    property RecordCount: Integer index 2015 read GetIntegerProp;
    property ErrorDescription: WideString index 2021 read GetWideStringProp;
    property UCodePageText: WideString index 2023 read GetWideStringProp;
    property ModelParamCount: Integer index 2028 read GetIntegerProp;
    property LastPrintResult: Integer index 2039 read GetIntegerProp;
    property TypeOfLastEntryFMEx: Integer index 2041 read GetIntegerProp;
    property NameCashRegEx: WideString index 2071 read GetWideStringProp;
    property LastFMRecordType: Integer index 2082 read GetIntegerProp;
    property IsBlockedByWrongTaxPassword: WordBool index 2083 read GetWordBoolProp;
    property FNLifeState: Integer index 2100 read GetIntegerProp;
    property FNDocumentData: Integer index 2102 read GetIntegerProp;
    property FNSessionState: Integer index 2103 read GetIntegerProp;
    property FNWarningFlags: Integer index 2104 read GetIntegerProp;
    property FNSoftVersion: WideString index 2105 read GetWideStringProp;
    property FNSoftType: Integer index 2111 read GetIntegerProp;
    property FiscalSignAsString: WideString index 2226 read GetWideStringProp;
    property Summ1AsString: WideString index 2246 read GetWideStringProp;
    property Summ2AsString: WideString index 2247 read GetWideStringProp;
    property Summ3AsString: WideString index 2248 read GetWideStringProp;
    property Summ4AsString: WideString index 2249 read GetWideStringProp;
    property LoaderVersion: WideString index 2291 read GetWideStringProp;
    property FN5YearResource: Integer index 2299 read GetIntegerProp;
    property FN30DayResource: Integer index 2300 read GetIntegerProp;
    property UpdateFirmwareStatus: Integer index 2304 read GetIntegerProp;
    property UpdateFirmwareStatusMessage: WideString index 2306 read GetWideStringProp;
  published
    property Anchors;
    property BarCode: WideString index 103 read GetWideStringProp write SetWideStringProp stored False;
    property BaudRate: Integer index 110 read GetIntegerProp write SetIntegerProp stored False;
    property CheckResult: Currency index 112 read GetCurrencyProp write SetCurrencyProp stored False;
    property CheckType: Integer index 113 read GetIntegerProp write SetIntegerProp stored False;
    property ComNumber: Integer index 114 read GetIntegerProp write SetIntegerProp stored False;
    property CurrentDozeInMilliliters: Integer index 117 read GetIntegerProp write SetIntegerProp stored False;
    property CurrentDozeInMoney: Currency index 118 read GetCurrencyProp write SetCurrencyProp stored False;
    property CutType: WordBool index 119 read GetWordBoolProp write SetWordBoolProp stored False;
    property Date: TDateTime index 122 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property Department: Integer index 123 read GetIntegerProp write SetIntegerProp stored False;
    property DeviceCode: Integer index 124 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheck: Double index 126 read GetDoubleProp write SetDoubleProp stored False;
    property DocumentName: WideString index 127 read GetWideStringProp write SetWideStringProp stored False;
    property DocumentNumber: Integer index 128 read GetIntegerProp write SetIntegerProp stored False;
    property DozeInMilliliters: Integer index 129 read GetIntegerProp write SetIntegerProp stored False;
    property DozeInMoney: Currency index 130 read GetCurrencyProp write SetCurrencyProp stored False;
    property DrawerNumber: Integer index 131 read GetIntegerProp write SetIntegerProp stored False;
    property FieldNumber: Integer index 147 read GetIntegerProp write SetIntegerProp stored False;
    property FirstLineNumber: Integer index 150 read GetIntegerProp write SetIntegerProp stored False;
    property FirstSessionDate: TDateTime index 151 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property FirstSessionNumber: Integer index 152 read GetIntegerProp write SetIntegerProp stored False;
    property INN: WideString index 162 read GetWideStringProp write SetWideStringProp stored False;
    property KPKNumber: Integer index 170 read GetIntegerProp write SetIntegerProp stored False;
    property LastLineNumber: Integer index 171 read GetIntegerProp write SetIntegerProp stored False;
    property LastSessionDate: TDateTime index 172 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property LastSessionNumber: Integer index 173 read GetIntegerProp write SetIntegerProp stored False;
    property License: WideString index 174 read GetWideStringProp write SetWideStringProp stored False;
    property LineData: WideString index 177 read GetWideStringProp write SetWideStringProp stored False;
    property LineNumber: Integer index 178 read GetIntegerProp write SetIntegerProp stored False;
    property NewPasswordTI: Integer index 185 read GetIntegerProp write SetIntegerProp stored False;
    property Password: Integer index 188 read GetIntegerProp write SetIntegerProp stored False;
    property PointPosition: WordBool index 190 read GetWordBoolProp write SetWordBoolProp stored False;
    property PortNumber: Integer index 191 read GetIntegerProp write SetIntegerProp stored False;
    property Price: Currency index 192 read GetCurrencyProp write SetCurrencyProp stored False;
    property Quantity: Double index 193 read GetDoubleProp write SetDoubleProp stored False;
    property RegisterNumber: Integer index 198 read GetIntegerProp write SetIntegerProp stored False;
    property RegistrationNumber: Integer index 199 read GetIntegerProp write SetIntegerProp stored False;
    property ReportType: WordBool index 200 read GetWordBoolProp write SetWordBoolProp stored False;
    property RKNumber: Integer index 203 read GetIntegerProp write SetIntegerProp stored False;
    property RNM: WideString index 204 read GetWideStringProp write SetWideStringProp stored False;
    property RowNumber: Integer index 206 read GetIntegerProp write SetIntegerProp stored False;
    property RunningPeriod: Integer index 207 read GetIntegerProp write SetIntegerProp stored False;
    property SerialNumber: WideString index 208 read GetWideStringProp write SetWideStringProp stored False;
    property SessionNumber: Integer index 209 read GetIntegerProp write SetIntegerProp stored False;
    property SlowingInMilliliters: Integer index 212 read GetIntegerProp write SetIntegerProp stored False;
    property StringForPrinting: WideString index 216 read GetWideStringProp write SetWideStringProp stored False;
    property StringQuantity: Integer index 217 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1: Currency index 218 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ2: Currency index 219 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ3: Currency index 220 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ4: Currency index 221 read GetCurrencyProp write SetCurrencyProp stored False;
    property TableNumber: Integer index 223 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1: Integer index 224 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2: Integer index 225 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3: Integer index 226 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4: Integer index 227 read GetIntegerProp write SetIntegerProp stored False;
    property Time: TDateTime index 228 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property Timeout: Integer index 229 read GetIntegerProp write SetIntegerProp stored False;
    property TimeStr: WideString index 230 read GetWideStringProp write SetWideStringProp stored False;
    property TransferBytes: WideString index 231 read GetWideStringProp write SetWideStringProp stored False;
    property TRKNumber: Integer index 232 read GetIntegerProp write SetIntegerProp stored False;
    property TypeOfSumOfEntriesFM: WordBool index 234 read GetWordBoolProp write SetWordBoolProp stored False;
    property UseJournalRibbon: WordBool index 242 read GetWordBoolProp write SetWordBoolProp stored False;
    property UseReceiptRibbon: WordBool index 243 read GetWordBoolProp write SetWordBoolProp stored False;
    property UseSlipDocument: WordBool index 244 read GetWordBoolProp write SetWordBoolProp stored False;
    property ValueOfFieldInteger: Integer index 245 read GetIntegerProp write SetIntegerProp stored False;
    property ValueOfFieldString: WideString index 246 read GetWideStringProp write SetWideStringProp stored False;
    property FontType: Integer index 247 read GetIntegerProp write SetIntegerProp stored False;
    property LDBaudrate: Integer index 248 read GetIntegerProp write SetIntegerProp stored False;
    property LDComNumber: Integer index 249 read GetIntegerProp write SetIntegerProp stored False;
    property LDIndex: Integer index 251 read GetIntegerProp write SetIntegerProp stored False;
    property LDName: WideString index 252 read GetWideStringProp write SetWideStringProp stored False;
    property LDNumber: Integer index 253 read GetIntegerProp write SetIntegerProp stored False;
    property TestNumber: Integer index 271 read GetIntegerProp write SetIntegerProp stored False;
    property EKLZResultCode: Integer index 286 read GetIntegerProp write SetIntegerProp stored False;
    property CopyType: Integer index 305 read GetIntegerProp write SetIntegerProp stored False;
    property NumberOfCopies: Integer index 307 read GetIntegerProp write SetIntegerProp stored False;
    property CopyOffset1: Integer index 308 read GetIntegerProp write SetIntegerProp stored False;
    property CopyOffset2: Integer index 309 read GetIntegerProp write SetIntegerProp stored False;
    property CopyOffset3: Integer index 310 read GetIntegerProp write SetIntegerProp stored False;
    property CopyOffset4: Integer index 311 read GetIntegerProp write SetIntegerProp stored False;
    property CopyOffset5: Integer index 312 read GetIntegerProp write SetIntegerProp stored False;
    property ClicheFont: Integer index 313 read GetIntegerProp write SetIntegerProp stored False;
    property HeaderFont: Integer index 314 read GetIntegerProp write SetIntegerProp stored False;
    property EKLZFont: Integer index 315 read GetIntegerProp write SetIntegerProp stored False;
    property ClicheStringNumber: Integer index 316 read GetIntegerProp write SetIntegerProp stored False;
    property HeaderStringNumber: Integer index 317 read GetIntegerProp write SetIntegerProp stored False;
    property EKLZStringNumber: Integer index 318 read GetIntegerProp write SetIntegerProp stored False;
    property FMStringNumber: Integer index 319 read GetIntegerProp write SetIntegerProp stored False;
    property ClicheOffset: Integer index 320 read GetIntegerProp write SetIntegerProp stored False;
    property HeaderOffset: Integer index 321 read GetIntegerProp write SetIntegerProp stored False;
    property EKLZOffset: Integer index 322 read GetIntegerProp write SetIntegerProp stored False;
    property KPKOffset: Integer index 323 read GetIntegerProp write SetIntegerProp stored False;
    property FMOffset: Integer index 324 read GetIntegerProp write SetIntegerProp stored False;
    property OperationBlockFirstString: Integer index 325 read GetIntegerProp write SetIntegerProp stored False;
    property QuantityFormat: Integer index 326 read GetIntegerProp write SetIntegerProp stored False;
    property StringQuantityInOperation: Integer index 327 read GetIntegerProp write SetIntegerProp stored False;
    property TextStringNumber: Integer index 328 read GetIntegerProp write SetIntegerProp stored False;
    property QuantityStringNumber: Integer index 329 read GetIntegerProp write SetIntegerProp stored False;
    property SummStringNumber: Integer index 330 read GetIntegerProp write SetIntegerProp stored False;
    property DepartmentStringNumber: Integer index 331 read GetIntegerProp write SetIntegerProp stored False;
    property TextFont: Integer index 332 read GetIntegerProp write SetIntegerProp stored False;
    property QuantityFont: Integer index 333 read GetIntegerProp write SetIntegerProp stored False;
    property MultiplicationFont: Integer index 334 read GetIntegerProp write SetIntegerProp stored False;
    property PriceFont: Integer index 335 read GetIntegerProp write SetIntegerProp stored False;
    property SummFont: Integer index 336 read GetIntegerProp write SetIntegerProp stored False;
    property DepartmentFont: Integer index 337 read GetIntegerProp write SetIntegerProp stored False;
    property TextSymbolNumber: Integer index 338 read GetIntegerProp write SetIntegerProp stored False;
    property QuantitySymbolNumber: Integer index 339 read GetIntegerProp write SetIntegerProp stored False;
    property PriceSymbolNumber: Integer index 340 read GetIntegerProp write SetIntegerProp stored False;
    property SummSymbolNumber: Integer index 341 read GetIntegerProp write SetIntegerProp stored False;
    property DepartmentSymbolNumber: Integer index 342 read GetIntegerProp write SetIntegerProp stored False;
    property TextOffset: Integer index 343 read GetIntegerProp write SetIntegerProp stored False;
    property QuantityOffset: Integer index 344 read GetIntegerProp write SetIntegerProp stored False;
    property SummOffset: Integer index 345 read GetIntegerProp write SetIntegerProp stored False;
    property DepartmentOffset: Integer index 346 read GetIntegerProp write SetIntegerProp stored False;
    property IsClearUnfiscalInfo: WordBool index 349 read GetWordBoolProp write SetWordBoolProp stored False;
    property InfoType: Integer index 350 read GetIntegerProp write SetIntegerProp stored False;
    property StringNumber: Integer index 11 read GetIntegerProp write SetIntegerProp stored False;
    property EjectDirection: Integer index 306 read GetIntegerProp write SetIntegerProp stored False;
    property OperationNameStringNumber: Integer index 355 read GetIntegerProp write SetIntegerProp stored False;
    property OperationNameFont: Integer index 356 read GetIntegerProp write SetIntegerProp stored False;
    property OperationNameOffset: Integer index 357 read GetIntegerProp write SetIntegerProp stored False;
    property TotalStringNumber: Integer index 358 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1StringNumber: Integer index 359 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2StringNumber: Integer index 360 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3StringNumber: Integer index 361 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4StringNumber: Integer index 362 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeStringNumber: Integer index 363 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1TurnOverStringNumber: Integer index 364 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2TurnOverStringNumber: Integer index 365 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3TurnOverStringNumber: Integer index 366 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4TurnOverStringNumber: Integer index 367 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1SumStringNumber: Integer index 368 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2SumStringNumber: Integer index 369 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3SumStringNumber: Integer index 370 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4SumStringNumber: Integer index 371 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalStringNumber: Integer index 372 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckStringNumber: Integer index 373 read GetIntegerProp write SetIntegerProp stored False;
    property TotalFont: Integer index 374 read GetIntegerProp write SetIntegerProp stored False;
    property TotalSumFont: Integer index 375 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1Font: Integer index 376 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1NameFont: Integer index 377 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2NameFont: Integer index 378 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3NameFont: Integer index 379 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4NameFont: Integer index 380 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2Font: Integer index 381 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3Font: Integer index 382 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4Font: Integer index 383 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeFont: Integer index 384 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeSumFont: Integer index 385 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1NameFont: Integer index 386 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2NameFont: Integer index 387 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3NameFont: Integer index 388 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4NameFont: Integer index 389 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1TurnOverFont: Integer index 390 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2TurnOverFont: Integer index 391 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3TurnOverFont: Integer index 392 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4TurnOverFont: Integer index 393 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1RateFont: Integer index 394 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2RateFont: Integer index 395 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3RateFont: Integer index 396 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4RateFont: Integer index 397 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1SumFont: Integer index 398 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2SumFont: Integer index 399 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3SumFont: Integer index 400 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4SumFont: Integer index 401 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalFont: Integer index 402 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalSumFont: Integer index 403 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckFont: Integer index 404 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckSumFont: Integer index 405 read GetIntegerProp write SetIntegerProp stored False;
    property TotalSymbolNumber: Integer index 406 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1SymbolNumber: Integer index 407 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2SymbolNumber: Integer index 408 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3SymbolNumber: Integer index 409 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4SymbolNumber: Integer index 410 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeSymbolNumber: Integer index 411 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1NameSymbolNumber: Integer index 412 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1TurnOverSymbolNumber: Integer index 413 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1RateSymbolNumber: Integer index 414 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1SumSymbolNumber: Integer index 415 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2NameSymbolNumber: Integer index 416 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2TurnOverSymbolNumber: Integer index 417 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2RateSymbolNumber: Integer index 418 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2SumSymbolNumber: Integer index 419 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3NameSymbolNumber: Integer index 420 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3TurnOverSymbolNumber: Integer index 421 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3RateSymbolNumber: Integer index 422 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3SumSymbolNumber: Integer index 423 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4NameSymbolNumber: Integer index 424 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4TurnOverSymbolNumber: Integer index 425 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4RateSymbolNumber: Integer index 426 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4SumSymbolNumber: Integer index 427 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalSymbolNumber: Integer index 428 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckSymbolNumber: Integer index 429 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckSumSymbolNumber: Integer index 430 read GetIntegerProp write SetIntegerProp stored False;
    property TotalOffset: Integer index 431 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1Offset: Integer index 432 read GetIntegerProp write SetIntegerProp stored False;
    property TotalSumOffset: Integer index 433 read GetIntegerProp write SetIntegerProp stored False;
    property Summ1NameOffset: Integer index 434 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2Offset: Integer index 435 read GetIntegerProp write SetIntegerProp stored False;
    property Summ2NameOffset: Integer index 436 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3Offset: Integer index 437 read GetIntegerProp write SetIntegerProp stored False;
    property Summ3NameOffset: Integer index 438 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4Offset: Integer index 439 read GetIntegerProp write SetIntegerProp stored False;
    property Summ4NameOffset: Integer index 440 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeOffset: Integer index 441 read GetIntegerProp write SetIntegerProp stored False;
    property ChangeSumOffset: Integer index 442 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1NameOffset: Integer index 443 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1TurnOverOffset: Integer index 444 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1RateOffset: Integer index 445 read GetIntegerProp write SetIntegerProp stored False;
    property Tax1SumOffset: Integer index 446 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2NameOffset: Integer index 447 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2TurnOverOffset: Integer index 448 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2RateOffset: Integer index 449 read GetIntegerProp write SetIntegerProp stored False;
    property Tax2SumOffset: Integer index 450 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3NameOffset: Integer index 451 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3TurnOverOffset: Integer index 452 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3RateOffset: Integer index 453 read GetIntegerProp write SetIntegerProp stored False;
    property Tax3SumOffset: Integer index 454 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4NameOffset: Integer index 455 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4TurnOverOffset: Integer index 456 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4RateOffset: Integer index 457 read GetIntegerProp write SetIntegerProp stored False;
    property Tax4SumOffset: Integer index 458 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalOffset: Integer index 459 read GetIntegerProp write SetIntegerProp stored False;
    property SubTotalSumOffset: Integer index 460 read GetIntegerProp write SetIntegerProp stored False;
    property SlipDocumentWidth: Integer index 461 read GetIntegerProp write SetIntegerProp stored False;
    property SlipDocumentLength: Integer index 462 read GetIntegerProp write SetIntegerProp stored False;
    property PrintingAlignment: Integer index 463 read GetIntegerProp write SetIntegerProp stored False;
    property SlipStringIntervals: WideString index 464 read GetWideStringProp write SetWideStringProp stored False;
    property SlipEqualStringIntervals: Integer index 465 read GetIntegerProp write SetIntegerProp stored False;
    property KPKFont: Integer index 354 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckOffset: Integer index 466 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountOnCheckSumOffset: Integer index 467 read GetIntegerProp write SetIntegerProp stored False;
    property LDComputerName: WideString index 485 read GetWideStringProp write SetWideStringProp stored False;
    property LDTimeout: Integer index 486 read GetIntegerProp write SetIntegerProp stored False;
    property ComputerName: WideString index 487 read GetWideStringProp write SetWideStringProp stored False;
    property LogOn: WordBool index 503 read GetWordBoolProp write SetWordBoolProp stored False;
    property CPLog: WordBool index 510 read GetWordBoolProp write SetWordBoolProp stored False;
    property CashControlHost: WideString index 515 read GetWideStringProp write SetWideStringProp stored False;
    property CashControlPort: WideString index 516 read GetWideStringProp write SetWideStringProp stored False;
    property CashControlEnabled: WordBool index 517 read GetWordBoolProp write SetWordBoolProp stored False;
    property CashControlUseTCP: WordBool index 518 read GetWordBoolProp write SetWordBoolProp stored False;
    property CashControlPassword: Integer index 519 read GetIntegerProp write SetIntegerProp stored False;
    property ConnectionType: Integer index 522 read GetIntegerProp write SetIntegerProp stored False;
    property LDConnectionType: Integer index 523 read GetIntegerProp write SetIntegerProp stored False;
    property TCPPort: Integer index 524 read GetIntegerProp write SetIntegerProp stored False;
    property LDTCPPort: Integer index 525 read GetIntegerProp write SetIntegerProp stored False;
    property IPAddress: WideString index 526 read GetWideStringProp write SetWideStringProp stored False;
    property LDIPAddress: WideString index 527 read GetWideStringProp write SetWideStringProp stored False;
    property UseIPAddress: WordBool index 528 read GetWordBoolProp write SetWordBoolProp stored False;
    property LDUseIPAddress: WordBool index 529 read GetWordBoolProp write SetWordBoolProp stored False;
    property CPLogFile: WideString index 511 read GetWideStringProp write SetWideStringProp stored False;
    property ComLogFile: WideString index 512 read GetWideStringProp write SetWideStringProp stored False;
    property LineData2: WideString index 513 read GetWideStringProp write SetWideStringProp stored False;
    property SysAdminPassword: Integer index 514 read GetIntegerProp write SetIntegerProp stored False;
    property RecoverError165: WordBool index 531 read GetWordBoolProp write SetWordBoolProp stored False;
    property MaxRecoverCount: Integer index 532 read GetIntegerProp write SetIntegerProp stored False;
    property AccType: Integer index 540 read GetIntegerProp write SetIntegerProp stored False;
    property Address: Integer index 541 read GetIntegerProp write SetIntegerProp stored False;
    property WrittenByte: Integer index 542 read GetIntegerProp write SetIntegerProp stored False;
    property TransferByte: WideString index 544 read GetWideStringProp write SetWideStringProp stored False;
    property OperationType: Integer index 546 read GetIntegerProp write SetIntegerProp stored False;
    property ComLogOnlyErrors: WordBool index 545 read GetWordBoolProp write SetWordBoolProp stored False;
    property SCPassword: Integer index 554 read GetIntegerProp write SetIntegerProp stored False;
    property NewSCPassword: Integer index 555 read GetIntegerProp write SetIntegerProp stored False;
    property MethodName: WideString index 559 read GetWideStringProp write SetWideStringProp stored False;
    property PropertyName: WideString index 560 read GetWideStringProp write SetWideStringProp stored False;
    property LockTimeout: Integer index 563 read GetIntegerProp write SetIntegerProp stored False;
    property SlipStringInterval: Integer index 564 read GetIntegerProp write SetIntegerProp stored False;
    property EscapeIP: WideString index 582 read GetWideStringProp write SetWideStringProp stored False;
    property EscapePort: Integer index 589 read GetIntegerProp write SetIntegerProp stored False;
    property LDEscapeIP: WideString index 590 read GetWideStringProp write SetWideStringProp stored False;
    property LDEscapePort: Integer index 591 read GetIntegerProp write SetIntegerProp stored False;
    property EscapeTimeout: Integer index 592 read GetIntegerProp write SetIntegerProp stored False;
    property LDEscapeTimeout: Integer index 593 read GetIntegerProp write SetIntegerProp stored False;
    property CommandTimeout: Integer index 594 read GetIntegerProp write SetIntegerProp stored False;
    property UseCommandTimeout: WordBool index 595 read GetWordBoolProp write SetWordBoolProp stored False;
    property CommandIndex: Integer index 597 read GetIntegerProp write SetIntegerProp stored False;
    property TimeoutsUsing: Integer index 605 read GetIntegerProp write SetIntegerProp stored False;
    property IntervalNumber: Integer index 614 read GetIntegerProp write SetIntegerProp stored False;
    property IntervalValue: Integer index 615 read GetIntegerProp write SetIntegerProp stored False;
    property MobilePayEnabled: WordBool index 616 read GetWordBoolProp write SetWordBoolProp stored False;
    property ParamsPageIndex: Integer index 617 read GetIntegerProp write SetIntegerProp stored False;
    property ParentWnd: Integer index 618 read GetIntegerProp write SetIntegerProp stored False;
    property PayDepartment: Integer index 619 read GetIntegerProp write SetIntegerProp stored False;
    property RealPayDepartment: Integer index 620 read GetIntegerProp write SetIntegerProp stored False;
    property SaleError: WordBool index 621 read GetWordBoolProp write SetWordBoolProp stored False;
    property ReceiptOutputType: Integer index 623 read GetIntegerProp write SetIntegerProp stored False;
    property CardPayEnabled: WordBool index 625 read GetWordBoolProp write SetWordBoolProp stored False;
    property CardPayType: Integer index 628 read GetIntegerProp write SetIntegerProp stored False;
    property ccUseTextAsWareName: WordBool index 627 read GetWordBoolProp write SetWordBoolProp stored False;
    property ccWareNameLineNumber: Integer index 629 read GetIntegerProp write SetIntegerProp stored False;
    property ccHeaderLineCount: Integer index 630 read GetIntegerProp write SetIntegerProp stored False;
    property ccProtocol: TOleEnum index 631 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property LogCommands: WordBool index 633 read GetWordBoolProp write SetWordBoolProp stored False;
    property LogMethods: WordBool index 634 read GetWordBoolProp write SetWordBoolProp stored False;
    property BarcodeType: Integer index 636 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeAlignment: TOleEnum index 640 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property BarWidth: Integer index 642 read GetIntegerProp write SetIntegerProp stored False;
    property WaitForPrintingDelay: Integer index 644 read GetIntegerProp write SetIntegerProp stored False;
    property LineSwapBytes: WordBool index 648 read GetWordBoolProp write SetWordBoolProp stored False;
    property JournalEnabled: WordBool index 655 read GetWordBoolProp write SetWordBoolProp stored False;
    property JournalRowNumber: Integer index 658 read GetIntegerProp write SetIntegerProp stored False;
    property LogFileMaxSize: Integer index 660 read GetIntegerProp write SetIntegerProp stored False;
    property PrintBufferFormat: Integer index 661 read GetIntegerProp write SetIntegerProp stored False;
    property NakCount: Integer index 665 read GetIntegerProp write SetIntegerProp stored False;
    property MaxCommandSendCount: Integer index 666 read GetIntegerProp write SetIntegerProp stored False;
    property MaxAnswerReadCount: Integer index 667 read GetIntegerProp write SetIntegerProp stored False;
    property MaxENQSendCount: Integer index 668 read GetIntegerProp write SetIntegerProp stored False;
    property FinishDocumentMode: TOleEnum index 671 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property LineDataHex: WideString index 672 read GetWideStringProp write SetWideStringProp stored False;
    property ECRDate: TDateTime index 675 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property ECRTime: TDateTime index 676 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property BufferingType: Integer index 685 read GetIntegerProp write SetIntegerProp stored False;
    property CommandRetryCount: Integer index 687 read GetIntegerProp write SetIntegerProp stored False;
    property FileName: WideString index 688 read GetWideStringProp write SetWideStringProp stored False;
    property CenterImage: WordBool index 690 read GetWordBoolProp write SetWordBoolProp stored False;
    property ShowProgress: WordBool index 691 read GetWordBoolProp write SetWordBoolProp stored False;
    property AttributeNumber: Integer index 695 read GetIntegerProp write SetIntegerProp stored False;
    property AttributeValue: WideString index 696 read GetWideStringProp write SetWideStringProp stored False;
    property ModelID: Integer index 1901 read GetIntegerProp write SetIntegerProp stored False;
    property ModelParamNumber: Integer index 1904 read GetIntegerProp write SetIntegerProp stored False;
    property Connected: WordBool index 1906 read GetWordBoolProp write SetWordBoolProp stored False;
    property PrintBarcodeText: Integer index 1907 read GetIntegerProp write SetIntegerProp stored False;
    property BanknoteType: Integer index 1915 read GetIntegerProp write SetIntegerProp stored False;
    property FeedAfterCut: WordBool index 1918 read GetWordBoolProp write SetWordBoolProp stored False;
    property FeedLineCount: Integer index 1919 read GetIntegerProp write SetIntegerProp stored False;
    property LDSysAdminPassword: Integer index 1920 read GetIntegerProp write SetIntegerProp stored False;
    property ConnectionTimeout: Integer index 1924 read GetIntegerProp write SetIntegerProp stored False;
    property HRIPosition: Integer index 1934 read GetIntegerProp write SetIntegerProp stored False;
    property TextBlockNumber: Integer index 1947 read GetIntegerProp write SetIntegerProp stored False;
    property TextBlock: WideString index 1948 read GetWideStringProp write SetWideStringProp stored False;
    property StatusCommand: TOleEnum index 1950 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property PosControlReceiptSeparator: WideString index 1953 read GetWideStringProp write SetWideStringProp stored False;
    property BlockType: Integer index 1955 read GetIntegerProp write SetIntegerProp stored False;
    property BlockNumber: Integer index 1956 read GetIntegerProp write SetIntegerProp stored False;
    property BlockDataHex: WideString index 1957 read GetWideStringProp write SetWideStringProp stored False;
    property BarcodeDataLength: Integer index 1959 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeParameter1: Integer index 1960 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeParameter2: Integer index 1961 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeParameter3: Integer index 1962 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeParameter4: Integer index 1963 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeParameter5: Integer index 1964 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeStartBlockNumber: Integer index 1965 read GetIntegerProp write SetIntegerProp stored False;
    property ExciseCode: Integer index 1967 read GetIntegerProp write SetIntegerProp stored False;
    property LogMaxFileSize: Integer index 1970 read GetIntegerProp write SetIntegerProp stored False;
    property LogMaxFileCount: Integer index 1971 read GetIntegerProp write SetIntegerProp stored False;
    property SaveSettingsType: Integer index 1972 read GetIntegerProp write SetIntegerProp stored False;
    property BinaryConversion: TOleEnum index 1974 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property CodePage: TOleEnum index 1975 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property PrintJournalBeforeZReport: WordBool index 1976 read GetWordBoolProp write SetWordBoolProp stored False;
    property ParameterNumber: Integer index 1984 read GetIntegerProp write SetIntegerProp stored False;
    property ParameterValue: WideString index 1985 read GetWideStringProp write SetWideStringProp stored False;
    property TranslationEnabled: WordBool index 1986 read GetWordBoolProp write SetWordBoolProp stored False;
    property ModelIndex: Integer index 1987 read GetIntegerProp write SetIntegerProp stored False;
    property CarryStrings: WordBool index 1995 read GetWordBoolProp write SetWordBoolProp stored False;
    property DelayedPrint: WordBool index 1996 read GetWordBoolProp write SetWordBoolProp stored False;
    property WareCode: Integer index 2007 read GetIntegerProp write SetIntegerProp stored False;
    property CheckingType: Integer index 2016 read GetIntegerProp write SetIntegerProp stored False;
    property ErrorCode: Integer index 2018 read GetIntegerProp write SetIntegerProp stored False;
    property UseWareCode: WordBool index 2019 read GetWordBoolProp write SetWordBoolProp stored False;
    property RequestErrorDescription: WordBool index 2020 read GetWordBoolProp write SetWordBoolProp stored False;
    property AdjustRITimeout: WordBool index 2022 read GetWordBoolProp write SetWordBoolProp stored False;
    property ReconnectPort: WordBool index 2024 read GetWordBoolProp write SetWordBoolProp stored False;
    property DoNotSendENQ: WordBool index 2025 read GetWordBoolProp write SetWordBoolProp stored False;
    property SwapBytesMode: Integer index 2026 read GetIntegerProp write SetIntegerProp stored False;
    property ModelParamIndex: Integer index 2027 read GetIntegerProp write SetIntegerProp stored False;
    property CheckFMConnection: WordBool index 2031 read GetWordBoolProp write SetWordBoolProp stored False;
    property CheckEJConnection: WordBool index 2032 read GetWordBoolProp write SetWordBoolProp stored False;
    property BarcodeHex: WideString index 2034 read GetWideStringProp write SetWideStringProp stored False;
    property ProtocolType: Integer index 2036 read GetIntegerProp write SetIntegerProp stored False;
    property LDProtocolType: Integer index 2037 read GetIntegerProp write SetIntegerProp stored False;
    property UseSlipCheck: WordBool index 2040 read GetWordBoolProp write SetWordBoolProp stored False;
    property AutoSensorValues: WordBool index 2043 read GetWordBoolProp write SetWordBoolProp stored False;
    property SearchTimeout: Integer index 2044 read GetIntegerProp write SetIntegerProp stored False;
    property AutoStartSearch: WordBool index 2045 read GetWordBoolProp write SetWordBoolProp stored False;
    property TCPConnectionTimeout: Integer index 2046 read GetIntegerProp write SetIntegerProp stored False;
    property Summ5: Currency index 2057 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ6: Currency index 2058 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ7: Currency index 2059 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ8: Currency index 2060 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ9: Currency index 2061 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ10: Currency index 2062 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ11: Currency index 2063 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ12: Currency index 2064 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ13: Currency index 2065 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ14: Currency index 2066 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ15: Currency index 2067 read GetCurrencyProp write SetCurrencyProp stored False;
    property Summ16: Currency index 2068 read GetCurrencyProp write SetCurrencyProp stored False;
    property CustomerCode: Integer index 2069 read GetIntegerProp write SetIntegerProp stored False;
    property PermitActivizationCode: Integer index 2070 read GetIntegerProp write SetIntegerProp stored False;
    property ActivizationStatus: Integer index 2072 read GetIntegerProp write SetIntegerProp stored False;
    property MFPStatus: Integer index 2073 read GetIntegerProp write SetIntegerProp stored False;
    property MFPNumber: WideString index 2074 read GetWideStringProp write SetWideStringProp stored False;
    property KPKValue: Integer index 2075 read GetIntegerProp write SetIntegerProp stored False;
    property ActivizationControlByte: Integer index 2076 read GetIntegerProp write SetIntegerProp stored False;
    property PrepareActivizationRemainCount: Integer index 2077 read GetIntegerProp write SetIntegerProp stored False;
    property AnswerCode: Integer index 2078 read GetIntegerProp write SetIntegerProp stored False;
    property RequestType: Integer index 2079 read GetIntegerProp write SetIntegerProp stored False;
    property ReadTimeout: Integer index 2080 read GetIntegerProp write SetIntegerProp stored False;
    property CloudCashdeskEnabled: WordBool index 2085 read GetWordBoolProp write SetWordBoolProp stored False;
    property ECRID: WideString index 2086 read GetWideStringProp write SetWideStringProp stored False;
    property KSAInfo: WideString index 2088 read GetWideStringProp write SetWideStringProp stored False;
    property VertScale: Integer index 2089 read GetIntegerProp write SetIntegerProp stored False;
    property HorizScale: Integer index 2090 read GetIntegerProp write SetIntegerProp stored False;
    property BarcodeFirstLine: Integer index 2092 read GetIntegerProp write SetIntegerProp stored False;
    property SKNOStatus: Integer index 2093 read GetIntegerProp write SetIntegerProp stored False;
    property SKNOError: Integer index 2094 read GetIntegerProp write SetIntegerProp stored False;
    property SKNOIdentifier: WideString index 2095 read GetWideStringProp write SetWideStringProp stored False;
    property LineLength: Integer index 2098 read GetIntegerProp write SetIntegerProp stored False;
    property GraphBufferType: Integer index 2099 read GetIntegerProp write SetIntegerProp stored False;
    property FNCurrentDocument: Integer index 2101 read GetIntegerProp write SetIntegerProp stored False;
    property SyncTimeout: Integer index 2106 read GetIntegerProp write SetIntegerProp stored False;
    property FiscalSign: Integer index 2114 read GetIntegerProp write SetIntegerProp stored False;
    property KKTRegistrationNumber: WideString index 2115 read GetWideStringProp write SetWideStringProp stored False;
    property TaxType: Integer index 2116 read GetIntegerProp write SetIntegerProp stored False;
    property WorkMode: Integer index 2117 read GetIntegerProp write SetIntegerProp stored False;
    property DocumentType: Integer index 2122 read GetIntegerProp write SetIntegerProp stored False;
    property OFDTicketReceived: WordBool index 2123 read GetWordBoolProp write SetWordBoolProp stored False;
    property DocumentData: WideString index 2124 read GetWideStringProp write SetWideStringProp stored False;
    property TLVData: WideString index 2127 read GetWideStringProp write SetWideStringProp stored False;
    property OFDServer: WideString index 2133 read GetWideStringProp write SetWideStringProp stored False;
    property OFDPort: Integer index 2134 read GetIntegerProp write SetIntegerProp stored False;
    property OFDPollPeriod: Integer index 2135 read GetIntegerProp write SetIntegerProp stored False;
    property OFDEnabled: WordBool index 2136 read GetWordBoolProp write SetWordBoolProp stored False;
    property DocumentCount: Integer index 2152 read GetIntegerProp write SetIntegerProp stored False;
    property ReceiptNumber: Integer index 2153 read GetIntegerProp write SetIntegerProp stored False;
    property MessageState: Integer index 2154 read GetIntegerProp write SetIntegerProp stored False;
    property InfoExchangeStatus: Integer index 2155 read GetIntegerProp write SetIntegerProp stored False;
    property MessageCount: Integer index 2156 read GetIntegerProp write SetIntegerProp stored False;
    property ReportTypeInt: Integer index 2157 read GetIntegerProp write SetIntegerProp stored False;
    property DataLength: Integer index 2158 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountValue: Currency index 2161 read GetCurrencyProp write SetCurrencyProp stored False;
    property ChargeValue: Currency index 2162 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue: Currency index 2163 read GetCurrencyProp write SetCurrencyProp stored False;
    property RegistrationReasonCode: Integer index 2164 read GetIntegerProp write SetIntegerProp stored False;
    property DiscountName: WideString index 2165 read GetWideStringProp write SetWideStringProp stored False;
    property CustomerEmail: WideString index 2167 read GetWideStringProp write SetWideStringProp stored False;
    property Date2: TDateTime index 2169 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property Time2: TDateTime index 2170 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property FiscalSignOFD: WideString index 2171 read GetWideStringProp write SetWideStringProp stored False;
    property AutoOpenSession: WordBool index 2172 read GetWordBoolProp write SetWordBoolProp stored False;
    property TagNumber: Integer index 2177 read GetIntegerProp write SetIntegerProp stored False;
    property TagType: Integer index 2178 read GetIntegerProp write SetIntegerProp stored False;
    property TagValueInt: Integer index 2179 read GetIntegerProp write SetIntegerProp stored False;
    property TagValueStr: WideString index 2180 read GetWideStringProp write SetWideStringProp stored False;
    property TagValueFVLN: Currency index 2181 read GetCurrencyProp write SetCurrencyProp stored False;
    property TagValueDateTime: TDateTime index 2182 read GetTDateTimeProp write SetTDateTimeProp stored False;
    property TagValueLength: Integer index 2183 read GetIntegerProp write SetIntegerProp stored False;
    property TagValueBin: WideString index 2184 read GetWideStringProp write SetWideStringProp stored False;
    property TagDescription: WideString index 2190 read GetWideStringProp write SetWideStringProp stored False;
    property ShowTagNumber: WordBool index 2193 read GetWordBoolProp write SetWordBoolProp stored False;
    property URL: WideString index 2195 read GetWideStringProp write SetWideStringProp stored False;
    property PingTime: Integer index 2196 read GetIntegerProp write SetIntegerProp stored False;
    property PingResult: Integer index 2197 read GetIntegerProp write SetIntegerProp stored False;
    property ICSEnabled: WordBool index 2198 read GetWordBoolProp write SetWordBoolProp stored False;
    property ICSPollPeriod: Integer index 2199 read GetIntegerProp write SetIntegerProp stored False;
    property RoundingSumm: Integer index 2200 read GetIntegerProp write SetIntegerProp stored False;
    property TaxValue1: Currency index 2203 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue2: Currency index 2204 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue3: Currency index 2205 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue4: Currency index 2206 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue5: Currency index 2207 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue6: Currency index 2208 read GetCurrencyProp write SetCurrencyProp stored False;
    property TaxValue1Enabled: WordBool index 2209 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValue2Enabled: WordBool index 2210 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValue3Enabled: WordBool index 2211 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValue4Enabled: WordBool index 2212 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValue5Enabled: WordBool index 2213 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValue6Enabled: WordBool index 2214 read GetWordBoolProp write SetWordBoolProp stored False;
    property TaxValueEnabled: WordBool index 2215 read GetWordBoolProp write SetWordBoolProp stored False;
    property Summ1Enabled: WordBool index 2216 read GetWordBoolProp write SetWordBoolProp stored False;
    property PaymentTypeSign: Integer index 2217 read GetIntegerProp write SetIntegerProp stored False;
    property PaymentItemSign: Integer index 2218 read GetIntegerProp write SetIntegerProp stored False;
    property CalculationSign: Integer index 2220 read GetIntegerProp write SetIntegerProp stored False;
    property CorrectionType: Integer index 2221 read GetIntegerProp write SetIntegerProp stored False;
    property OFDReadTimeout: Integer index 2222 read GetIntegerProp write SetIntegerProp stored False;
    property AutoEoD: WordBool index 2224 read GetWordBoolProp write SetWordBoolProp stored False;
    property DBFilePath: WideString index 2228 read GetWideStringProp write SetWideStringProp stored False;
    property KKTLicense: Integer index 2230 read GetIntegerProp write SetIntegerProp stored False;
    property LicenseNumber: Integer index 2231 read GetIntegerProp write SetIntegerProp stored False;
    property PUKCode: Integer index 2232 read GetIntegerProp write SetIntegerProp stored False;
    property OFDExchangeSuspended: WordBool index 2235 read GetWordBoolProp write SetWordBoolProp stored False;
    property AutoOFDExchange: WordBool index 2237 read GetWordBoolProp write SetWordBoolProp stored False;
    property EmailAddress: WideString index 2240 read GetWideStringProp write SetWideStringProp stored False;
    property Discount1: Currency index 2241 read GetCurrencyProp write SetCurrencyProp stored False;
    property Discount2: Currency index 2242 read GetCurrencyProp write SetCurrencyProp stored False;
    property Discount3: Currency index 2243 read GetCurrencyProp write SetCurrencyProp stored False;
    property Discount4: Currency index 2244 read GetCurrencyProp write SetCurrencyProp stored False;
    property UseTaxDiscountBel: WordBool index 2245 read GetWordBoolProp write SetWordBoolProp stored False;
    property DBDocType: Integer index 2253 read GetIntegerProp write SetIntegerProp stored False;
    property OPSystem: Integer index 2257 read GetIntegerProp write SetIntegerProp stored False;
    property OPTransactionType: Integer index 2258 read GetIntegerProp write SetIntegerProp stored False;
    property OPBarcodeInputType: Integer index 2259 read GetIntegerProp write SetIntegerProp stored False;
    property OPIdPayment: WideString index 2260 read GetWideStringProp write SetWideStringProp stored False;
    property OPTransactionStatus: Integer index 2261 read GetIntegerProp write SetIntegerProp stored False;
    property OPRequisiteNumber: Integer index 2262 read GetIntegerProp write SetIntegerProp stored False;
    property OPRequisiteValue: WideString index 2263 read GetWideStringProp write SetWideStringProp stored False;
    property Token: WideString index 2265 read GetWideStringProp write SetWideStringProp stored False;
    property TagID: Integer index 2272 read GetIntegerProp write SetIntegerProp stored False;
    property SymbolCode: Integer index 2274 read GetIntegerProp write SetIntegerProp stored False;
    property BlockData: WideString index 2275 read GetWideStringProp write SetWideStringProp stored False;
    property SymbolHeight: Integer index 2276 read GetIntegerProp write SetIntegerProp stored False;
    property SymbolWidth: Integer index 2277 read GetIntegerProp write SetIntegerProp stored False;
    property FileType: Integer index 2278 read GetIntegerProp write SetIntegerProp stored False;
    property DelayOnDisconnect: Integer index 2282 read GetIntegerProp write SetIntegerProp stored False;
    property WrapStrings: WordBool index 2284 read GetWordBoolProp write SetWordBoolProp stored False;
    property GTIN: WideString index 2286 read GetWideStringProp write SetWideStringProp stored False;
    property MarkingType: Integer index 2287 read GetIntegerProp write SetIntegerProp stored False;
    property RequestDocumentType: Integer index 2292 read GetIntegerProp write SetIntegerProp stored False;
    property WorkModeEx: Integer index 2294 read GetIntegerProp write SetIntegerProp stored False;
    property INNOFD: WideString index 2295 read GetWideStringProp write SetWideStringProp stored False;
    property RegistrationReasonCodeEx: Integer index 2296 read GetIntegerProp write SetIntegerProp stored False;
    property UpdateFirmwareSuspended: WordBool index 2303 read GetWordBoolProp write SetWordBoolProp stored False;
    property PluginsEnabled: WordBool index 2307 read GetWordBoolProp write SetWordBoolProp stored False;
    property FWUpdateEnabled: WordBool index 2311 read GetWordBoolProp write SetWordBoolProp stored False;
    property FWUpdateServerURL: WideString index 2312 read GetWideStringProp write SetWideStringProp stored False;
    property FWUpdatePollInterval: Integer index 2313 read GetIntegerProp write SetIntegerProp stored False;
    property AuthKey: WideString index 2314 read GetWideStringProp write SetWideStringProp stored False;
    property NewAuthKey: WideString index 2318 read GetWideStringProp write SetWideStringProp stored False;
    property AuthKeyStorageType: Integer index 2321 read GetIntegerProp write SetIntegerProp stored False;
    property ItemStatus: Integer index 2322 read GetIntegerProp write SetIntegerProp stored False;
    property CheckItemMode: Integer index 2323 read GetIntegerProp write SetIntegerProp stored False;
    property ItemSaleServerAllowed: Integer index 2324 read GetIntegerProp write SetIntegerProp stored False;
    property CheckItemLocalResult: Integer index 2325 read GetIntegerProp write SetIntegerProp stored False;
    property KMServerErrorCode: Integer index 2326 read GetIntegerProp write SetIntegerProp stored False;
    property KMServerCheckingStatus: Integer index 2327 read GetIntegerProp write SetIntegerProp stored False;
    property SymbolicType: Integer index 2328 read GetIntegerProp write SetIntegerProp stored False;
    property ProcessingCode: Integer index 2329 read GetIntegerProp write SetIntegerProp stored False;
    property ConnectionStatus: Integer index 2332 read GetIntegerProp write SetIntegerProp stored False;
    property MessageNumber: Integer index 2334 read GetIntegerProp write SetIntegerProp stored False;
    property FreeMemorySize: Integer index 2335 read GetIntegerProp write SetIntegerProp stored False;
    property ItemNameLength: Integer index 2333 read GetIntegerProp write SetIntegerProp stored False;
    property DigitalSign: WideString index 2340 read GetWideStringProp write SetWideStringProp stored False;
    property UpdateFirmwareMethod: Integer index 2341 read GetIntegerProp write SetIntegerProp stored False;
    property UserAttributeName: WideString index 2344 read GetWideStringProp write SetWideStringProp stored False;
    property UserAttributeValue: WideString index 2345 read GetWideStringProp write SetWideStringProp stored False;
    property TagValueVLN: WideString index 2346 read GetWideStringProp write SetWideStringProp stored False;
    property TLVDataHex: WideString index 2348 read GetWideStringProp write SetWideStringProp stored False;
    property FirstDocumentNumber: Integer index 2352 read GetIntegerProp write SetIntegerProp stored False;
    property LastDocumentNumber: Integer index 2353 read GetIntegerProp write SetIntegerProp stored False;
    property FNArchiveType: Integer index 2354 read GetIntegerProp write SetIntegerProp stored False;
    property MarkingOnly: WordBool index 2355 read GetWordBoolProp write SetWordBoolProp stored False;
    property MarkingTypeEx: Integer index 2358 read GetIntegerProp write SetIntegerProp stored False;
    property TagValueBinHex: WideString index 2359 read GetWideStringProp write SetWideStringProp stored False;
    property FWUpdateSearchTimeout: Integer index 2360 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdWriteTimeout: Integer index 2361 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdDelayAfterReboot: Integer index 2362 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdDelayBeforeWrite: Integer index 2363 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdDelayBeforeSearch: Integer index 2364 read GetIntegerProp write SetIntegerProp stored False;
    property MCCheckStatus: Integer index 2366 read GetIntegerProp write SetIntegerProp stored False;
    property MCNotificationStatus: Integer index 2367 read GetIntegerProp write SetIntegerProp stored False;
    property MCCheckResultSavedCount: Integer index 2368 read GetIntegerProp write SetIntegerProp stored False;
    property MCCommandFlags: Integer index 2369 read GetIntegerProp write SetIntegerProp stored False;
    property MCRealizationCount: Integer index 2370 read GetIntegerProp write SetIntegerProp stored False;
    property MCStorageSize: Integer index 2371 read GetIntegerProp write SetIntegerProp stored False;
    property CheckItemLocalError: Integer index 2373 read GetIntegerProp write SetIntegerProp stored False;
    property MeasureUnit: Integer index 2374 read GetIntegerProp write SetIntegerProp stored False;
    property NotificationCount: Integer index 2377 read GetIntegerProp write SetIntegerProp stored False;
    property NotificationNumber: Integer index 2378 read GetIntegerProp write SetIntegerProp stored False;
    property NotificationSize: Integer index 2379 read GetIntegerProp write SetIntegerProp stored False;
    property DataOffset: Integer index 2380 read GetIntegerProp write SetIntegerProp stored False;
    property CheckSum: Integer index 2381 read GetIntegerProp write SetIntegerProp stored False;
    property DivisionalQuantity: WordBool index 2383 read GetWordBoolProp write SetWordBoolProp stored False;
    property Numerator: WideString index 2384 read GetWideStringProp write SetWideStringProp stored False;
    property Denominator: WideString index 2385 read GetWideStringProp write SetWideStringProp stored False;
    property MarkingType2: Integer index 2386 read GetIntegerProp write SetIntegerProp stored False;
    property FNMarkingFillPercentage: Integer index 2388 read GetIntegerProp write SetIntegerProp stored False;
    property TagValueFVLND: Double index 2390 read GetDoubleProp write SetDoubleProp stored False;
    property FWUpdateSaveTables: WordBool index 2392 read GetWordBoolProp write SetWordBoolProp stored False;
    property PlainTransferMode: Integer index 2396 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdateFFDParams: Integer index 2397 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdateFFDWaitInterval: Integer index 2398 read GetIntegerProp write SetIntegerProp stored False;
    property UpdateKeysResultCode: Integer index 2399 read GetIntegerProp write SetIntegerProp stored False;
    property UpdateKeysStatus: Integer index 2400 read GetIntegerProp write SetIntegerProp stored False;
    property PrinterHeadTemperature: Integer index 2401 read GetIntegerProp write SetIntegerProp stored False;
    property PreviousECRMode: Integer index 2402 read GetIntegerProp write SetIntegerProp stored False;
    property FWUpdPrintStatus: WordBool index 2403 read GetWordBoolProp write SetWordBoolProp stored False;
    property FontHashHex: WideString index 2406 read GetWideStringProp write SetWideStringProp stored False;
  end;

procedure Register;

resourcestring
  dtlServerPage = 'Servers';

  dtlOcxPage = 'ActiveX';

implementation

uses ComObj;

procedure TDrvFR1C.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{129C1D7A-384D-4CD6-9F28-7CF321FF9D04}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR1C.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR1C;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR1C.GetControlInterface: IDrvFR1C;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR1C.GetVersion: WideString;
begin
  Result := DefaultInterface.GetVersion;
end;

function TDrvFR1C.GetLastError(out ErrorDescription: WideString): Integer;
begin
  Result := DefaultInterface.GetLastError(ErrorDescription);
end;

function TDrvFR1C.Close(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Close(DeviceID);
end;

function TDrvFR1C.PrintXReport(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.PrintXReport(DeviceID);
end;

function TDrvFR1C.PrintZReport(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.PrintZReport(DeviceID);
end;

function TDrvFR1C.CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
begin
  Result := DefaultInterface.CashInOutcome(DeviceID, Amount);
end;

function TDrvFR1C.OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                            IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                            out CheckNumber: Integer; out SessionNumber: Integer): WordBool;
begin
  Result := DefaultInterface.OpenCheck(DeviceID, IsFiscalCheck, IsReturnCheck, CancelOpenedCheck, 
                                       CheckNumber, SessionNumber);
end;

function TDrvFR1C.PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                                    Quantity: Double; Price: Double; Amount: Double; 
                                    Department: Integer; Tax: Single): WordBool;
begin
  Result := DefaultInterface.PrintFiscalString(DeviceID, Name, Quantity, Price, Amount, Department, 
                                               Tax);
end;

function TDrvFR1C.CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                             PayByCredit: Double): WordBool;
begin
  Result := DefaultInterface.CloseCheck(DeviceID, Cash, PayByCard, PayByCredit);
end;

function TDrvFR1C.CancelCheck(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.CancelCheck(DeviceID);
end;

function TDrvFR1C.PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool;
begin
  Result := DefaultInterface.PrintNonFiscalString(DeviceID, TextString);
end;

function TDrvFR1C.DeviceTest(const ValuesArray: IDispatch; out AdditionalDescription: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceTest(ValuesArray, AdditionalDescription);
end;

function TDrvFR1C.Open(const ValuesArray: IDispatch; out DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Open(ValuesArray, DeviceID);
end;

function TDrvFR1C.CheckPrintingStatus(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.CheckPrintingStatus(DeviceID);
end;

function TDrvFR1C.ContinuePrinting(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.ContinuePrinting(DeviceID);
end;

function TDrvFR1C.OpenCashDrawer(const DeviceID: WideString; CashDrawerID: Integer): WordBool;
begin
  Result := DefaultInterface.OpenCashDrawer(DeviceID, CashDrawerID);
end;

function TDrvFR1C.LoadLogo(const ValuesArray: IDispatch; const LogoFileName: WideString; 
                           CenterLogo: WordBool; out LogoSize: Integer; 
                           out AdditionalDescription: WideString): WordBool;
begin
  Result := DefaultInterface.LoadLogo(ValuesArray, LogoFileName, CenterLogo, LogoSize, 
                                      AdditionalDescription);
end;

function TDrvFR1C.OpenSession(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenSession(DeviceID);
end;

function TDrvFR1C.DeviceControl(const DeviceID: WideString; const TxData: WideString; 
                                out RxData: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceControl(DeviceID, TxData, RxData);
end;

function TDrvFR1C.DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                                   out RxData: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceControlHEX(DeviceID, TxData, RxData);
end;

class function CoDrvFR3.Create: IDrvFR11;
begin
  Result := CreateComObject(CLASS_DrvFR3) as IDrvFR11;
end;

class function CoDrvFR3.CreateRemote(const MachineName: string): IDrvFR11;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DrvFR3) as IDrvFR11;
end;

procedure TDrvFR1C11.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{44809D9F-9A23-4CDD-A4CC-39A052C3BDFB}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR1C11.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR1C11;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR1C11.GetControlInterface: IDrvFR1C11;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR1C11.GetVersion: WideString;
begin
  Result := DefaultInterface.GetVersion;
end;

function TDrvFR1C11.GetDescription(out Name: WideString; out Description: WideString; 
                                   out EquipmentType: WideString; out InterfaceRevision: Integer; 
                                   out IntegrationLibrary: WordBool; 
                                   out MainDriverInstalled: WordBool; out GetDownloadURL: WideString): WordBool;
begin
  Result := DefaultInterface.GetDescription(Name, Description, EquipmentType, InterfaceRevision, 
                                            IntegrationLibrary, MainDriverInstalled, GetDownloadURL);
end;

function TDrvFR1C11.GetLastError(out ErrorDescription: WideString): Integer;
begin
  Result := DefaultInterface.GetLastError(ErrorDescription);
end;

function TDrvFR1C11.GetParameters(out TableParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetParameters(TableParameters);
end;

function TDrvFR1C11.SetParameter(const Name: WideString; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetParameter(Name, Value);
end;

function TDrvFR1C11.Open(out DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Open(DeviceID);
end;

function TDrvFR1C11.Close(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Close(DeviceID);
end;

function TDrvFR1C11.DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceTest(Description, DemoModeIsActivated);
end;

function TDrvFR1C11.GetAdditionalActions(out TableActions: WideString): WordBool;
begin
  Result := DefaultInterface.GetAdditionalActions(TableActions);
end;

function TDrvFR1C11.DoAdditionalAction(const ActionName: WideString): WordBool;
begin
  Result := DefaultInterface.DoAdditionalAction(ActionName);
end;

function TDrvFR1C11.OpenCheck(const DeviceID: WideString; IsFiscalCheck: WordBool; 
                              IsReturnCheck: WordBool; CancelOpenedCheck: WordBool; 
                              out CheckNumber: Integer; out SessionNumber: Integer): WordBool;
begin
  Result := DefaultInterface.OpenCheck(DeviceID, IsFiscalCheck, IsReturnCheck, CancelOpenedCheck, 
                                       CheckNumber, SessionNumber);
end;

function TDrvFR1C11.PrintFiscalString(const DeviceID: WideString; const Name: WideString; 
                                      Quantity: Double; Price: Double; Amount: Double; 
                                      Department: Integer; Tax: Double): WordBool;
begin
  Result := DefaultInterface.PrintFiscalString(DeviceID, Name, Quantity, Price, Amount, Department, 
                                               Tax);
end;

function TDrvFR1C11.PrintNonFiscalString(const DeviceID: WideString; const TextString: WideString): WordBool;
begin
  Result := DefaultInterface.PrintNonFiscalString(DeviceID, TextString);
end;

function TDrvFR1C11.PrintBarCode(const DeviceID: WideString; const BarcodeType: WideString; 
                                 const BarCode: WideString): WordBool;
begin
  Result := DefaultInterface.PrintBarCode(DeviceID, BarcodeType, BarCode);
end;

function TDrvFR1C11.CloseCheck(const DeviceID: WideString; Cash: Double; PayByCard: Double; 
                               PayByCredit: Double; PayByCertificate: Double): WordBool;
begin
  Result := DefaultInterface.CloseCheck(DeviceID, Cash, PayByCard, PayByCredit, PayByCertificate);
end;

function TDrvFR1C11.CancelCheck(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.CancelCheck(DeviceID);
end;

function TDrvFR1C11.CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
begin
  Result := DefaultInterface.CashInOutcome(DeviceID, Amount);
end;

function TDrvFR1C11.PrintXReport(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.PrintXReport(DeviceID);
end;

function TDrvFR1C11.PrintZReport(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.PrintZReport(DeviceID);
end;

function TDrvFR1C11.OpenCashDrawer(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenCashDrawer(DeviceID);
end;

function TDrvFR1C11.GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
begin
  Result := DefaultInterface.GetLineLength(DeviceID, LineLength);
end;

procedure TDrvFR1C11.SetLang(LangID: Integer);
begin
  DefaultInterface.SetLang(LangID);
end;

function TDrvFR1C11.OpenShift(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenShift(DeviceID);
end;

function TDrvFR1C11.PrintFiscalString2(const DeviceID: WideString; const Name: WideString; 
                                       Quantity: Double; Price: Double; Amount: Double; 
                                       Department: Integer; Tax1: Integer; Tax2: Integer; 
                                       Tax3: Integer; Tax4: Integer): WordBool;
begin
  Result := DefaultInterface.PrintFiscalString2(DeviceID, Name, Quantity, Price, Amount, 
                                                Department, Tax1, Tax2, Tax3, Tax4);
end;

function TDrvFR1C11.ContinuePrinting(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.ContinuePrinting(DeviceID);
end;

function TDrvFR1C11.CheckPrintingStatus(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.CheckPrintingStatus(DeviceID);
end;

function TDrvFR1C11.DeviceControlHEX(const DeviceID: WideString; const TxData: WideString; 
                                     out RxData: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceControlHEX(DeviceID, TxData, RxData);
end;

procedure TDrvFR1C17.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{6A751D33-0AAB-4339-BCC4-8056B3FC87F4}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR1C17.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR1C17;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR1C17.GetControlInterface: IDrvFR1C17;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR1C17.GetVersion: WideString;
begin
  Result := DefaultInterface.GetVersion;
end;

function TDrvFR1C17.GetDescription(out Name: WideString; out Description: WideString; 
                                   out EquipmentType: WideString; out InterfaceRevision: Integer; 
                                   out IntegrationLibrary: WordBool; 
                                   out MainDriverInstalled: WordBool; out DownloadURL: WideString): WordBool;
begin
  Result := DefaultInterface.GetDescription(Name, Description, EquipmentType, InterfaceRevision, 
                                            IntegrationLibrary, MainDriverInstalled, DownloadURL);
end;

function TDrvFR1C17.GetLastError(out ErrorDescription: WideString): Integer;
begin
  Result := DefaultInterface.GetLastError(ErrorDescription);
end;

function TDrvFR1C17.GetParameters(out TableParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetParameters(TableParameters);
end;

function TDrvFR1C17.SetParameter(const Name: WideString; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetParameter(Name, Value);
end;

function TDrvFR1C17.Open(out DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Open(DeviceID);
end;

function TDrvFR1C17.Close(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Close(DeviceID);
end;

function TDrvFR1C17.DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceTest(Description, DemoModeIsActivated);
end;

function TDrvFR1C17.GetAdditionalActions(out TableActions: WideString): WordBool;
begin
  Result := DefaultInterface.GetAdditionalActions(TableActions);
end;

function TDrvFR1C17.DoAdditionalAction(const ActionName: WideString): WordBool;
begin
  Result := DefaultInterface.DoAdditionalAction(ActionName);
end;

function TDrvFR1C17.GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
begin
  Result := DefaultInterface.GetDataKKT(DeviceID, TableParametersKKT);
end;

function TDrvFR1C17.OperationFN(const DeviceID: WideString; OperationType: Integer; 
                                const CashierName: WideString; const ParametersFiscal: WideString): WordBool;
begin
  Result := DefaultInterface.OperationFN(DeviceID, OperationType, CashierName, ParametersFiscal);
end;

function TDrvFR1C17.OpenShift(const DeviceID: WideString; const CashierName: WideString; 
                              out SessionNumber: Integer; out DocumentNumber: Integer): WordBool;
begin
  Result := DefaultInterface.OpenShift(DeviceID, CashierName, SessionNumber, DocumentNumber);
end;

function TDrvFR1C17.CloseShift(const DeviceID: WideString; const CashierName: WideString; 
                               out SessionNumber: Integer; out DocumentNumber: Integer): WordBool;
begin
  Result := DefaultInterface.CloseShift(DeviceID, CashierName, SessionNumber, DocumentNumber);
end;

function TDrvFR1C17.ProcessCheck(const DeviceID: WideString; const CashierName: WideString; 
                                 Electronically: WordBool; const CheckPackage: WideString; 
                                 out CheckNumber: Integer; out SessionNumber: Integer; 
                                 out FiscalSign: WideString; out AddressSiteInspections: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCheck(DeviceID, CashierName, Electronically, CheckPackage, 
                                          CheckNumber, SessionNumber, FiscalSign, 
                                          AddressSiteInspections);
end;

function TDrvFR1C17.ProcessCorrectionCheck(const DeviceID: WideString; 
                                           const CashierName: WideString; 
                                           const CheckCorrectionPackage: WideString; 
                                           out CheckNumber: Integer; out SessionNumber: Integer; 
                                           out FiscalSign: WideString; 
                                           out AddressSiteInspections: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCorrectionCheck(DeviceID, CashierName, CheckCorrectionPackage, 
                                                    CheckNumber, SessionNumber, FiscalSign, 
                                                    AddressSiteInspections);
end;

function TDrvFR1C17.CashInOutcome(const DeviceID: WideString; Amount: Double): WordBool;
begin
  Result := DefaultInterface.CashInOutcome(DeviceID, Amount);
end;

function TDrvFR1C17.GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                                     out SessionNumber: Integer; out SessionState: Integer; 
                                     out StatusParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetCurrentStatus(DeviceID, CheckNumber, SessionNumber, SessionState, 
                                              StatusParameters);
end;

function TDrvFR1C17.ReportCurrentStatusOfSettlements(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.ReportCurrentStatusOfSettlements(DeviceID);
end;

function TDrvFR1C17.OpenCashDrawer(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenCashDrawer(DeviceID);
end;

function TDrvFR1C17.GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
begin
  Result := DefaultInterface.GetLineLength(DeviceID, LineLength);
end;

function TDrvFR1C17.PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
begin
  Result := DefaultInterface.PrintTextDocument(DeviceID, DocumentPackage);
end;

procedure TDrvFR1C17.SetLang(LangID: Integer);
begin
  DefaultInterface.SetLang(LangID);
end;

function TDrvFR1C17.PrintXReport(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.PrintXReport(DeviceID);
end;

procedure TDrvFR1C22.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{E5903D73-66CC-42D7-9647-DBD2C837D8A7}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR1C22.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR1C22;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR1C22.GetControlInterface: IDrvFR1C22;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR1C22.GetVersion: WideString;
begin
  Result := DefaultInterface.GetVersion;
end;

function TDrvFR1C22.GetDescription(out Name: WideString; out Description: WideString; 
                                   out EquipmentType: WideString; out InterfaceRevision: Integer; 
                                   out IntegrationLibrary: WordBool; 
                                   out MainDriverInstalled: WordBool; out DownloadURL: WideString): WordBool;
begin
  Result := DefaultInterface.GetDescription(Name, Description, EquipmentType, InterfaceRevision, 
                                            IntegrationLibrary, MainDriverInstalled, DownloadURL);
end;

function TDrvFR1C22.GetLastError(out ErrorDescription: WideString): Integer;
begin
  Result := DefaultInterface.GetLastError(ErrorDescription);
end;

function TDrvFR1C22.GetParameters(out TableParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetParameters(TableParameters);
end;

function TDrvFR1C22.SetParameter(const Name: WideString; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetParameter(Name, Value);
end;

function TDrvFR1C22.Open(out DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Open(DeviceID);
end;

function TDrvFR1C22.Close(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Close(DeviceID);
end;

function TDrvFR1C22.DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceTest(Description, DemoModeIsActivated);
end;

function TDrvFR1C22.GetAdditionalActions(out TableActions: WideString): WordBool;
begin
  Result := DefaultInterface.GetAdditionalActions(TableActions);
end;

function TDrvFR1C22.DoAdditionalAction(const ActionName: WideString): WordBool;
begin
  Result := DefaultInterface.DoAdditionalAction(ActionName);
end;

function TDrvFR1C22.GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
begin
  Result := DefaultInterface.GetDataKKT(DeviceID, TableParametersKKT);
end;

function TDrvFR1C22.OperationFN(const DeviceID: WideString; OperationType: Integer; 
                                const ParametersFiscal: WideString): WordBool;
begin
  Result := DefaultInterface.OperationFN(DeviceID, OperationType, ParametersFiscal);
end;

function TDrvFR1C22.OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                              out OutputParameters: WideString; out SessionNumber: Integer; 
                              out DocumentNumber: Integer): WordBool;
begin
  Result := DefaultInterface.OpenShift(DeviceID, InputParameters, OutputParameters, SessionNumber, 
                                       DocumentNumber);
end;

function TDrvFR1C22.CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                               out OutputParameters: WideString; out SessionNumber: Integer; 
                               out DocumentNumber: Integer): WordBool;
begin
  Result := DefaultInterface.CloseShift(DeviceID, InputParameters, OutputParameters, SessionNumber, 
                                        DocumentNumber);
end;

function TDrvFR1C22.ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                                 const CheckPackage: WideString; out CheckNumber: Integer; 
                                 out SessionNumber: Integer; out FiscalSign: WideString; 
                                 out AddressSiteInspections: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCheck(DeviceID, Electronically, CheckPackage, CheckNumber, 
                                          SessionNumber, FiscalSign, AddressSiteInspections);
end;

function TDrvFR1C22.ProcessCorrectionCheck(const DeviceID: WideString; 
                                           const CheckCorrectionPackage: WideString; 
                                           out CheckNumber: Integer; out SessionNumber: Integer; 
                                           out FiscalSign: WideString; 
                                           out AddressSiteInspections: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCorrectionCheck(DeviceID, CheckCorrectionPackage, CheckNumber, 
                                                    SessionNumber, FiscalSign, 
                                                    AddressSiteInspections);
end;

function TDrvFR1C22.PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
begin
  Result := DefaultInterface.PrintTextDocument(DeviceID, DocumentPackage);
end;

function TDrvFR1C22.CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                                  Amount: Double): WordBool;
begin
  Result := DefaultInterface.CashInOutcome(DeviceID, InputParameters, Amount);
end;

function TDrvFR1C22.PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.PrintXReport(DeviceID, InputParameters);
end;

function TDrvFR1C22.GetCurrentStatus(const DeviceID: WideString; out CheckNumber: Integer; 
                                     out SessionNumber: Integer; out SessionState: Integer; 
                                     out StatusParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetCurrentStatus(DeviceID, CheckNumber, SessionNumber, SessionState, 
                                              StatusParameters);
end;

function TDrvFR1C22.ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                                     const InputParameters: WideString; 
                                                     out OutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.ReportCurrentStatusOfSettlements(DeviceID, InputParameters, 
                                                              OutputParameters);
end;

function TDrvFR1C22.OpenCashDrawer(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenCashDrawer(DeviceID);
end;

function TDrvFR1C22.GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
begin
  Result := DefaultInterface.GetLineLength(DeviceID, LineLength);
end;

procedure TDrvFR1C22.SetLang(LangID: Integer);
begin
  DefaultInterface.SetLang(LangID);
end;

procedure TDrvFR1C30.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{32D32C7A-CEF9-4AC5-8953-3D6DF81ABBD6}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR1C30.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR1C30;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR1C30.GetControlInterface: IDrvFR1C30;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR1C30.GetInterfaceRevision: Integer;
begin
  Result := DefaultInterface.GetInterfaceRevision;
end;

function TDrvFR1C30.GetDescription(out DriverDescription: WideString): WordBool;
begin
  Result := DefaultInterface.GetDescription(DriverDescription);
end;

function TDrvFR1C30.GetLastError(out ErrorDescription: WideString): Integer;
begin
  Result := DefaultInterface.GetLastError(ErrorDescription);
end;

function TDrvFR1C30.GetParameters(out TableParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetParameters(TableParameters);
end;

function TDrvFR1C30.SetParameter(const Name: WideString; Value: OleVariant): WordBool;
begin
  Result := DefaultInterface.SetParameter(Name, Value);
end;

function TDrvFR1C30.Open(out DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Open(DeviceID);
end;

function TDrvFR1C30.Close(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.Close(DeviceID);
end;

function TDrvFR1C30.DeviceTest(out Description: WideString; out DemoModeIsActivated: WideString): WordBool;
begin
  Result := DefaultInterface.DeviceTest(Description, DemoModeIsActivated);
end;

function TDrvFR1C30.GetAdditionalActions(out TableActions: WideString): WordBool;
begin
  Result := DefaultInterface.GetAdditionalActions(TableActions);
end;

function TDrvFR1C30.DoAdditionalAction(const ActionName: WideString): WordBool;
begin
  Result := DefaultInterface.DoAdditionalAction(ActionName);
end;

function TDrvFR1C30.GetDataKKT(const DeviceID: WideString; out TableParametersKKT: WideString): WordBool;
begin
  Result := DefaultInterface.GetDataKKT(DeviceID, TableParametersKKT);
end;

function TDrvFR1C30.OperationFN(const DeviceID: WideString; OperationType: Integer; 
                                const ParametersFiscal: WideString): WordBool;
begin
  Result := DefaultInterface.OperationFN(DeviceID, OperationType, ParametersFiscal);
end;

function TDrvFR1C30.OpenShift(const DeviceID: WideString; const InputParameters: WideString; 
                              out OutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.OpenShift(DeviceID, InputParameters, OutputParameters);
end;

function TDrvFR1C30.CloseShift(const DeviceID: WideString; const InputParameters: WideString; 
                               out OutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.CloseShift(DeviceID, InputParameters, OutputParameters);
end;

function TDrvFR1C30.ProcessCheck(const DeviceID: WideString; Electronically: WordBool; 
                                 const CheckPackage: WideString; 
                                 out DocumentOutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCheck(DeviceID, Electronically, CheckPackage, 
                                          DocumentOutputParameters);
end;

function TDrvFR1C30.ProcessCorrectionCheck(const DeviceID: WideString; 
                                           const CheckPackage: WideString; 
                                           out DocumentOutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.ProcessCorrectionCheck(DeviceID, CheckPackage, DocumentOutputParameters);
end;

function TDrvFR1C30.CashInOutcome(const DeviceID: WideString; const InputParameters: WideString; 
                                  Amount: Double): WordBool;
begin
  Result := DefaultInterface.CashInOutcome(DeviceID, InputParameters, Amount);
end;

function TDrvFR1C30.PrintXReport(const DeviceID: WideString; const InputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.PrintXReport(DeviceID, InputParameters);
end;

function TDrvFR1C30.GetCurrentStatus(const DeviceID: WideString; const InputParameters: WideString; 
                                     out OutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.GetCurrentStatus(DeviceID, InputParameters, OutputParameters);
end;

function TDrvFR1C30.ReportCurrentStatusOfSettlements(const DeviceID: WideString; 
                                                     const InputParameters: WideString; 
                                                     out OutputParameters: WideString): WordBool;
begin
  Result := DefaultInterface.ReportCurrentStatusOfSettlements(DeviceID, InputParameters, 
                                                              OutputParameters);
end;

function TDrvFR1C30.OpenCashDrawer(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenCashDrawer(DeviceID);
end;

function TDrvFR1C30.GetLineLength(const DeviceID: WideString; out LineLength: Integer): WordBool;
begin
  Result := DefaultInterface.GetLineLength(DeviceID, LineLength);
end;

function TDrvFR1C30.PrintCheckCopy(const DeviceID: WideString; const CheckNumber: WideString): WordBool;
begin
  Result := DefaultInterface.PrintCheckCopy(DeviceID, CheckNumber);
end;

function TDrvFR1C30.PrintTextDocument(const DeviceID: WideString; const DocumentPackage: WideString): WordBool;
begin
  Result := DefaultInterface.PrintTextDocument(DeviceID, DocumentPackage);
end;

function TDrvFR1C30.OpenSessionRegistrationKM(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.OpenSessionRegistrationKM(DeviceID);
end;

function TDrvFR1C30.CloseSessionRegistrationKM(const DeviceID: WideString): WordBool;
begin
  Result := DefaultInterface.CloseSessionRegistrationKM(DeviceID);
end;

function TDrvFR1C30.RequestKM(const DeviceID: WideString; const RequestKM: WideString; 
                              out RequestKMResult: WideString): WordBool;
begin
  Result := DefaultInterface.RequestKM(DeviceID, RequestKM, RequestKMResult);
end;

function TDrvFR1C30.GetProcessingKMResult(const DeviceID: WideString; 
                                          out ProcessingKMResult: WideString; 
                                          out RequestStatus: Integer): WordBool;
begin
  Result := DefaultInterface.GetProcessingKMResult(DeviceID, ProcessingKMResult, RequestStatus);
end;

function TDrvFR1C30.ConfirmKM(const DeviceID: WideString; const RequestGUID: WideString; 
                              ConfirmationType: Integer): WordBool;
begin
  Result := DefaultInterface.ConfirmKM(DeviceID, RequestGUID, ConfirmationType);
end;

procedure TDrvFR.InitControlData;
const
  CControlData: TControlData2 = (
    ClassID: '{E187099F-8C5C-4723-8866-D8DBB6353ADE}';
    EventIID: '';
    EventCount: 0;
    EventDispIDs: nil;
    LicenseKey: nil (*HR:$00000000*);
    Flags: $00000000;
    Version: 401);
begin
  ControlData := @CControlData;
end;

procedure TDrvFR.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IDrvFR49;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TDrvFR.GetControlInterface: IDrvFR49;
begin
  CreateControl;
  Result := FIntf;
end;

function TDrvFR.Get_ModelParamValue: OleVariant;
var
  InterfaceVariant : OleVariant;
begin
  InterfaceVariant := DefaultInterface;
  Result := InterfaceVariant.ModelParamValue;
end;

function TDrvFR.AddLD: Integer;
begin
  Result := DefaultInterface.AddLD;
end;

function TDrvFR.Beep: Integer;
begin
  Result := DefaultInterface.Beep;
end;

function TDrvFR.Buy: Integer;
begin
  Result := DefaultInterface.Buy;
end;

function TDrvFR.BuyEx: Integer;
begin
  Result := DefaultInterface.BuyEx;
end;

function TDrvFR.CancelCheck: Integer;
begin
  Result := DefaultInterface.CancelCheck;
end;

function TDrvFR.CashIncome: Integer;
begin
  Result := DefaultInterface.CashIncome;
end;

function TDrvFR.CashOutcome: Integer;
begin
  Result := DefaultInterface.CashOutcome;
end;

function TDrvFR.Charge: Integer;
begin
  Result := DefaultInterface.Charge;
end;

function TDrvFR.CheckSubTotal: Integer;
begin
  Result := DefaultInterface.CheckSubTotal;
end;

function TDrvFR.CloseCheck: Integer;
begin
  Result := DefaultInterface.CloseCheck;
end;

function TDrvFR.ConfirmDate: Integer;
begin
  Result := DefaultInterface.ConfirmDate;
end;

function TDrvFR.Connect: Integer;
begin
  Result := DefaultInterface.Connect;
end;

function TDrvFR.ContinuePrint: Integer;
begin
  Result := DefaultInterface.ContinuePrint;
end;

function TDrvFR.Correction: Integer;
begin
  Result := DefaultInterface.Correction;
end;

function TDrvFR.CutCheck: Integer;
begin
  Result := DefaultInterface.CutCheck;
end;

function TDrvFR.DampRequest: Integer;
begin
  Result := DefaultInterface.DampRequest;
end;

function TDrvFR.DeleteLD: Integer;
begin
  Result := DefaultInterface.DeleteLD;
end;

function TDrvFR.Disconnect: Integer;
begin
  Result := DefaultInterface.Disconnect;
end;

function TDrvFR.Discount: Integer;
begin
  Result := DefaultInterface.Discount;
end;

function TDrvFR.DozeOilCheck: Integer;
begin
  Result := DefaultInterface.DozeOilCheck;
end;

function TDrvFR.Draw: Integer;
begin
  Result := DefaultInterface.Draw;
end;

function TDrvFR.EKLZDepartmentReportInDatesRange: Integer;
begin
  Result := DefaultInterface.EKLZDepartmentReportInDatesRange;
end;

function TDrvFR.EKLZDepartmentReportInSessionsRange: Integer;
begin
  Result := DefaultInterface.EKLZDepartmentReportInSessionsRange;
end;

function TDrvFR.EKLZJournalOnSessionNumber: Integer;
begin
  Result := DefaultInterface.EKLZJournalOnSessionNumber;
end;

function TDrvFR.EKLZSessionReportInDatesRange: Integer;
begin
  Result := DefaultInterface.EKLZSessionReportInDatesRange;
end;

function TDrvFR.EKLZSessionReportInSessionsRange: Integer;
begin
  Result := DefaultInterface.EKLZSessionReportInSessionsRange;
end;

function TDrvFR.ExchangeBytes: Integer;
begin
  Result := DefaultInterface.ExchangeBytes;
end;

function TDrvFR.FeedDocument: Integer;
begin
  Result := DefaultInterface.FeedDocument;
end;

function TDrvFR.Fiscalization: Integer;
begin
  Result := DefaultInterface.Fiscalization;
end;

function TDrvFR.FiscalReportForDatesRange: Integer;
begin
  Result := DefaultInterface.FiscalReportForDatesRange;
end;

function TDrvFR.FiscalReportForSessionRange: Integer;
begin
  Result := DefaultInterface.FiscalReportForSessionRange;
end;

function TDrvFR.GetActiveLD: Integer;
begin
  Result := DefaultInterface.GetActiveLD;
end;

function TDrvFR.EnumLD: Integer;
begin
  Result := DefaultInterface.EnumLD;
end;

function TDrvFR.GetCashReg: Integer;
begin
  Result := DefaultInterface.GetCashReg;
end;

function TDrvFR.GetCountLD: Integer;
begin
  Result := DefaultInterface.GetCountLD;
end;

function TDrvFR.GetData: Integer;
begin
  Result := DefaultInterface.GetData;
end;

function TDrvFR.GetDeviceMetrics: Integer;
begin
  Result := DefaultInterface.GetDeviceMetrics;
end;

function TDrvFR.GetECRStatus: Integer;
begin
  Result := DefaultInterface.GetECRStatus;
end;

function TDrvFR.GetShortECRStatus: Integer;
begin
  Result := DefaultInterface.GetShortECRStatus;
end;

function TDrvFR.GetExchangeParam: Integer;
begin
  Result := DefaultInterface.GetExchangeParam;
end;

function TDrvFR.GetFieldStruct: Integer;
begin
  Result := DefaultInterface.GetFieldStruct;
end;

function TDrvFR.GetFiscalizationParameters: Integer;
begin
  Result := DefaultInterface.GetFiscalizationParameters;
end;

function TDrvFR.GetFMRecordsSum: Integer;
begin
  Result := DefaultInterface.GetFMRecordsSum;
end;

function TDrvFR.GetLastFMRecordDate: Integer;
begin
  Result := DefaultInterface.GetLastFMRecordDate;
end;

function TDrvFR.GetLiterSumCounter: Integer;
begin
  Result := DefaultInterface.GetLiterSumCounter;
end;

function TDrvFR.GetOperationReg: Integer;
begin
  Result := DefaultInterface.GetOperationReg;
end;

function TDrvFR.GetParamLD: Integer;
begin
  Result := DefaultInterface.GetParamLD;
end;

function TDrvFR.GetRangeDatesAndSessions: Integer;
begin
  Result := DefaultInterface.GetRangeDatesAndSessions;
end;

function TDrvFR.GetRKStatus: Integer;
begin
  Result := DefaultInterface.GetRKStatus;
end;

function TDrvFR.GetTableStruct: Integer;
begin
  Result := DefaultInterface.GetTableStruct;
end;

function TDrvFR.InitFM: Integer;
begin
  Result := DefaultInterface.InitFM;
end;

function TDrvFR.InitTable: Integer;
begin
  Result := DefaultInterface.InitTable;
end;

function TDrvFR.InterruptDataStream: Integer;
begin
  Result := DefaultInterface.InterruptDataStream;
end;

function TDrvFR.InterruptFullReport: Integer;
begin
  Result := DefaultInterface.InterruptFullReport;
end;

function TDrvFR.InterruptTest: Integer;
begin
  Result := DefaultInterface.InterruptTest;
end;

function TDrvFR.LaunchRK: Integer;
begin
  Result := DefaultInterface.LaunchRK;
end;

function TDrvFR.LoadLineData: Integer;
begin
  Result := DefaultInterface.LoadLineData;
end;

function TDrvFR.OilSale: Integer;
begin
  Result := DefaultInterface.OilSale;
end;

function TDrvFR.OpenCheck: Integer;
begin
  Result := DefaultInterface.OpenCheck;
end;

function TDrvFR.OpenDrawer: Integer;
begin
  Result := DefaultInterface.OpenDrawer;
end;

function TDrvFR.PrintBarCode: Integer;
begin
  Result := DefaultInterface.PrintBarCode;
end;

function TDrvFR.PrintDepartmentReport: Integer;
begin
  Result := DefaultInterface.PrintDepartmentReport;
end;

function TDrvFR.PrintDocumentTitle: Integer;
begin
  Result := DefaultInterface.PrintDocumentTitle;
end;

function TDrvFR.PrintOperationReg: Integer;
begin
  Result := DefaultInterface.PrintOperationReg;
end;

function TDrvFR.PrintReportWithCleaning: Integer;
begin
  Result := DefaultInterface.PrintReportWithCleaning;
end;

function TDrvFR.PrintReportWithoutCleaning: Integer;
begin
  Result := DefaultInterface.PrintReportWithoutCleaning;
end;

function TDrvFR.PrintString: Integer;
begin
  Result := DefaultInterface.PrintString;
end;

function TDrvFR.PrintWideString: Integer;
begin
  Result := DefaultInterface.PrintWideString;
end;

function TDrvFR.ReadEKLZDocumentOnKPK: Integer;
begin
  Result := DefaultInterface.ReadEKLZDocumentOnKPK;
end;

function TDrvFR.ReadEKLZSessionTotal: Integer;
begin
  Result := DefaultInterface.ReadEKLZSessionTotal;
end;

function TDrvFR.ReadLicense: Integer;
begin
  Result := DefaultInterface.ReadLicense;
end;

function TDrvFR.ReadTable: Integer;
begin
  Result := DefaultInterface.ReadTable;
end;

function TDrvFR.RepeatDocument: Integer;
begin
  Result := DefaultInterface.RepeatDocument;
end;

function TDrvFR.ResetAllTRK: Integer;
begin
  Result := DefaultInterface.ResetAllTRK;
end;

function TDrvFR.ResetRK: Integer;
begin
  Result := DefaultInterface.ResetRK;
end;

function TDrvFR.ResetSettings: Integer;
begin
  Result := DefaultInterface.ResetSettings;
end;

function TDrvFR.ResetSummary: Integer;
begin
  Result := DefaultInterface.ResetSummary;
end;

function TDrvFR.ReturnBuy: Integer;
begin
  Result := DefaultInterface.ReturnBuy;
end;

function TDrvFR.ReturnBuyEx: Integer;
begin
  Result := DefaultInterface.ReturnBuyEx;
end;

function TDrvFR.ReturnSale: Integer;
begin
  Result := DefaultInterface.ReturnSale;
end;

function TDrvFR.ReturnSaleEx: Integer;
begin
  Result := DefaultInterface.ReturnSaleEx;
end;

function TDrvFR.Sale: Integer;
begin
  Result := DefaultInterface.Sale;
end;

function TDrvFR.SaleEx: Integer;
begin
  Result := DefaultInterface.SaleEx;
end;

function TDrvFR.SetActiveLD: Integer;
begin
  Result := DefaultInterface.SetActiveLD;
end;

function TDrvFR.SetDate: Integer;
begin
  Result := DefaultInterface.SetDate;
end;

function TDrvFR.SetDozeInMilliliters: Integer;
begin
  Result := DefaultInterface.SetDozeInMilliliters;
end;

function TDrvFR.SetDozeInMoney: Integer;
begin
  Result := DefaultInterface.SetDozeInMoney;
end;

function TDrvFR.SetExchangeParam: Integer;
begin
  Result := DefaultInterface.SetExchangeParam;
end;

function TDrvFR.SetParamLD: Integer;
begin
  Result := DefaultInterface.SetParamLD;
end;

function TDrvFR.SetPointPosition: Integer;
begin
  Result := DefaultInterface.SetPointPosition;
end;

function TDrvFR.SetRKParameters: Integer;
begin
  Result := DefaultInterface.SetRKParameters;
end;

function TDrvFR.SetSerialNumber: Integer;
begin
  Result := DefaultInterface.SetSerialNumber;
end;

function TDrvFR.SetTime: Integer;
begin
  Result := DefaultInterface.SetTime;
end;

function TDrvFR.ShowProperties: Integer;
begin
  Result := DefaultInterface.ShowProperties;
end;

function TDrvFR.StopEKLZDocumentPrinting: Integer;
begin
  Result := DefaultInterface.StopEKLZDocumentPrinting;
end;

function TDrvFR.StopRK: Integer;
begin
  Result := DefaultInterface.StopRK;
end;

function TDrvFR.Storno: Integer;
begin
  Result := DefaultInterface.Storno;
end;

function TDrvFR.StornoEx: Integer;
begin
  Result := DefaultInterface.StornoEx;
end;

function TDrvFR.StornoCharge: Integer;
begin
  Result := DefaultInterface.StornoCharge;
end;

function TDrvFR.StornoDiscount: Integer;
begin
  Result := DefaultInterface.StornoDiscount;
end;

function TDrvFR.SummOilCheck: Integer;
begin
  Result := DefaultInterface.SummOilCheck;
end;

function TDrvFR.SysAdminCancelCheck: Integer;
begin
  Result := DefaultInterface.SysAdminCancelCheck;
end;

function TDrvFR.Test: Integer;
begin
  Result := DefaultInterface.Test;
end;

function TDrvFR.WriteLicense: Integer;
begin
  Result := DefaultInterface.WriteLicense;
end;

function TDrvFR.WriteTable: Integer;
begin
  Result := DefaultInterface.WriteTable;
end;

function TDrvFR.PrintStringWithFont: Integer;
begin
  Result := DefaultInterface.PrintStringWithFont;
end;

function TDrvFR.EKLZActivizationResult: Integer;
begin
  Result := DefaultInterface.EKLZActivizationResult;
end;

function TDrvFR.EKLZActivization: Integer;
begin
  Result := DefaultInterface.EKLZActivization;
end;

function TDrvFR.CloseEKLZArchive: Integer;
begin
  Result := DefaultInterface.CloseEKLZArchive;
end;

function TDrvFR.GetEKLZSerialNumber: Integer;
begin
  Result := DefaultInterface.GetEKLZSerialNumber;
end;

function TDrvFR.EKLZInterrupt: Integer;
begin
  Result := DefaultInterface.EKLZInterrupt;
end;

function TDrvFR.GetEKLZCode1Report: Integer;
begin
  Result := DefaultInterface.GetEKLZCode1Report;
end;

function TDrvFR.GetEKLZCode2Report: Integer;
begin
  Result := DefaultInterface.GetEKLZCode2Report;
end;

function TDrvFR.TestEKLZArchiveIntegrity: Integer;
begin
  Result := DefaultInterface.TestEKLZArchiveIntegrity;
end;

function TDrvFR.GetEKLZVersion: Integer;
begin
  Result := DefaultInterface.GetEKLZVersion;
end;

function TDrvFR.InitEKLZArchive: Integer;
begin
  Result := DefaultInterface.InitEKLZArchive;
end;

function TDrvFR.GetEKLZData: Integer;
begin
  Result := DefaultInterface.GetEKLZData;
end;

function TDrvFR.GetEKLZJournal: Integer;
begin
  Result := DefaultInterface.GetEKLZJournal;
end;

function TDrvFR.GetEKLZDocument: Integer;
begin
  Result := DefaultInterface.GetEKLZDocument;
end;

function TDrvFR.GetEKLZDepartmentReportInDatesRange: Integer;
begin
  Result := DefaultInterface.GetEKLZDepartmentReportInDatesRange;
end;

function TDrvFR.GetEKLZDepartmentReportInSessionsRange: Integer;
begin
  Result := DefaultInterface.GetEKLZDepartmentReportInSessionsRange;
end;

function TDrvFR.GetEKLZSessionReportInDatesRange: Integer;
begin
  Result := DefaultInterface.GetEKLZSessionReportInDatesRange;
end;

function TDrvFR.GetEKLZSessionReportInSessionsRange: Integer;
begin
  Result := DefaultInterface.GetEKLZSessionReportInSessionsRange;
end;

function TDrvFR.GetEKLZSessionTotal: Integer;
begin
  Result := DefaultInterface.GetEKLZSessionTotal;
end;

function TDrvFR.GetEKLZActivizationResult: Integer;
begin
  Result := DefaultInterface.GetEKLZActivizationResult;
end;

function TDrvFR.SetEKLZResultCode: Integer;
begin
  Result := DefaultInterface.SetEKLZResultCode;
end;

function TDrvFR.OpenFiscalSlipDocument: Integer;
begin
  Result := DefaultInterface.OpenFiscalSlipDocument;
end;

function TDrvFR.OpenStandardFiscalSlipDocument: Integer;
begin
  Result := DefaultInterface.OpenStandardFiscalSlipDocument;
end;

function TDrvFR.RegistrationOnSlipDocument: Integer;
begin
  Result := DefaultInterface.RegistrationOnSlipDocument;
end;

function TDrvFR.StandardRegistrationOnSlipDocument: Integer;
begin
  Result := DefaultInterface.StandardRegistrationOnSlipDocument;
end;

function TDrvFR.ChargeOnSlipDocument: Integer;
begin
  Result := DefaultInterface.ChargeOnSlipDocument;
end;

function TDrvFR.StandardChargeOnSlipDocument: Integer;
begin
  Result := DefaultInterface.StandardChargeOnSlipDocument;
end;

function TDrvFR.CloseCheckOnSlipDocument: Integer;
begin
  Result := DefaultInterface.CloseCheckOnSlipDocument;
end;

function TDrvFR.StandardCloseCheckOnSlipDocument: Integer;
begin
  Result := DefaultInterface.StandardCloseCheckOnSlipDocument;
end;

function TDrvFR.ConfigureSlipDocument: Integer;
begin
  Result := DefaultInterface.ConfigureSlipDocument;
end;

function TDrvFR.ConfigureStandardSlipDocument: Integer;
begin
  Result := DefaultInterface.ConfigureStandardSlipDocument;
end;

function TDrvFR.FillSlipDocumentWithUnfiscalInfo: Integer;
begin
  Result := DefaultInterface.FillSlipDocumentWithUnfiscalInfo;
end;

function TDrvFR.ClearSlipDocumentBufferString: Integer;
begin
  Result := DefaultInterface.ClearSlipDocumentBufferString;
end;

function TDrvFR.ClearSlipDocumentBuffer: Integer;
begin
  Result := DefaultInterface.ClearSlipDocumentBuffer;
end;

function TDrvFR.PrintSlipDocument: Integer;
begin
  Result := DefaultInterface.PrintSlipDocument;
end;

function TDrvFR.DiscountOnSlipDocument: Integer;
begin
  Result := DefaultInterface.DiscountOnSlipDocument;
end;

function TDrvFR.StandardDiscountOnSlipDocument: Integer;
begin
  Result := DefaultInterface.StandardDiscountOnSlipDocument;
end;

function TDrvFR.EjectSlipDocument: Integer;
begin
  Result := DefaultInterface.EjectSlipDocument;
end;

function TDrvFR.LoadLineDataEx: Integer;
begin
  Result := DefaultInterface.LoadLineDataEx;
end;

function TDrvFR.DrawEx: Integer;
begin
  Result := DefaultInterface.DrawEx;
end;

function TDrvFR.ConfigureGeneralSlipDocument: Integer;
begin
  Result := DefaultInterface.ConfigureGeneralSlipDocument;
end;

function TDrvFR.WideLoadLineData: Integer;
begin
  Result := DefaultInterface.WideLoadLineData;
end;

function TDrvFR.PrintTaxReport: Integer;
begin
  Result := DefaultInterface.PrintTaxReport;
end;

function TDrvFR.GetLongSerialNumberAndLongRNM: Integer;
begin
  Result := DefaultInterface.GetLongSerialNumberAndLongRNM;
end;

function TDrvFR.SetLongSerialNumber: Integer;
begin
  Result := DefaultInterface.SetLongSerialNumber;
end;

function TDrvFR.FiscalizationWithLongRNM: Integer;
begin
  Result := DefaultInterface.FiscalizationWithLongRNM;
end;

function TDrvFR.Connect2: Integer;
begin
  Result := DefaultInterface.Connect2;
end;

function TDrvFR.GetECRPrinterStatus: Integer;
begin
  Result := DefaultInterface.GetECRPrinterStatus;
end;

function TDrvFR.ServerConnect: Integer;
begin
  Result := DefaultInterface.ServerConnect;
end;

function TDrvFR.ServerDisconnect: Integer;
begin
  Result := DefaultInterface.ServerDisconnect;
end;

function TDrvFR.LockPort: Integer;
begin
  Result := DefaultInterface.LockPort;
end;

function TDrvFR.UnlockPort: Integer;
begin
  Result := DefaultInterface.UnlockPort;
end;

function TDrvFR.AdminUnlockPort: Integer;
begin
  Result := DefaultInterface.AdminUnlockPort;
end;

function TDrvFR.AdminUnlockPorts: Integer;
begin
  Result := DefaultInterface.AdminUnlockPorts;
end;

function TDrvFR.ServerCheckKey: Integer;
begin
  Result := DefaultInterface.ServerCheckKey;
end;

function TDrvFR.GetFontMetrics: Integer;
begin
  Result := DefaultInterface.GetFontMetrics;
end;

function TDrvFR.GetFreeLDNumber: Integer;
begin
  Result := DefaultInterface.GetFreeLDNumber;
end;

procedure TDrvFR.SetIsString(Value: WordBool);
begin
  DefaultInterface.SetIsString(Value);
end;

procedure TDrvFR.SetFieldSize(Value: Integer);
begin
  DefaultInterface.SetFieldSize(Value);
end;

function TDrvFR.ReadTable2: Integer;
begin
  Result := DefaultInterface.ReadTable2;
end;

function TDrvFR.WriteTable2: Integer;
begin
  Result := DefaultInterface.WriteTable2;
end;

procedure TDrvFR.SetFieldMinValue(Value: Integer);
begin
  DefaultInterface.SetFieldMinValue(Value);
end;

procedure TDrvFR.SetFieldMaxValue(Value: Integer);
begin
  DefaultInterface.SetFieldMaxValue(Value);
end;

function TDrvFR.CashControlOpen: Integer;
begin
  Result := DefaultInterface.CashControlOpen;
end;

function TDrvFR.CashControlClose: Integer;
begin
  Result := DefaultInterface.CashControlClose;
end;

function TDrvFR.SaveParams: Integer;
begin
  Result := DefaultInterface.SaveParams;
end;

function TDrvFR.GetEKLZCode1Status: Integer;
begin
  Result := DefaultInterface.GetEKLZCode1Status;
end;

function TDrvFR.GetEKLZCode2Status: Integer;
begin
  Result := DefaultInterface.GetEKLZCode2Status;
end;

function TDrvFR.ReadWriteFM: Integer;
begin
  Result := DefaultInterface.ReadWriteFM;
end;

function TDrvFR.PrintHeader: Integer;
begin
  Result := DefaultInterface.PrintHeader;
end;

function TDrvFR.CloseCheckWithResult: Integer;
begin
  Result := DefaultInterface.CloseCheckWithResult;
end;

function TDrvFR.AboutBox: Integer;
begin
  Result := DefaultInterface.AboutBox;
end;

function TDrvFR.PresenterKeep: Integer;
begin
  Result := DefaultInterface.PresenterKeep;
end;

function TDrvFR.PresenterPush: Integer;
begin
  Result := DefaultInterface.PresenterPush;
end;

function TDrvFR.OpenScreen: Integer;
begin
  Result := DefaultInterface.OpenScreen;
end;

function TDrvFR.CloseScreen: Integer;
begin
  Result := DefaultInterface.CloseScreen;
end;

function TDrvFR.SetSCPassword: Integer;
begin
  Result := DefaultInterface.SetSCPassword;
end;

function TDrvFR.MethodSupported: WordBool;
begin
  Result := DefaultInterface.MethodSupported;
end;

function TDrvFR.PropertySupported: WordBool;
begin
  Result := DefaultInterface.PropertySupported;
end;

function TDrvFR.LockPortTimeout: Integer;
begin
  Result := DefaultInterface.LockPortTimeout;
end;

function TDrvFR.GetIBMStatus: Integer;
begin
  Result := DefaultInterface.GetIBMStatus;
end;

function TDrvFR.GetShortIBMStatus: Integer;
begin
  Result := DefaultInterface.GetShortIBMStatus;
end;

function TDrvFR.GetCommandParams: Integer;
begin
  Result := DefaultInterface.GetCommandParams;
end;

function TDrvFR.SetCommandParams: Integer;
begin
  Result := DefaultInterface.SetCommandParams;
end;

function TDrvFR.SaveCommandParams: Integer;
begin
  Result := DefaultInterface.SaveCommandParams;
end;

function TDrvFR.SetAllCommandsParams: Integer;
begin
  Result := DefaultInterface.SetAllCommandsParams;
end;

function TDrvFR.SetDefCommandsParams: Integer;
begin
  Result := DefaultInterface.SetDefCommandsParams;
end;

function TDrvFR.GetInterval: Integer;
begin
  Result := DefaultInterface.GetInterval;
end;

function TDrvFR.OpenSession: Integer;
begin
  Result := DefaultInterface.OpenSession;
end;

function TDrvFR.ReprintSlipDocument: Integer;
begin
  Result := DefaultInterface.ReprintSlipDocument;
end;

function TDrvFR.SetInterval: Integer;
begin
  Result := DefaultInterface.SetInterval;
end;

function TDrvFR.ShowPayParams: Integer;
begin
  Result := DefaultInterface.ShowPayParams;
end;

function TDrvFR.ShowTablesDlg: Integer;
begin
  Result := DefaultInterface.ShowTablesDlg;
end;

function TDrvFR.WaitForPrinting: Integer;
begin
  Result := DefaultInterface.WaitForPrinting;
end;

function TDrvFR.OutputReceipt: Integer;
begin
  Result := DefaultInterface.OutputReceipt;
end;

function TDrvFR.Sale2: Integer;
begin
  Result := DefaultInterface.Sale2;
end;

function TDrvFR.CardPayProperties: Integer;
begin
  Result := DefaultInterface.CardPayProperties;
end;

function TDrvFR.PrintCliche: Integer;
begin
  Result := DefaultInterface.PrintCliche;
end;

function TDrvFR.PrintLine: Integer;
begin
  Result := DefaultInterface.PrintLine;
end;

function TDrvFR.PrintBarcodeLine: Integer;
begin
  Result := DefaultInterface.PrintBarcodeLine;
end;

function TDrvFR.PrintBarcodeGraph: Integer;
begin
  Result := DefaultInterface.PrintBarcodeGraph;
end;

function TDrvFR.ResetECR: Integer;
begin
  Result := DefaultInterface.ResetECR;
end;

function TDrvFR.PrintZReportInBuffer: Integer;
begin
  Result := DefaultInterface.PrintZReportInBuffer;
end;

function TDrvFR.PrintZReportFromBuffer: Integer;
begin
  Result := DefaultInterface.PrintZReportFromBuffer;
end;

function TDrvFR.ClearPrintBuffer: Integer;
begin
  Result := DefaultInterface.ClearPrintBuffer;
end;

function TDrvFR.JournalClear: Integer;
begin
  Result := DefaultInterface.JournalClear;
end;

function TDrvFR.JournalGetRow: Integer;
begin
  Result := DefaultInterface.JournalGetRow;
end;

function TDrvFR.JournalInit: Integer;
begin
  Result := DefaultInterface.JournalInit;
end;

function TDrvFR.ReadPrintBufferLine: Integer;
begin
  Result := DefaultInterface.ReadPrintBufferLine;
end;

function TDrvFR.ReadPrintBufferLineNumber: Integer;
begin
  Result := DefaultInterface.ReadPrintBufferLineNumber;
end;

function TDrvFR.FindDevice: Integer;
begin
  Result := DefaultInterface.FindDevice;
end;

function TDrvFR.LoadParams: Integer;
begin
  Result := DefaultInterface.LoadParams;
end;

function TDrvFR.FinishDocument: Integer;
begin
  Result := DefaultInterface.FinishDocument;
end;

function TDrvFR.PrintTrailer: Integer;
begin
  Result := DefaultInterface.PrintTrailer;
end;

function TDrvFR.WaitForCheckClose: Integer;
begin
  Result := DefaultInterface.WaitForCheckClose;
end;

function TDrvFR.GetSummFactor: Integer;
begin
  Result := DefaultInterface.GetSummFactor;
end;

function TDrvFR.GetQuantityFactor: Integer;
begin
  Result := DefaultInterface.GetQuantityFactor;
end;

function TDrvFR.ReadDeviceMetrics: Integer;
begin
  Result := DefaultInterface.ReadDeviceMetrics;
end;

function TDrvFR.ReadEcrStatus: Integer;
begin
  Result := DefaultInterface.ReadEcrStatus;
end;

function TDrvFR.SaveState: Integer;
begin
  Result := DefaultInterface.SaveState;
end;

function TDrvFR.RestoreState: Integer;
begin
  Result := DefaultInterface.RestoreState;
end;

function TDrvFR.GetPortNames: WideString;
begin
  Result := DefaultInterface.GetPortNames;
end;

function TDrvFR.LoadImage: Integer;
begin
  Result := DefaultInterface.LoadImage;
end;

function TDrvFR.OpenNonfiscalDocument: Integer;
begin
  Result := DefaultInterface.OpenNonfiscalDocument;
end;

function TDrvFR.CloseNonFiscalDocument: Integer;
begin
  Result := DefaultInterface.CloseNonFiscalDocument;
end;

function TDrvFR.PrintAttribute: Integer;
begin
  Result := DefaultInterface.PrintAttribute;
end;

function TDrvFR.ReadModelParamValue: Integer;
begin
  Result := DefaultInterface.ReadModelParamValue;
end;

function TDrvFR.LoadCashControlParams: Integer;
begin
  Result := DefaultInterface.LoadCashControlParams;
end;

function TDrvFR.GetCashAcceptorStatus: Integer;
begin
  Result := DefaultInterface.GetCashAcceptorStatus;
end;

function TDrvFR.GetCashAcceptorRegisters: Integer;
begin
  Result := DefaultInterface.GetCashAcceptorRegisters;
end;

function TDrvFR.CashAcceptorReport: Integer;
begin
  Result := DefaultInterface.CashAcceptorReport;
end;

function TDrvFR.ReadBanknoteCount: Integer;
begin
  Result := DefaultInterface.ReadBanknoteCount;
end;

function TDrvFR.PrintOperationalTaxReport: Integer;
begin
  Result := DefaultInterface.PrintOperationalTaxReport;
end;

function TDrvFR.WaitConnection: Integer;
begin
  Result := DefaultInterface.WaitConnection;
end;

function TDrvFR.ReadModelParamDescription: Integer;
begin
  Result := DefaultInterface.ReadModelParamDescription;
end;

function TDrvFR.PrintBarcodeUsingPrinter: Integer;
begin
  Result := DefaultInterface.PrintBarcodeUsingPrinter;
end;

function TDrvFR.CloseCheckWithKPK: Integer;
begin
  Result := DefaultInterface.CloseCheckWithKPK;
end;

function TDrvFR.ReadEKLZActivizationParams: Integer;
begin
  Result := DefaultInterface.ReadEKLZActivizationParams;
end;

function TDrvFR.GetShortReportInSessionRange: Integer;
begin
  Result := DefaultInterface.GetShortReportInSessionRange;
end;

function TDrvFR.GetShortReportInDatesRange: Integer;
begin
  Result := DefaultInterface.GetShortReportInDatesRange;
end;

function TDrvFR.ClearResult: Integer;
begin
  Result := DefaultInterface.ClearResult;
end;

function TDrvFR.ReadLastReceipt: Integer;
begin
  Result := DefaultInterface.ReadLastReceipt;
end;

function TDrvFR.ReadLastReceiptLine: Integer;
begin
  Result := DefaultInterface.ReadLastReceiptLine;
end;

function TDrvFR.ReadLastReceiptMac: Integer;
begin
  Result := DefaultInterface.ReadLastReceiptMac;
end;

function TDrvFR.MasterPayClearBuffer: Integer;
begin
  Result := DefaultInterface.MasterPayClearBuffer;
end;

function TDrvFR.MasterPayAddTextBlock: Integer;
begin
  Result := DefaultInterface.MasterPayAddTextBlock;
end;

function TDrvFR.MasterPayCreateMac: Integer;
begin
  Result := DefaultInterface.MasterPayCreateMac;
end;

function TDrvFR.BeginDocument: Integer;
begin
  Result := DefaultInterface.BeginDocument;
end;

function TDrvFR.EndDocument: Integer;
begin
  Result := DefaultInterface.EndDocument;
end;

function TDrvFR.LoadBlockData: Integer;
begin
  Result := DefaultInterface.LoadBlockData;
end;

function TDrvFR.Print2DBarcode: Integer;
begin
  Result := DefaultInterface.Print2DBarcode;
end;

function TDrvFR.LoadAndPrint2DBarcode: Integer;
begin
  Result := DefaultInterface.LoadAndPrint2DBarcode;
end;

function TDrvFR.ExcisableOperation: Integer;
begin
  Result := DefaultInterface.ExcisableOperation;
end;

function TDrvFR.ReadReportBufferLine: Integer;
begin
  Result := DefaultInterface.ReadReportBufferLine;
end;

function TDrvFR.ReadParams: Integer;
begin
  Result := DefaultInterface.ReadParams;
end;

function TDrvFR.GetEKLZCode3Report: Integer;
begin
  Result := DefaultInterface.GetEKLZCode3Report;
end;

function TDrvFR.ReadModemParameter: Integer;
begin
  Result := DefaultInterface.ReadModemParameter;
end;

function TDrvFR.WriteModemParameter: Integer;
begin
  Result := DefaultInterface.WriteModemParameter;
end;

function TDrvFR.GetCashRegEx: Integer;
begin
  Result := DefaultInterface.GetCashRegEx;
end;

function TDrvFR.GetWareBaseCashRegs: Integer;
begin
  Result := DefaultInterface.GetWareBaseCashRegs;
end;

function TDrvFR.PrintCashierReport: Integer;
begin
  Result := DefaultInterface.PrintCashierReport;
end;

function TDrvFR.PrintHourlyReport: Integer;
begin
  Result := DefaultInterface.PrintHourlyReport;
end;

function TDrvFR.PrintWareReport: Integer;
begin
  Result := DefaultInterface.PrintWareReport;
end;

function TDrvFR.UpdateWare: Integer;
begin
  Result := DefaultInterface.UpdateWare;
end;

function TDrvFR.ReadWare: Integer;
begin
  Result := DefaultInterface.ReadWare;
end;

function TDrvFR.RemoveWare: Integer;
begin
  Result := DefaultInterface.RemoveWare;
end;

function TDrvFR.CheckFM: Integer;
begin
  Result := DefaultInterface.CheckFM;
end;

function TDrvFR.ReadErrorDescription: Integer;
begin
  Result := DefaultInterface.ReadErrorDescription;
end;

function TDrvFR.ReadModelParam: Integer;
begin
  Result := DefaultInterface.ReadModelParam;
end;

function TDrvFR.InitEEPROM: Integer;
begin
  Result := DefaultInterface.InitEEPROM;
end;

function TDrvFR.CheckConnection: Integer;
begin
  Result := DefaultInterface.CheckConnection;
end;

function TDrvFR.ChangeProtocol: Integer;
begin
  Result := DefaultInterface.ChangeProtocol;
end;

function TDrvFR.GetECRParams: Integer;
begin
  Result := DefaultInterface.GetECRParams;
end;

function TDrvFR.JournalOperation: Integer;
begin
  Result := DefaultInterface.JournalOperation;
end;

function TDrvFR.GetMFPCode3Status: Integer;
begin
  Result := DefaultInterface.GetMFPCode3Status;
end;

function TDrvFR.MFPPrepareActivization: Integer;
begin
  Result := DefaultInterface.MFPPrepareActivization;
end;

function TDrvFR.MFPGetPermitActivizationCode: Integer;
begin
  Result := DefaultInterface.MFPGetPermitActivizationCode;
end;

function TDrvFR.MFPActivization: Integer;
begin
  Result := DefaultInterface.MFPActivization;
end;

function TDrvFR.MFPGetPrepareActivizationResult: Integer;
begin
  Result := DefaultInterface.MFPGetPrepareActivizationResult;
end;

function TDrvFR.MFPGetCustomerCode: Integer;
begin
  Result := DefaultInterface.MFPGetCustomerCode;
end;

function TDrvFR.MFPCloseArchive: Integer;
begin
  Result := DefaultInterface.MFPCloseArchive;
end;

function TDrvFR.MFPSetCustomerCode: Integer;
begin
  Result := DefaultInterface.MFPSetCustomerCode;
end;

function TDrvFR.MFPSetPermitActivizationCode: Integer;
begin
  Result := DefaultInterface.MFPSetPermitActivizationCode;
end;

function TDrvFR.CloseCheckEx: Integer;
begin
  Result := DefaultInterface.CloseCheckEx;
end;

function TDrvFR.ClearReportBuffer: Integer;
begin
  Result := DefaultInterface.ClearReportBuffer;
end;

function TDrvFR.ShowAdditionalParams: Integer;
begin
  Result := DefaultInterface.ShowAdditionalParams;
end;

function TDrvFR.GetCloudCashdeskParams: Integer;
begin
  Result := DefaultInterface.GetCloudCashdeskParams;
end;

function TDrvFR.DrawScale: Integer;
begin
  Result := DefaultInterface.DrawScale;
end;

function TDrvFR.PrintGraphics512: Integer;
begin
  Result := DefaultInterface.PrintGraphics512;
end;

function TDrvFR.LoadGraphics512: Integer;
begin
  Result := DefaultInterface.LoadGraphics512;
end;

function TDrvFR.FNGetStatus: Integer;
begin
  Result := DefaultInterface.FNGetStatus;
end;

function TDrvFR.FNGetSerial: Integer;
begin
  Result := DefaultInterface.FNGetSerial;
end;

function TDrvFR.FNGetExpirationTime: Integer;
begin
  Result := DefaultInterface.FNGetExpirationTime;
end;

function TDrvFR.FNGetVersion: Integer;
begin
  Result := DefaultInterface.FNGetVersion;
end;

function TDrvFR.FNBeginFiscalization: Integer;
begin
  Result := DefaultInterface.FNBeginFiscalization;
end;

function TDrvFR.FNFiscalization: Integer;
begin
  Result := DefaultInterface.FNFiscalization;
end;

function TDrvFR.FNResetState: Integer;
begin
  Result := DefaultInterface.FNResetState;
end;

function TDrvFR.FNCancelDocument: Integer;
begin
  Result := DefaultInterface.FNCancelDocument;
end;

function TDrvFR.FNGetFiscalizationResult: Integer;
begin
  Result := DefaultInterface.FNGetFiscalizationResult;
end;

function TDrvFR.FNFindDocument: Integer;
begin
  Result := DefaultInterface.FNFindDocument;
end;

function TDrvFR.FNOpenSession: Integer;
begin
  Result := DefaultInterface.FNOpenSession;
end;

function TDrvFR.FNSendTLV: Integer;
begin
  Result := DefaultInterface.FNSendTLV;
end;

function TDrvFR.FNDiscountOperation: Integer;
begin
  Result := DefaultInterface.FNDiscountOperation;
end;

function TDrvFR.FNStorno: Integer;
begin
  Result := DefaultInterface.FNStorno;
end;

function TDrvFR.FNBeginRegistrationReport: Integer;
begin
  Result := DefaultInterface.FNBeginRegistrationReport;
end;

function TDrvFR.FNBuildRegistrationReport: Integer;
begin
  Result := DefaultInterface.FNBuildRegistrationReport;
end;

function TDrvFR.FNBeginCorrectionReceipt: Integer;
begin
  Result := DefaultInterface.FNBeginCorrectionReceipt;
end;

function TDrvFR.FNBuildCorrectionReceipt: Integer;
begin
  Result := DefaultInterface.FNBuildCorrectionReceipt;
end;

function TDrvFR.FNBeginCalculationStateReport: Integer;
begin
  Result := DefaultInterface.FNBeginCalculationStateReport;
end;

function TDrvFR.FNBuildCalculationStateReport: Integer;
begin
  Result := DefaultInterface.FNBuildCalculationStateReport;
end;

function TDrvFR.FNCloseSession: Integer;
begin
  Result := DefaultInterface.FNCloseSession;
end;

function TDrvFR.FNGetInfoExchangeStatus: Integer;
begin
  Result := DefaultInterface.FNGetInfoExchangeStatus;
end;

function TDrvFR.FNRequestFiscalDocumentTLV: Integer;
begin
  Result := DefaultInterface.FNRequestFiscalDocumentTLV;
end;

function TDrvFR.FNReadFiscalDocumentTLV: Integer;
begin
  Result := DefaultInterface.FNReadFiscalDocumentTLV;
end;

function TDrvFR.FNGetOFDTicketByDocNumber: Integer;
begin
  Result := DefaultInterface.FNGetOFDTicketByDocNumber;
end;

function TDrvFR.FNBeginCloseFiscalMode: Integer;
begin
  Result := DefaultInterface.FNBeginCloseFiscalMode;
end;

function TDrvFR.FNCloseFiscalMode: Integer;
begin
  Result := DefaultInterface.FNCloseFiscalMode;
end;

function TDrvFR.FNGetUnconfirmedDocCount: Integer;
begin
  Result := DefaultInterface.FNGetUnconfirmedDocCount;
end;

function TDrvFR.FNGetCurrentSessionParams: Integer;
begin
  Result := DefaultInterface.FNGetCurrentSessionParams;
end;

function TDrvFR.FNBeginOpenSession: Integer;
begin
  Result := DefaultInterface.FNBeginOpenSession;
end;

function TDrvFR.FNBeginCloseSession: Integer;
begin
  Result := DefaultInterface.FNBeginCloseSession;
end;

function TDrvFR.FNBuildReregistrationReport: Integer;
begin
  Result := DefaultInterface.FNBuildReregistrationReport;
end;

function TDrvFR.FNDiscountTaxOperation: Integer;
begin
  Result := DefaultInterface.FNDiscountTaxOperation;
end;

function TDrvFR.FNCloseCheckEx: Integer;
begin
  Result := DefaultInterface.FNCloseCheckEx;
end;

function TDrvFR.FNSendCustomerEmail: Integer;
begin
  Result := DefaultInterface.FNSendCustomerEmail;
end;

function TDrvFR.Annulment: Integer;
begin
  Result := DefaultInterface.Annulment;
end;

function TDrvFR.FNDiscountChargeRN: Integer;
begin
  Result := DefaultInterface.FNDiscountChargeRN;
end;

function TDrvFR.ImportTables: Integer;
begin
  Result := DefaultInterface.ImportTables;
end;

function TDrvFR.ExportTables: Integer;
begin
  Result := DefaultInterface.ExportTables;
end;

function TDrvFR.FNSendTag: Integer;
begin
  Result := DefaultInterface.FNSendTag;
end;

function TDrvFR.ReadSerialNumber: Integer;
begin
  Result := DefaultInterface.ReadSerialNumber;
end;

function TDrvFR.FNPrintOperatorConfirm: Integer;
begin
  Result := DefaultInterface.FNPrintOperatorConfirm;
end;

function TDrvFR.FNGetFiscalizationResultByNumber: Integer;
begin
  Result := DefaultInterface.FNGetFiscalizationResultByNumber;
end;

function TDrvFR.AnnulmentRB: Integer;
begin
  Result := DefaultInterface.AnnulmentRB;
end;

function TDrvFR.FNGetTagDescription: Integer;
begin
  Result := DefaultInterface.FNGetTagDescription;
end;

function TDrvFR.FNPrintDocument: Integer;
begin
  Result := DefaultInterface.FNPrintDocument;
end;

function TDrvFR.FNGetDocumentAsString: Integer;
begin
  Result := DefaultInterface.FNGetDocumentAsString;
end;

function TDrvFR.Ping: Integer;
begin
  Result := DefaultInterface.Ping;
end;

function TDrvFR.FNOperation: Integer;
begin
  Result := DefaultInterface.FNOperation;
end;

function TDrvFR.FNSendTLVOperation: Integer;
begin
  Result := DefaultInterface.FNSendTLVOperation;
end;

function TDrvFR.FNBuildCorrectionReceipt2: Integer;
begin
  Result := DefaultInterface.FNBuildCorrectionReceipt2;
end;

function TDrvFR.FNGetNonClearableSumm: Integer;
begin
  Result := DefaultInterface.FNGetNonClearableSumm;
end;

function TDrvFR.ResetSerialNumber: Integer;
begin
  Result := DefaultInterface.ResetSerialNumber;
end;

function TDrvFR.DBFindDocument: Integer;
begin
  Result := DefaultInterface.DBFindDocument;
end;

function TDrvFR.DBPrintDocument: Integer;
begin
  Result := DefaultInterface.DBPrintDocument;
end;

function TDrvFR.ReadKKTLicenses: Integer;
begin
  Result := DefaultInterface.ReadKKTLicenses;
end;

function TDrvFR.GetKKTLicenseByNumber: Integer;
begin
  Result := DefaultInterface.GetKKTLicenseByNumber;
end;

function TDrvFR.CloseCheckBel: Integer;
begin
  Result := DefaultInterface.CloseCheckBel;
end;

function TDrvFR.WriteKKTLicense: Integer;
begin
  Result := DefaultInterface.WriteKKTLicense;
end;

function TDrvFR.FNSendSenderEmail: Integer;
begin
  Result := DefaultInterface.FNSendSenderEmail;
end;

function TDrvFR.DBQueryDocumentsInSession: Integer;
begin
  Result := DefaultInterface.DBQueryDocumentsInSession;
end;

function TDrvFR.DBGetNextDocument: Integer;
begin
  Result := DefaultInterface.DBGetNextDocument;
end;

function TDrvFR.DBPrintNextDocument: Integer;
begin
  Result := DefaultInterface.DBPrintNextDocument;
end;

function TDrvFR.OnlinePay: Integer;
begin
  Result := DefaultInterface.OnlinePay;
end;

function TDrvFR.OPGetLastStatus: Integer;
begin
  Result := DefaultInterface.OPGetLastStatus;
end;

function TDrvFR.OPGetLastRequisite: Integer;
begin
  Result := DefaultInterface.OPGetLastRequisite;
end;

function TDrvFR.GenerateMonoToken: Integer;
begin
  Result := DefaultInterface.GenerateMonoToken;
end;

function TDrvFR.RebootKKT: Integer;
begin
  Result := DefaultInterface.RebootKKT;
end;

function TDrvFR.FNSendTagOperation: Integer;
begin
  Result := DefaultInterface.FNSendTagOperation;
end;

function TDrvFR.FNBeginSTLVTag: Integer;
begin
  Result := DefaultInterface.FNBeginSTLVTag;
end;

function TDrvFR.FNAddTag: Integer;
begin
  Result := DefaultInterface.FNAddTag;
end;

function TDrvFR.FNSendSTLVTagOperation: Integer;
begin
  Result := DefaultInterface.FNSendSTLVTagOperation;
end;

function TDrvFR.FNSendSTLVTag: Integer;
begin
  Result := DefaultInterface.FNSendSTLVTag;
end;

function TDrvFR.LoadFontSymbol: Integer;
begin
  Result := DefaultInterface.LoadFontSymbol;
end;

function TDrvFR.LoadFont: Integer;
begin
  Result := DefaultInterface.LoadFont;
end;

function TDrvFR.LoadBlockOnSDCard: Integer;
begin
  Result := DefaultInterface.LoadBlockOnSDCard;
end;

function TDrvFR.LoadFileOnSDCard: Integer;
begin
  Result := DefaultInterface.LoadFileOnSDCard;
end;

function TDrvFR.PrintStringWithWrap: Integer;
begin
  Result := DefaultInterface.PrintStringWithWrap;
end;

function TDrvFR.FNSendItemCodeData: Integer;
begin
  Result := DefaultInterface.FNSendItemCodeData;
end;

function TDrvFR.FNCheckItemBarcode: Integer;
begin
  Result := DefaultInterface.FNCheckItemBarcode;
end;

function TDrvFR.FNRequestRegistrationTLV: Integer;
begin
  Result := DefaultInterface.FNRequestRegistrationTLV;
end;

function TDrvFR.ReadLoaderVersion: Integer;
begin
  Result := DefaultInterface.ReadLoaderVersion;
end;

function TDrvFR.FNOpenCheckCorrection: Integer;
begin
  Result := DefaultInterface.FNOpenCheckCorrection;
end;

function TDrvFR.FNCountersSync: Integer;
begin
  Result := DefaultInterface.FNCountersSync;
end;

function TDrvFR.FNGetFreeMemoryResource: Integer;
begin
  Result := DefaultInterface.FNGetFreeMemoryResource;
end;

function TDrvFR.UpdateFirmware: Integer;
begin
  Result := DefaultInterface.UpdateFirmware;
end;

function TDrvFR.SetDFUMode: Integer;
begin
  Result := DefaultInterface.SetDFUMode;
end;

function TDrvFR.CancelFirmwareUpdate: Integer;
begin
  Result := DefaultInterface.CancelFirmwareUpdate;
end;

function TDrvFR.WriteRNMTj: Integer;
begin
  Result := DefaultInterface.WriteRNMTj;
end;

function TDrvFR.ReadRNMTj: Integer;
begin
  Result := DefaultInterface.ReadRNMTj;
end;

function TDrvFR.FNGetNonClearableSummEx: Integer;
begin
  Result := DefaultInterface.FNGetNonClearableSummEx;
end;

function TDrvFR.WriteAuthKey: Integer;
begin
  Result := DefaultInterface.WriteAuthKey;
end;

function TDrvFR.RewriteAuthKey: Integer;
begin
  Result := DefaultInterface.RewriteAuthKey;
end;

function TDrvFR.ResetAuthKey: Integer;
begin
  Result := DefaultInterface.ResetAuthKey;
end;

function TDrvFR.SaveAuthKey: Integer;
begin
  Result := DefaultInterface.SaveAuthKey;
end;

function TDrvFR.DeleteAuthKey: Integer;
begin
  Result := DefaultInterface.DeleteAuthKey;
end;

function TDrvFR.FNBindMarkingItem: Integer;
begin
  Result := DefaultInterface.FNBindMarkingItem;
end;

function TDrvFR.FNGetKMServerExchangeStatus: Integer;
begin
  Result := DefaultInterface.FNGetKMServerExchangeStatus;
end;

function TDrvFR.FNAcceptMakringCode: Integer;
begin
  Result := DefaultInterface.FNAcceptMakringCode;
end;

function TDrvFR.FNDeclineMarkingCode: Integer;
begin
  Result := DefaultInterface.FNDeclineMarkingCode;
end;

function TDrvFR.ReadFeatureLicenses: Integer;
begin
  Result := DefaultInterface.ReadFeatureLicenses;
end;

function TDrvFR.WriteFeatureLicenses: Integer;
begin
  Result := DefaultInterface.WriteFeatureLicenses;
end;

function TDrvFR.PluginsUpdateSettings: Integer;
begin
  Result := DefaultInterface.PluginsUpdateSettings;
end;

function TDrvFR.FNSendUserAttribute: Integer;
begin
  Result := DefaultInterface.FNSendUserAttribute;
end;

function TDrvFR.FNSendItemBarcode: Integer;
begin
  Result := DefaultInterface.FNSendItemBarcode;
end;

function TDrvFR.FNBeginReadArchive: Integer;
begin
  Result := DefaultInterface.FNBeginReadArchive;
end;

function TDrvFR.FNReadArchiveItem: Integer;
begin
  Result := DefaultInterface.FNReadArchiveItem;
end;

function TDrvFR.FNSaveArchive: Integer;
begin
  Result := DefaultInterface.FNSaveArchive;
end;

function TDrvFR.FNOperationMdlp: Integer;
begin
  Result := DefaultInterface.FNOperationMdlp;
end;

function TDrvFR.FNCloseCheckMdlp: Integer;
begin
  Result := DefaultInterface.FNCloseCheckMdlp;
end;

function TDrvFR.FNGetMarkingCodeWorkStatus: Integer;
begin
  Result := DefaultInterface.FNGetMarkingCodeWorkStatus;
end;

function TDrvFR.GetTagAsTLV: Integer;
begin
  Result := DefaultInterface.GetTagAsTLV;
end;

function TDrvFR.FNBeginReadNotifications: Integer;
begin
  Result := DefaultInterface.FNBeginReadNotifications;
end;

function TDrvFR.FNReadNotificationBlock: Integer;
begin
  Result := DefaultInterface.FNReadNotificationBlock;
end;

function TDrvFR.FNConfirmNotificationRead: Integer;
begin
  Result := DefaultInterface.FNConfirmNotificationRead;
end;

function TDrvFR.FNAcceptMarkingCode: Integer;
begin
  Result := DefaultInterface.FNAcceptMarkingCode;
end;

function TDrvFR.FNReadFiscalBarcode: Integer;
begin
  Result := DefaultInterface.FNReadFiscalBarcode;
end;

function TDrvFR.FNMarkingClearBuffer: Integer;
begin
  Result := DefaultInterface.FNMarkingClearBuffer;
end;

function TDrvFR.FNCheckItemBarcode2: Integer;
begin
  Result := DefaultInterface.FNCheckItemBarcode2;
end;

function TDrvFR.PlainTransferEnable: Integer;
begin
  Result := DefaultInterface.PlainTransferEnable;
end;

function TDrvFR.PlainTransferDisable: Integer;
begin
  Result := DefaultInterface.PlainTransferDisable;
end;

function TDrvFR.ReadFontHash: Integer;
begin
  Result := DefaultInterface.ReadFontHash;
end;

function TDrvFR.ResetFont: Integer;
begin
  Result := DefaultInterface.ResetFont;
end;

procedure Register;
begin
  RegisterComponents(dtlOcxPage, [TDrvFR1C, TDrvFR1C11, TDrvFR1C17, TDrvFR1C22, 
    TDrvFR1C30, TDrvFR]);
end;

end.
